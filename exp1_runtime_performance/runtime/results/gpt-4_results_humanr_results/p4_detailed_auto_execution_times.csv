problem,prompt_name,code_index,code_segment,Size,Min,Average,Max,Exception
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arr, target_sum):\n    elements_count = {}\n    pairs_count = 0\n    for i in arr:\n        needed_value = target_sum - i\n        if needed_value in elements_count:\n            pairs_count += elements_count[needed_value]\n        elements_count[i] = elements_count.get(i, 0) + 1\n    return pairs_count']",1000,0.0067469999999900665,0.007147475000000725,0.007658700000007457,N/A
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arr, target_sum):\n    elements_count = {}\n    pairs_count = 0\n    for i in arr:\n        needed_value = target_sum - i\n        if needed_value in elements_count:\n            pairs_count += elements_count[needed_value]\n        elements_count[i] = elements_count.get(i, 0) + 1\n    return pairs_count']",10000,0.07183260000002178,0.07468932099999989,0.08675039999999967,N/A
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arr, target_sum):\n    elements_count = {}\n    pairs_count = 0\n    for i in arr:\n        needed_value = target_sum - i\n        if needed_value in elements_count:\n            pairs_count += elements_count[needed_value]\n        elements_count[i] = elements_count.get(i, 0) + 1\n    return pairs_count']",100000,1.12441800000002,1.1551627249999996,1.2186448999999868,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count, freq = (0, {})\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.0065278000000148495,0.006897167999998715,0.008463000000006105,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count, freq = (0, {})\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.0710014000000001,0.07366086300000063,0.08509460000004765,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count, freq = (0, {})\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1134911999999986,1.1386159770000013,1.169331600000021,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            count += seen[target]\n    return count']",1000,0.0052694999999971515,0.005572449000000574,0.00750599999997803,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            count += seen[target]\n    return count']",10000,0.05743589999997312,0.05972309700000096,0.0647675000000163,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            count += seen[target]\n    return count']",100000,0.9396707999999876,0.9606011689999991,0.9820998000000145,N/A
p4_sum_array_pairs,prompt_1,4,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_pairs = 0\n    found_values = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in found_values:\n            num_pairs += found_values[complement]\n        if number in found_values:\n            found_values[number] += 1\n        else:\n            found_values[number] = 1\n    return num_pairs']",1000,0.0061512999999990825,0.0065911990000000744,0.010808499999996002,N/A
p4_sum_array_pairs,prompt_1,4,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_pairs = 0\n    found_values = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in found_values:\n            num_pairs += found_values[complement]\n        if number in found_values:\n            found_values[number] += 1\n        else:\n            found_values[number] = 1\n    return num_pairs']",10000,0.06711059999997815,0.0702884999999992,0.0797863000000234,N/A
p4_sum_array_pairs,prompt_1,4,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_pairs = 0\n    found_values = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in found_values:\n            num_pairs += found_values[complement]\n        if number in found_values:\n            found_values[number] += 1\n        else:\n            found_values[number] = 1\n    return num_pairs']",100000,1.0717455999999856,1.099553596,1.1218279999999368,N/A
p4_sum_array_pairs,prompt_1,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.00671429999999873,0.00711865799999373,0.010562199999981203,N/A
p4_sum_array_pairs,prompt_1,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.0723552000000609,0.07552411699999424,0.08503929999994853,N/A
p4_sum_array_pairs,prompt_1,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1244388000000072,1.154688161999992,1.2141580999999633,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    pairs = 0\n    hashmap = {}\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in hashmap:\n            pairs += hashmap[compliment]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs']",1000,0.006290299999932358,0.006539550999998482,0.006984900000020389,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    pairs = 0\n    hashmap = {}\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in hashmap:\n            pairs += hashmap[compliment]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs']",10000,0.06910989999994399,0.07149260599999935,0.09644839999998567,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    pairs = 0\n    hashmap = {}\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in hashmap:\n            pairs += hashmap[compliment]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs']",100000,1.0646441999999752,1.0904390779999915,1.1784962000000405,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    res = 0\n    count_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            res += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return res']",1000,0.006225200000017139,0.006493511999999555,0.008133799999995972,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    res = 0\n    count_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            res += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return res']",10000,0.06772039999998469,0.06940624400000729,0.08600680000006378,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    res = 0\n    count_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            res += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return res']",100000,1.0759960999999976,1.0918909789999929,1.1135101000000986,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    result = 0\n    checker = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in checker:\n            result += checker[diff]\n        if num not in checker:\n            checker[num] = 1\n        else:\n            checker[num] += 1\n    return result']",1000,0.006249499999967156,0.006554869000002555,0.007167699999968136,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    result = 0\n    checker = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in checker:\n            result += checker[diff]\n        if num not in checker:\n            checker[num] = 1\n        else:\n            checker[num] += 1\n    return result']",10000,0.06846050000001469,0.07017511700000455,0.07562899999993533,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    result = 0\n    checker = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in checker:\n            result += checker[diff]\n        if num not in checker:\n            checker[num] = 1\n        else:\n            checker[num] += 1\n    return result']",100000,1.085921800000051,1.1020060439999997,1.1382415999999012,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006761200000028111,0.007160031000016716,0.010097900000118898,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.0737607000000935,0.07523001899998462,0.08313109999994595,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1336624000000484,1.1515485419999936,1.1945731999999225,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        count += seen.get(difference, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.007535500000130924,0.008015660999992633,0.011064900000064881,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        count += seen.get(difference, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.08103150000010828,0.08307016500001282,0.0893645999999535,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        count += seen.get(difference, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2142619000001105,1.2309484359999943,1.2563555000001543,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            output += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return output']",1000,0.006761200000028111,0.00715591999999333,0.011330399999906149,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            output += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return output']",10000,0.07309599999985039,0.07485052200000837,0.07733289999987392,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            output += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return output']",100000,1.137167399999953,1.1513015790000076,1.1731902999999875,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            pair_count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return pair_count']",1000,0.006568799999968178,0.006915091000000757,0.007324700000026496,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            pair_count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return pair_count']",10000,0.07165530000020226,0.07374851000001172,0.08636870000009367,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            pair_count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return pair_count']",100000,1.1198711999998068,1.1370511790000069,1.1596072999998341,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    table = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in table:\n            pair_count += table[arg2 - num]\n        table[num] = table.get(num, 0) + 1\n    return pair_count']",1000,0.0065469999999550055,0.006885947999996915,0.007375800000090749,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    table = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in table:\n            pair_count += table[arg2 - num]\n        table[num] = table.get(num, 0) + 1\n    return pair_count']",10000,0.07233359999986533,0.07339784200000622,0.0764489999999114,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    table = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in table:\n            pair_count += table[arg2 - num]\n        table[num] = table.get(num, 0) + 1\n    return pair_count']",100000,1.1228622999999516,1.1386511870000005,1.1575851000000057,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_checked = set()\n    for ele in arg1:\n        if arg2 - ele in elements_checked:\n            count += 1\n        elements_checked.add(ele)\n    return count']",1000,0.004338800000141418,0.004477678000005199,0.004721299999800976,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_checked = set()\n    for ele in arg1:\n        if arg2 - ele in elements_checked:\n            count += 1\n        elements_checked.add(ele)\n    return count']",10000,0.053168599999935395,0.054767281999995705,0.05672669999989921,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_checked = set()\n    for ele in arg1:\n        if arg2 - ele in elements_checked:\n            count += 1\n        elements_checked.add(ele)\n    return count']",100000,0.8284496999999647,0.8410960330000035,0.8783849000001283,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",1000,0.007681399999910354,0.008023752999999943,0.008422699999982797,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",10000,0.08063280000010309,0.08246069899999839,0.09056989999999132,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",100000,1.2227282999999716,1.2391079320000062,1.28442670000004,N/A
p4_sum_array_pairs,prompt_1,16,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.00677840000003016,0.007104789999982586,0.007654199999933553,N/A
p4_sum_array_pairs,prompt_1,16,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07450490000019272,0.07599714300000188,0.07904419999999845,N/A
p4_sum_array_pairs,prompt_1,16,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.134833399999934,1.149931276999996,1.174555699999928,N/A
p4_sum_array_pairs,prompt_1,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement not in seen:\n            seen.add(num)\n        else:\n            seen.remove(complement)\n            count += 1\n    return count']",1000,0.004511999999976979,0.004725680000005923,0.005109400000037567,N/A
p4_sum_array_pairs,prompt_1,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement not in seen:\n            seen.add(num)\n        else:\n            seen.remove(complement)\n            count += 1\n    return count']",10000,0.055668299999979354,0.057288311000020256,0.06079040000031455,N/A
p4_sum_array_pairs,prompt_1,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement not in seen:\n            seen.add(num)\n        else:\n            seen.remove(complement)\n            count += 1\n    return count']",100000,0.8509624000002987,0.8647589919999973,0.8929411999997683,N/A
p4_sum_array_pairs,prompt_1,18,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += 1\n        map[num] = num\n    return count']",1000,0.005299899999954505,0.005532963000014206,0.00704730000006748,N/A
p4_sum_array_pairs,prompt_1,18,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += 1\n        map[num] = num\n    return count']",10000,0.058048999999755324,0.06005922600001668,0.07668850000027305,N/A
p4_sum_array_pairs,prompt_1,18,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += 1\n        map[num] = num\n    return count']",100000,0.9511449999999968,0.9610740849999729,0.9893734999996013,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement not in seen:\n            seen.add(number)\n        else:\n            counter += 1\n    return counter']",1000,0.004428499999903579,0.004722870999999031,0.00585929999988366,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement not in seen:\n            seen.add(number)\n        else:\n            counter += 1\n    return counter']",10000,0.05518229999961477,0.05710226199998033,0.06619620000037685,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement not in seen:\n            seen.add(number)\n        else:\n            counter += 1\n    return counter']",100000,0.8373351999998704,0.8465994009999668,0.8787861000000703,N/A
p4_sum_array_pairs,prompt_1,20,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hashtable = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashtable:\n            count += hashtable[arg2 - num]\n        hashtable[num] += 1\n    return count']",1000,0.010394999999789434,0.010738048000034724,0.013069999999970605,N/A
p4_sum_array_pairs,prompt_1,20,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hashtable = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashtable:\n            count += hashtable[arg2 - num]\n        hashtable[num] += 1\n    return count']",10000,0.10473759999968024,0.10675382999998874,0.11215530000026774,N/A
p4_sum_array_pairs,prompt_1,20,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hashtable = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashtable:\n            count += hashtable[arg2 - num]\n        hashtable[num] += 1\n    return count']",100000,1.4709047000001192,1.489284789000003,1.524551800000154,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    sumMap = {}\n    for num in arg1:\n        if arg2 - num in sumMap:\n            count += sumMap[arg2 - num]\n        sumMap[num] = sumMap.get(num, 0) + 1\n    return count']",1000,0.00659189999987575,0.006933997999994972,0.008095500000308675,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    sumMap = {}\n    for num in arg1:\n        if arg2 - num in sumMap:\n            count += sumMap[arg2 - num]\n        sumMap[num] = sumMap.get(num, 0) + 1\n    return count']",10000,0.07186789999968823,0.0735395059999837,0.07707909999999174,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    sumMap = {}\n    for num in arg1:\n        if arg2 - num in sumMap:\n            count += sumMap[arg2 - num]\n        sumMap[num] = sumMap.get(num, 0) + 1\n    return count']",100000,1.120288900000105,1.1386637279999832,1.1714368999996623,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num not in seen:\n            seen[num] = 0\n        seen[num] += 1\n    return count']",1000,0.009163299999727315,0.009428523000015048,0.010716299999785406,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num not in seen:\n            seen[num] = 0\n        seen[num] += 1\n    return count']",10000,0.09413730000005671,0.09672865200000161,0.10346269999990909,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num not in seen:\n            seen[num] = 0\n        seen[num] += 1\n    return count']",100000,1.3514537000000928,1.3663116409999747,1.3938585999999304,N/A
p4_sum_array_pairs,prompt_1,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006023100000220438,0.006408627999994678,0.009101600000121834,N/A
p4_sum_array_pairs,prompt_1,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06675159999986136,0.06889059699998143,0.07592250000016065,N/A
p4_sum_array_pairs,prompt_1,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.07747530000006,1.0928568659999747,1.1270100000001548,N/A
p4_sum_array_pairs,prompt_1,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    memo = {}\n    count = 0\n    for i in arg1:\n        target = arg2 - i\n        if target in memo:\n            count += memo[target]\n        if i in memo:\n            memo[i] += 1\n        else:\n            memo[i] = 1\n    return count']",1000,0.006163999999898806,0.006505922999990616,0.007142700000258628,N/A
p4_sum_array_pairs,prompt_1,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    memo = {}\n    count = 0\n    for i in arg1:\n        target = arg2 - i\n        if target in memo:\n            count += memo[target]\n        if i in memo:\n            memo[i] += 1\n        else:\n            memo[i] = 1\n    return count']",10000,0.06821830000035334,0.06983070599998427,0.07352209999999104,N/A
p4_sum_array_pairs,prompt_1,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    memo = {}\n    count = 0\n    for i in arg1:\n        target = arg2 - i\n        if target in memo:\n            count += memo[target]\n        if i in memo:\n            memo[i] += 1\n        else:\n            memo[i] = 1\n    return count']",100000,1.0817861000000448,1.0951253560000214,1.1149672000001374,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006205300000146963,0.0064742700000033435,0.007039799999802199,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06849250000004758,0.0697965170000316,0.07316420000006474,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.0805948999995962,1.0929936859999954,1.1164100999999391,N/A
p4_sum_array_pairs,prompt_1,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    arg1.sort()\n    count = 0\n    l = 0\n    r = len(arg1) - 1\n    while l < r:\n        if arg1[l] + arg1[r] == arg2:\n            count += 1\n            l += 1\n            r -= 1\n        elif arg1[l] + arg1[r] < arg2:\n            l += 1\n        else:\n            r -= 1\n    pass']",1000,0.005442199999833974,0.005744610999981887,0.0067051000000901695,N/A
p4_sum_array_pairs,prompt_1,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    arg1.sort()\n    count = 0\n    l = 0\n    r = len(arg1) - 1\n    while l < r:\n        if arg1[l] + arg1[r] == arg2:\n            count += 1\n            l += 1\n            r -= 1\n        elif arg1[l] + arg1[r] < arg2:\n            l += 1\n        else:\n            r -= 1\n    pass']",10000,0.057898999999906664,0.059729540999987875,0.07094019999976808,N/A
p4_sum_array_pairs,prompt_1,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    arg1.sort()\n    count = 0\n    l = 0\n    r = len(arg1) - 1\n    while l < r:\n        if arg1[l] + arg1[r] == arg2:\n            count += 1\n            l += 1\n            r -= 1\n        elif arg1[l] + arg1[r] < arg2:\n            l += 1\n        else:\n            r -= 1\n    pass']",100000,0.6671126000001095,0.6765688399999817,0.7154209999998784,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    h_set = set()\n    result = 0\n    for i in arg1:\n        if arg2 - i in h_set:\n            result += 1\n        h_set.add(i)\n    return result']",1000,0.004314699999667937,0.0045340529999702995,0.005375099999582744,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    h_set = set()\n    result = 0\n    for i in arg1:\n        if arg2 - i in h_set:\n            result += 1\n        h_set.add(i)\n    return result']",10000,0.05350560000033511,0.05549156800002493,0.06292849999999817,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    h_set = set()\n    result = 0\n    for i in arg1:\n        if arg2 - i in h_set:\n            result += 1\n        h_set.add(i)\n    return result']",100000,0.8320856000000276,0.8406250650000083,0.8675223000000187,N/A
p4_sum_array_pairs,prompt_1,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    """"""\n    Counts pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n     arg1 (List[int]): The list of integers.\n     arg2 (int): The target sum.\n\n    Returns:\n     int: The number of pairs whose sum equals the target sum.\n\n    Raises:\n     ValueError: If arg1 is not a list or arg2 is not an integer.\n     TypeError: If elements in arg1 are not integers.\n    """"""\n    if not isinstance(arg1, list):\n        raise ValueError(\'arg1 must be a list\')\n    if not isinstance(arg2, int):\n        raise ValueError(\'arg2 must be an integer\')\n    if not all((isinstance(i, int) for i in arg1)):\n        raise TypeError(\'All elements in arg1 must be integers\')\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in seen_numbers:\n            pair_count += seen_numbers[arg2 - num]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",1000,0.009187999999994645,0.009642129000039858,0.010920100000021193,N/A
p4_sum_array_pairs,prompt_1,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    """"""\n    Counts pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n     arg1 (List[int]): The list of integers.\n     arg2 (int): The target sum.\n\n    Returns:\n     int: The number of pairs whose sum equals the target sum.\n\n    Raises:\n     ValueError: If arg1 is not a list or arg2 is not an integer.\n     TypeError: If elements in arg1 are not integers.\n    """"""\n    if not isinstance(arg1, list):\n        raise ValueError(\'arg1 must be a list\')\n    if not isinstance(arg2, int):\n        raise ValueError(\'arg2 must be an integer\')\n    if not all((isinstance(i, int) for i in arg1)):\n        raise TypeError(\'All elements in arg1 must be integers\')\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in seen_numbers:\n            pair_count += seen_numbers[arg2 - num]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",10000,0.09819169999991573,0.09986172899999929,0.10715410000011616,N/A
p4_sum_array_pairs,prompt_1,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    """"""\n    Counts pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n     arg1 (List[int]): The list of integers.\n     arg2 (int): The target sum.\n\n    Returns:\n     int: The number of pairs whose sum equals the target sum.\n\n    Raises:\n     ValueError: If arg1 is not a list or arg2 is not an integer.\n     TypeError: If elements in arg1 are not integers.\n    """"""\n    if not isinstance(arg1, list):\n        raise ValueError(\'arg1 must be a list\')\n    if not isinstance(arg2, int):\n        raise ValueError(\'arg2 must be an integer\')\n    if not all((isinstance(i, int) for i in arg1)):\n        raise TypeError(\'All elements in arg1 must be integers\')\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in seen_numbers:\n            pair_count += seen_numbers[arg2 - num]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",100000,1.3700230999997984,1.3886966710000115,1.4204859999999826,N/A
p4_sum_array_pairs,prompt_1,29,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_count:\n            pair_count += dict_count[diff]\n        dict_count[num] += 1\n    return pair_count']",1000,0.01027269999985947,0.010849585999985721,0.016592599999967206,N/A
p4_sum_array_pairs,prompt_1,29,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_count:\n            pair_count += dict_count[diff]\n        dict_count[num] += 1\n    return pair_count']",10000,0.10684429999992062,0.1090125320000061,0.11462280000023384,N/A
p4_sum_array_pairs,prompt_1,29,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_count:\n            pair_count += dict_count[diff]\n        dict_count[num] += 1\n    return pair_count']",100000,1.4224859000000833,1.4431198469999662,1.4799567999998544,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return pairs_count']",1000,0.0067591999995784136,0.007076665000040521,0.008680400000230293,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return pairs_count']",10000,0.07233809999979712,0.07387632099998427,0.07937050000009549,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return pairs_count']",100000,1.1234786999998505,1.1457964480000056,1.1659417999999278,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for current in arg1:\n        complement = arg2 - current\n        if complement in hash_map:\n            counter += hash_map[complement]\n        if current not in hash_map:\n            hash_map[current] = 0\n        hash_map[current] += 1\n    return counter']",1000,0.008862299999691459,0.00931782299999213,0.010506800000257499,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for current in arg1:\n        complement = arg2 - current\n        if complement in hash_map:\n            counter += hash_map[complement]\n        if current not in hash_map:\n            hash_map[current] = 0\n        hash_map[current] += 1\n    return counter']",10000,0.09343399999988833,0.09539839499996106,0.09972920000018348,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for current in arg1:\n        complement = arg2 - current\n        if complement in hash_map:\n            counter += hash_map[complement]\n        if current not in hash_map:\n            hash_map[current] = 0\n        hash_map[current] += 1\n    return counter']",100000,1.350123000000167,1.3696747830000096,1.386600300000282,N/A
p4_sum_array_pairs,prompt_1,32,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = Counter(arg1)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        if num == complement:\n            pair_count -= 1\n    return pair_count // 2']",1000,0.007112600000255043,0.0074868589999960026,0.010055999999622145,N/A
p4_sum_array_pairs,prompt_1,32,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = Counter(arg1)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        if num == complement:\n            pair_count -= 1\n    return pair_count // 2']",10000,0.07900999999992564,0.08072107099999357,0.08933470000010857,N/A
p4_sum_array_pairs,prompt_1,32,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = Counter(arg1)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        if num == complement:\n            pair_count -= 1\n    return pair_count // 2']",100000,1.1842421000001195,1.925380027999986,6.309801400000197,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        my_dict[num] = my_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006760500000382308,0.007208835999981602,0.009488400000009278,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        my_dict[num] = my_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07251009999981761,0.07814340099999754,0.17452830000001995,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        my_dict[num] = my_dict.get(num, 0) + 1\n    return pair_count']",100000,1.125326800000039,1.5526758870000412,5.962574899999709,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += 1\n        numbers[num] = None\n    return pair_count']",1000,0.005383400000027905,0.005584946999997556,0.006555299999490671,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += 1\n        numbers[num] = None\n    return pair_count']",10000,0.05705619999935152,0.05975675500007128,0.06884320000062871,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += 1\n        numbers[num] = None\n    return pair_count']",100000,0.9477963999997883,0.970920488999991,1.0001036000003296,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    lookup_set = set()\n    for num in arg1:\n        if arg2 - num in lookup_set:\n            num_pairs += 1\n        else:\n            lookup_set.add(num)\n    return num_pairs']",1000,0.004240299999764829,0.004453335999942283,0.00474709999980405,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    lookup_set = set()\n    for num in arg1:\n        if arg2 - num in lookup_set:\n            num_pairs += 1\n        else:\n            lookup_set.add(num)\n    return num_pairs']",10000,0.05267909999929543,0.05546691700000338,0.06285610000031738,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    lookup_set = set()\n    for num in arg1:\n        if arg2 - num in lookup_set:\n            num_pairs += 1\n        else:\n            lookup_set.add(num)\n    return num_pairs']",100000,0.8191978000004383,0.8316408849999789,0.8658761999995477,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",1000,0.006808000000091852,0.007239173999969353,0.00949769999988348,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",10000,0.0735421999997925,0.07545718000000307,0.07992700000067998,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",100000,1.1382277000002432,1.1525267429999895,1.298975700000483,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        complement_map[number] = complement_map.get(number, 0) + 1\n    return count']",1000,0.006773999999495572,0.007164508000005299,0.008451400000012654,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        complement_map[number] = complement_map.get(number, 0) + 1\n    return count']",10000,0.07363429999986693,0.07523737800000163,0.07821700000022247,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        complement_map[number] = complement_map.get(number, 0) + 1\n    return count']",100000,1.1373342000006232,1.1545429330000025,1.1753263000000516,N/A
p4_sum_array_pairs,prompt_1,38,"[""from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)) or (not isinstance(arg2, int)):\n        return 'Invalid input'\n    element_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[arg1[i]] = element_map.get(arg1[i], 0) + 1\n    return pair_count""]",1000,0.010664399999768648,0.011373009999942951,0.01730649999990419,N/A
p4_sum_array_pairs,prompt_1,38,"[""from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)) or (not isinstance(arg2, int)):\n        return 'Invalid input'\n    element_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[arg1[i]] = element_map.get(arg1[i], 0) + 1\n    return pair_count""]",10000,0.11230700000032812,0.11601460700000643,0.12244600000030914,N/A
p4_sum_array_pairs,prompt_1,38,"[""from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)) or (not isinstance(arg2, int)):\n        return 'Invalid input'\n    element_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[arg1[i]] = element_map.get(arg1[i], 0) + 1\n    return pair_count""]",100000,1.530101299999842,1.563060372999953,1.5930215999997017,N/A
p4_sum_array_pairs,prompt_1,39,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dict1 = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in dict1:\n            count += dict1[arg2 - num]\n        dict1[num] = dict1.get(num, 0) + 1\n    return count']",1000,0.0065481999999974505,0.006872346999953152,0.008037399999921035,N/A
p4_sum_array_pairs,prompt_1,39,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dict1 = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in dict1:\n            count += dict1[arg2 - num]\n        dict1[num] = dict1.get(num, 0) + 1\n    return count']",10000,0.0710071000003154,0.07261356300002263,0.07550410000021657,N/A
p4_sum_array_pairs,prompt_1,39,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dict1 = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in dict1:\n            count += dict1[arg2 - num]\n        dict1[num] = dict1.get(num, 0) + 1\n    return count']",100000,1.1019280000000435,1.118872588000022,1.1450377999999546,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006053000000065367,0.006311173000021882,0.0070289000004777336,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.06566170000041893,0.06691507300000922,0.07105749999936961,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.064966099999765,1.0797189660000004,1.1045594999995956,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00599179999971966,0.006291520999975546,0.007031799999822397,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06549989999984973,0.06667879199999334,0.07325240000045596,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.068300900000395,1.086817337000066,1.1134125999997195,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    res = 0\n    counter = {}\n    for num in arg1:\n        if arg2 - num in counter:\n            res += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return res']",1000,0.006580400000530062,0.006968313999968814,0.0074489000007815775,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    res = 0\n    counter = {}\n    for num in arg1:\n        if arg2 - num in counter:\n            res += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return res']",10000,0.07204040000033274,0.0734529239999756,0.07638340000085009,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    res = 0\n    counter = {}\n    for num in arg1:\n        if arg2 - num in counter:\n            res += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return res']",100000,1.1236266999994768,1.1386588089999168,1.1596921999998813,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0063340999995489256,0.006485545999985334,0.00704310000037367,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06779310000001715,0.06975200199996834,0.072254000000612,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.076871199999914,1.095199257000031,1.1169063000006645,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        rem = arg2 - arg1[i]\n        if rem in num_dict:\n            pair_count += num_dict[rem]\n        if arg1[i] in num_dict:\n            num_dict[arg1[i]] += 1\n        else:\n            num_dict[arg1[i]] = 1\n    return pair_count']",1000,0.007249799999954121,0.0077552250000189815,0.011303700000098615,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        rem = arg2 - arg1[i]\n        if rem in num_dict:\n            pair_count += num_dict[rem]\n        if arg1[i] in num_dict:\n            num_dict[arg1[i]] += 1\n        else:\n            num_dict[arg1[i]] = 1\n    return pair_count']",10000,0.07936210000025312,0.08134614100001272,0.08608899999944697,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        rem = arg2 - arg1[i]\n        if rem in num_dict:\n            pair_count += num_dict[rem]\n        if arg1[i] in num_dict:\n            num_dict[arg1[i]] += 1\n        else:\n            num_dict[arg1[i]] = 1\n    return pair_count']",100000,1.1996007000007012,1.2133091370000237,1.2348805000001448,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006581599999663013,0.006986406000005445,0.008663099999466795,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07223609999982727,0.07367353100004947,0.07830829999966227,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1200066999999763,1.1343154109999796,1.1615670999999566,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for element in arg1:\n        if arg2 - element in hash_table:\n            count += hash_table[arg2 - element]\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",1000,0.006062700000256882,0.006341597999989972,0.006976399999985006,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for element in arg1:\n        if arg2 - element in hash_table:\n            count += hash_table[arg2 - element]\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",10000,0.0670111999997971,0.06875570799999878,0.07835479999994277,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for element in arg1:\n        if arg2 - element in hash_table:\n            count += hash_table[arg2 - element]\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",100000,1.0838796999996703,1.0980134259999794,1.1391359999997803,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for num in arg1:\n        if arg2 - num in dict:\n            count += dict[arg2 - num]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",1000,0.006562500000654836,0.007030659000074593,0.00891479999972944,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for num in arg1:\n        if arg2 - num in dict:\n            count += dict[arg2 - num]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",10000,0.07181110000055924,0.07366030100002717,0.07883039999978791,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for num in arg1:\n        if arg2 - num in dict:\n            count += dict[arg2 - num]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",100000,1.126165000000583,1.1410247130000335,1.1672091000000364,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return count']",1000,0.006054100000255858,0.00645149500001935,0.007693200000176148,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return count']",10000,0.0666798000002018,0.06834847300006004,0.07144360000074812,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return count']",100000,1.0799254000003202,1.0938536990000194,1.1212468000003355,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            pair_counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_counter']",1000,0.0060555999998541665,0.006318440000004557,0.006987799999478739,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            pair_counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_counter']",10000,0.06692959999963932,0.06815961100001004,0.07069100000080653,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            pair_counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_counter']",100000,1.0745772999998735,1.091506114999993,1.1234801999999036,N/A
p4_sum_array_pairs,prompt_1,50,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    pairing_dictionary = defaultdict(int)\n    for i in arg1:\n        count += pairing_dictionary[arg2 - i]\n        pairing_dictionary[i] += 1\n    return count']",1000,0.014234199999918928,0.014846011999998155,0.016502200000104494,N/A
p4_sum_array_pairs,prompt_1,50,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    pairing_dictionary = defaultdict(int)\n    for i in arg1:\n        count += pairing_dictionary[arg2 - i]\n        pairing_dictionary[i] += 1\n    return count']",10000,0.14241480000055162,0.14658275800004958,0.1595687999997608,N/A
p4_sum_array_pairs,prompt_1,50,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    pairing_dictionary = defaultdict(int)\n    for i in arg1:\n        count += pairing_dictionary[arg2 - i]\n        pairing_dictionary[i] += 1\n    return count']",100000,2.240517700000055,2.2639536529999624,2.3048392000000604,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    pair_counts = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pair_counts += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_counts']",1000,0.006161000000247441,0.006452074999988327,0.006857100000161154,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    pair_counts = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pair_counts += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_counts']",10000,0.06796620000022813,0.07002734800001235,0.0736826000002111,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    pair_counts = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pair_counts += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_counts']",100000,1.0811096000006728,1.0951109720000476,1.1167765999998664,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen_nums:\n            pairs += seen_nums[arg2 - num]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",1000,0.006548000000293541,0.006883944000010161,0.007848000000194588,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen_nums:\n            pairs += seen_nums[arg2 - num]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",10000,0.0716351000000941,0.07334872299997187,0.07839650000005349,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen_nums:\n            pairs += seen_nums[arg2 - num]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",100000,1.1244557999998506,1.1424287590000404,1.1727735000004031,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(nums, target):\n    hash_table = {}\n    counter = 0\n    for num in nums:\n        complement = target - num\n        counter += hash_table.get(complement, 0)\n        hash_table[num] = hash_table.get(num, 0) + 1\n    return counter']",1000,0.007633000000168977,0.007986417000047367,0.01254739999967569,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(nums, target):\n    hash_table = {}\n    counter = 0\n    for num in nums:\n        complement = target - num\n        counter += hash_table.get(complement, 0)\n        hash_table[num] = hash_table.get(num, 0) + 1\n    return counter']",10000,0.08104939999975613,0.08269830299994282,0.08639980000043579,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(nums, target):\n    hash_table = {}\n    counter = 0\n    for num in nums:\n        complement = target - num\n        counter += hash_table.get(complement, 0)\n        hash_table[num] = hash_table.get(num, 0) + 1\n    return counter']",100000,1.2159210999998322,1.2306552889999602,1.2567636000003404,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pairs_count = 0\n    for number in arg1:\n        compliment = arg2 - number\n        if compliment in counts:\n            pairs_count += counts[compliment]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",1000,0.006218100000296545,0.006518225000027087,0.008690399999977672,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pairs_count = 0\n    for number in arg1:\n        compliment = arg2 - number\n        if compliment in counts:\n            pairs_count += counts[compliment]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",10000,0.06843120000030467,0.0710196079999787,0.07961640000030457,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pairs_count = 0\n    for number in arg1:\n        compliment = arg2 - number\n        if compliment in counts:\n            pairs_count += counts[compliment]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",100000,1.0810607000003074,1.0947442809999757,1.1128998000003776,N/A
p4_sum_array_pairs,prompt_1,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.006804100000408653,0.007167913000021144,0.00908499999968626,N/A
p4_sum_array_pairs,prompt_1,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.07350839999980963,0.07553998500003217,0.08148980000078154,N/A
p4_sum_array_pairs,prompt_1,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.1370011999997587,1.1506610680000358,1.1726335000003019,N/A
p4_sum_array_pairs,prompt_1,56,"[""def funcImp(arg1, arg2):\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)):\n        raise ValueError('arg1 must be a list of integers')\n    if not isinstance(arg2, int):\n        raise ValueError('arg2 must be an integer')\n    seen = {}\n    pairs = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs.add(tuple(sorted((diff, num))))\n        seen[num] = True\n    return list(pairs)""]",1000,0.00783769999998185,0.008331700000026103,0.011553700000149547,N/A
p4_sum_array_pairs,prompt_1,56,"[""def funcImp(arg1, arg2):\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)):\n        raise ValueError('arg1 must be a list of integers')\n    if not isinstance(arg2, int):\n        raise ValueError('arg2 must be an integer')\n    seen = {}\n    pairs = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs.add(tuple(sorted((diff, num))))\n        seen[num] = True\n    return list(pairs)""]",10000,0.08511480000015581,0.08669536300005348,0.09036699999978737,N/A
p4_sum_array_pairs,prompt_1,56,"[""def funcImp(arg1, arg2):\n    if not isinstance(arg1, list) or not all((isinstance(i, int) for i in arg1)):\n        raise ValueError('arg1 must be a list of integers')\n    if not isinstance(arg2, int):\n        raise ValueError('arg2 must be an integer')\n    seen = {}\n    pairs = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs.add(tuple(sorted((diff, num))))\n        seen[num] = True\n    return list(pairs)""]",100000,1.3076355000002877,1.3227633579999656,1.343380199999956,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",1000,0.007509399999435118,0.007938742999995156,0.008674900000187336,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",10000,0.08048830000007001,0.08313066900002014,0.09809459999996761,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_map.get(complement, 0)\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",100000,1.219338500000049,1.2343973950000509,1.2562842999996064,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006185799999911978,0.006400830000002316,0.007270799999787414,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.0668574000001172,0.0683165480000298,0.07163779999973485,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.0791939999999158,1.0933692059999702,1.1104896999995617,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    number_freq = {}\n    pair_count = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in number_freq:\n            pair_count += number_freq[compliment]\n        number_freq[num] = number_freq.get(num, 0) + 1\n    return pair_count']",1000,0.0067528999998103245,0.007115765999978976,0.008123000000523461,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    number_freq = {}\n    pair_count = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in number_freq:\n            pair_count += number_freq[compliment]\n        number_freq[num] = number_freq.get(num, 0) + 1\n    return pair_count']",10000,0.07370230000014999,0.07511636600000202,0.07743620000019291,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    number_freq = {}\n    pair_count = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in number_freq:\n            pair_count += number_freq[compliment]\n        number_freq[num] = number_freq.get(num, 0) + 1\n    return pair_count']",100000,1.1254593000003297,1.1511145810000107,1.197285200000806,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        remainder = arg2 - num\n        count += num_dict.get(remainder, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",1000,0.007275099999787926,0.007851576000002752,0.010066899999401357,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        remainder = arg2 - num\n        count += num_dict.get(remainder, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",10000,0.07906869999987975,0.08136384500007807,0.08799090000047727,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        remainder = arg2 - num\n        count += num_dict.get(remainder, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",100000,1.2084390999998504,1.226794592999986,1.2502141000004485,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",1000,0.006769499999791151,0.007096861999953035,0.00794659999974101,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",10000,0.07388480000008713,0.07537286900001164,0.08108309999988705,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",100000,1.1369543000000704,1.149581081000024,1.1673737000000983,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for number in arg1:\n        remaining = arg2 - number\n        if remaining in dictionary:\n            count += dictionary[remaining]\n        dictionary[number] = dictionary.get(number, 0) + 1\n    return count']",1000,0.006761600000572798,0.00713841699999648,0.010225300000456627,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for number in arg1:\n        remaining = arg2 - number\n        if remaining in dictionary:\n            count += dictionary[remaining]\n        dictionary[number] = dictionary.get(number, 0) + 1\n    return count']",10000,0.07311399999980495,0.07578330799997275,0.08507259999987582,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for number in arg1:\n        remaining = arg2 - number\n        if remaining in dictionary:\n            count += dictionary[remaining]\n        dictionary[number] = dictionary.get(number, 0) + 1\n    return count']",100000,1.1353284999995594,1.1508531530000163,1.1753475999994407,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    lookup_dict = {}\n    for i in arg1:\n        if arg2 - i in lookup_dict:\n            count_pairs += lookup_dict[arg2 - i]\n        if i in lookup_dict:\n            lookup_dict[i] += 1\n        else:\n            lookup_dict[i] = 1\n    return count_pairs']",1000,0.006206999999449181,0.00642966600003092,0.007711899999776506,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    lookup_dict = {}\n    for i in arg1:\n        if arg2 - i in lookup_dict:\n            count_pairs += lookup_dict[arg2 - i]\n        if i in lookup_dict:\n            lookup_dict[i] += 1\n        else:\n            lookup_dict[i] = 1\n    return count_pairs']",10000,0.06652549999944313,0.06859333399999741,0.0747308999998495,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    lookup_dict = {}\n    for i in arg1:\n        if arg2 - i in lookup_dict:\n            count_pairs += lookup_dict[arg2 - i]\n        if i in lookup_dict:\n            lookup_dict[i] += 1\n        else:\n            lookup_dict[i] = 1\n    return count_pairs']",100000,1.0803383000002214,1.093390427999975,1.112101900000198,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",1000,0.004513100000622217,0.004766594999955487,0.0056760999996186,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",10000,0.0565561000003072,0.05804361600002267,0.062413800000285846,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",100000,0.9312302999996973,0.9515167999999812,0.9964027999994869,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004479899999751069,0.004731476999959341,0.005360099999961676,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.054954600000201026,0.0568924290000632,0.06316680000054475,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8349484999998822,0.855030201000045,0.8748228999993444,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    numPairs = 0\n    hashTable = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            numPairs += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return numPairs']",1000,0.006747299999915413,0.007086073999962536,0.009751499999765656,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    numPairs = 0\n    hashTable = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            numPairs += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return numPairs']",10000,0.07233039999846369,0.07391530499999135,0.08131479999974545,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    numPairs = 0\n    hashTable = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            numPairs += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return numPairs']",100000,1.1201204000008147,1.1432412210000258,1.1690995000008115,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in map:\n            counter += map[complement]\n        if i in map:\n            map[i] += 1\n        else:\n            map[i] = 1\n    return counter']",1000,0.006135100000392413,0.006456975999935821,0.008188199999494827,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in map:\n            counter += map[complement]\n        if i in map:\n            map[i] += 1\n        else:\n            map[i] = 1\n    return counter']",10000,0.06675040000118315,0.06817799100001139,0.07782120000047144,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in map:\n            counter += map[complement]\n        if i in map:\n            map[i] += 1\n        else:\n            map[i] = 1\n    return counter']",100000,1.0738474999998289,1.09200047300008,1.1304770000006101,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    cache = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in cache:\n            count += cache[complement]\n        cache[num] = cache.get(num, 0) + 1\n    return count']",1000,0.00673330000063288,0.007148560999976326,0.010288299999956507,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    cache = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in cache:\n            count += cache[complement]\n        cache[num] = cache.get(num, 0) + 1\n    return count']",10000,0.0731541000004654,0.07635709900003348,0.09345249999933003,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    cache = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in cache:\n            count += cache[complement]\n        cache[num] = cache.get(num, 0) + 1\n    return count']",100000,1.1163348999998561,1.1433001090000108,1.187826800000039,N/A
p4_sum_array_pairs,prompt_1,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    visited = {}\n    for num in arg1:\n        elem_required = arg2 - num\n        if visited.get(elem_required, 0) > 0:\n            counter += 1\n            visited[elem_required] -= 1\n        else:\n            visited[num] = visited.get(num, 0) + 1\n    return counter']",1000,0.0072445000005245674,0.007756919000075868,0.011432299999796669,N/A
p4_sum_array_pairs,prompt_1,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    visited = {}\n    for num in arg1:\n        elem_required = arg2 - num\n        if visited.get(elem_required, 0) > 0:\n            counter += 1\n            visited[elem_required] -= 1\n        else:\n            visited[num] = visited.get(num, 0) + 1\n    return counter']",10000,0.07707459999983257,0.07941490100001829,0.08748840000043856,N/A
p4_sum_array_pairs,prompt_1,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    visited = {}\n    for num in arg1:\n        elem_required = arg2 - num\n        if visited.get(elem_required, 0) > 0:\n            counter += 1\n            visited[elem_required] -= 1\n        else:\n            visited[num] = visited.get(num, 0) + 1\n    return counter']",100000,1.1645040999992489,1.1914348110000355,1.236160899999959,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.005188999999518273,0.005449418999905902,0.0070369000004575355,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.057190599998648395,0.058865389999955366,0.07238419999885082,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        else:\n            seen[num] = 1\n    return count']",100000,0.9220460000015009,0.9462158000000273,0.9695234000009805,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006169500000396511,0.00651448699991306,0.007436699999743723,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06756710000081512,0.06960574600003383,0.07780779999848164,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.0737747000002855,1.0993666860001394,1.1790553999999247,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",1000,0.006718299999192823,0.0072794200000134875,0.01081970000086585,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",10000,0.07403630000044359,0.07529274699996677,0.08046660000036354,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",100000,1.1352661000000808,1.1580000619999191,1.183135700001003,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_counts:\n            pairs_count += dict_counts[complement]\n        dict_counts[num] = dict_counts.get(num, 0) + 1\n    return pairs_count']",1000,0.006813400001192349,0.007273983000068256,0.00914819999889005,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_counts:\n            pairs_count += dict_counts[complement]\n        dict_counts[num] = dict_counts.get(num, 0) + 1\n    return pairs_count']",10000,0.07305240000096092,0.07472767200008093,0.08446399999957066,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_counts:\n            pairs_count += dict_counts[complement]\n        dict_counts[num] = dict_counts.get(num, 0) + 1\n    return pairs_count']",100000,1.1418427000007796,1.1601119730000755,1.1926363999991736,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            num_pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return num_pairs']",1000,0.006826500000897795,0.007157387000024756,0.007492099999581114,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            num_pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return num_pairs']",10000,0.07337849999930768,0.07467538200015042,0.07727800000066054,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    num_pairs = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            num_pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return num_pairs']",100000,1.135326300000088,1.1549688590000187,1.1832807999999204,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            counter += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return counter']",1000,0.0065847000005305745,0.007037786000055348,0.008411299999352195,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            counter += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return counter']",10000,0.07175789999928384,0.07325661899993065,0.08009640000091167,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            counter += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return counter']",100000,1.1274750000011409,1.1448311720000857,1.1671167000004061,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pair_count += count_dict[remainder]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006727800000589923,0.007110781000083079,0.008997099999760394,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pair_count += count_dict[remainder]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07325640000090061,0.07486764900002527,0.07789989999946556,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pair_count += count_dict[remainder]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1293378999998822,1.1509907440000098,1.1729723999997077,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pair_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pair_count']",1000,0.006035999998857733,0.00638797199988403,0.009352199998829747,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pair_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pair_count']",10000,0.06718840000030468,0.06854979499992624,0.07265839999854506,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pair_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pair_count']",100000,1.070810999999594,1.09098757699996,1.1147099999998318,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.006095700000514626,0.006411940999914805,0.00820439999915834,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06699490000028163,0.06871494600001825,0.07479010000133712,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.067556500000137,1.088446329000053,1.1077366999998048,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    res = 0\n    count_dictionary = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dictionary:\n            res += count_dictionary[diff]\n        count_dictionary[num] = count_dictionary.get(num, 0) + 1\n    return res']",1000,0.006729299999278737,0.007117460000026768,0.009345000000394066,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    res = 0\n    count_dictionary = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dictionary:\n            res += count_dictionary[diff]\n        count_dictionary[num] = count_dictionary.get(num, 0) + 1\n    return res']",10000,0.07244580000042333,0.07401086199988641,0.07811420000143698,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    res = 0\n    count_dictionary = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dictionary:\n            res += count_dictionary[diff]\n        count_dictionary[num] = count_dictionary.get(num, 0) + 1\n    return res']",100000,1.1189738999983092,1.1419078790001003,1.161800800000492,N/A
p4_sum_array_pairs,prompt_1,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    comp = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in comp:\n            count += 1\n        comp[num] = num\n    return count']",1000,0.005220300001383293,0.005512361000128294,0.007523700000092504,N/A
p4_sum_array_pairs,prompt_1,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    comp = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in comp:\n            count += 1\n        comp[num] = num\n    return count']",10000,0.057173600000169245,0.05820073900011266,0.06134150000070804,N/A
p4_sum_array_pairs,prompt_1,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    comp = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in comp:\n            count += 1\n        comp[num] = num\n    return count']",100000,0.9347160999986954,0.9507603189999463,0.9799244999994698,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    diff_dict = {}\n    count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in diff_dict:\n            count += diff_dict[diff]\n        if ele in diff_dict:\n            diff_dict[ele] += 1\n        else:\n            diff_dict[ele] = 1\n    return count']",1000,0.006124899999122135,0.006447112999976526,0.008419399999183952,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    diff_dict = {}\n    count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in diff_dict:\n            count += diff_dict[diff]\n        if ele in diff_dict:\n            diff_dict[ele] += 1\n        else:\n            diff_dict[ele] = 1\n    return count']",10000,0.06712979999974777,0.06866298699995241,0.07261830000061309,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    diff_dict = {}\n    count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in diff_dict:\n            count += diff_dict[diff]\n        if ele in diff_dict:\n            diff_dict[ele] += 1\n        else:\n            diff_dict[ele] = 1\n    return count']",100000,1.0611022000011872,1.0856028559999686,1.1077934999993886,N/A
p4_sum_array_pairs,prompt_1,82,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += count_dict.get(complement, 0)\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",1000,0.007444499999110121,0.00795293599996512,0.009861500000624801,N/A
p4_sum_array_pairs,prompt_1,82,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += count_dict.get(complement, 0)\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07960510000157228,0.08134052099987457,0.08927269999912824,N/A
p4_sum_array_pairs,prompt_1,82,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += count_dict.get(complement, 0)\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",100000,1.2026481999982934,1.229503226999932,1.2704908999985491,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            pair_count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return pair_count']",1000,0.0061552999995910795,0.006412444999932631,0.007044199999654666,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            pair_count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return pair_count']",10000,0.06681930000013381,0.06820589399996607,0.07322999999996682,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in hashmap:\n            pair_count += hashmap[arg2 - i]\n        if i in hashmap:\n            hashmap[i] += 1\n        else:\n            hashmap[i] = 1\n    return pair_count']",100000,1.074638899999627,1.0937966800000323,1.1135805000012624,N/A
p4_sum_array_pairs,prompt_1,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = dict()\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in pairs:\n            count += 1\n        pairs[arg1[i]] = i\n    return count']",1000,0.006245500000659376,0.006587712000000465,0.008745999999518972,N/A
p4_sum_array_pairs,prompt_1,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = dict()\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in pairs:\n            count += 1\n        pairs[arg1[i]] = i\n    return count']",10000,0.06780409999919357,0.06939259399994625,0.07955500000025495,N/A
p4_sum_array_pairs,prompt_1,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = dict()\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in pairs:\n            count += 1\n        pairs[arg1[i]] = i\n    return count']",100000,1.1175833999986935,1.1454493760000333,1.1701049000002968,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arr, sum):\n    hash_map = {}\n    pair_count = 0\n    for num in arr:\n        remainder = sum - num\n        if remainder in hash_map:\n            pair_count += hash_map[remainder]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",1000,0.006887300000016694,0.0071668200000203795,0.008748199999899953,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arr, sum):\n    hash_map = {}\n    pair_count = 0\n    for num in arr:\n        remainder = sum - num\n        if remainder in hash_map:\n            pair_count += hash_map[remainder]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",10000,0.07355689999894821,0.07505799900009151,0.07889319999958389,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arr, sum):\n    hash_map = {}\n    pair_count = 0\n    for num in arr:\n        remainder = sum - num\n        if remainder in hash_map:\n            pair_count += hash_map[remainder]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",100000,1.134088700000575,1.1550945730000421,1.173589300000458,N/A
p4_sum_array_pairs,prompt_1,86,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006535699998494238,0.006915210999995907,0.007498499999201158,N/A
p4_sum_array_pairs,prompt_1,86,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07133249999969848,0.07306443599998602,0.07688140000027488,N/A
p4_sum_array_pairs,prompt_1,86,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1178386000010505,1.1412116909999532,1.1785165000001143,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    pairs = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in pairs:\n            pairs_count += pairs[temp]\n        pairs[num] = pairs.get(num, 0) + 1\n    return pairs_count']",1000,0.00673589999860269,0.007186388999944029,0.008309700000609155,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    pairs = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in pairs:\n            pairs_count += pairs[temp]\n        pairs[num] = pairs.get(num, 0) + 1\n    return pairs_count']",10000,0.07330299999921408,0.07502092499997161,0.08187700000053155,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    pairs = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in pairs:\n            pairs_count += pairs[temp]\n        pairs[num] = pairs.get(num, 0) + 1\n    return pairs_count']",100000,1.1329642000000604,1.15824821599992,1.1881997999989835,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    counter = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in hashMap:\n            counter += hashMap[target]\n        hashMap[element] = hashMap.get(element, 0) + 1\n    return counter']",1000,0.006786399999327841,0.007087543000016012,0.007659900000362541,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    counter = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in hashMap:\n            counter += hashMap[target]\n        hashMap[element] = hashMap.get(element, 0) + 1\n    return counter']",10000,0.07306249999965075,0.07477826899994397,0.07789210000009916,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    counter = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in hashMap:\n            counter += hashMap[target]\n        hashMap[element] = hashMap.get(element, 0) + 1\n    return counter']",100000,1.1351831000010861,1.155525124999931,1.1824029999988852,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006148500000563217,0.00663123699996504,0.00974329999917245,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06787459999941348,0.06946666600002573,0.07358399999975518,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0760353000005125,1.0978140749999874,1.129068800000823,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += 1\n        seen.add(num)\n    return counter']",1000,0.004535799998848233,0.004771561999896221,0.006648499998846091,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += 1\n        seen.add(num)\n    return counter']",10000,0.05537720000029367,0.05730990600004589,0.06615749999946274,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += 1\n        seen.add(num)\n    return counter']",100000,0.8522805000011431,0.8653696759999912,0.8878762000003917,N/A
p4_sum_array_pairs,prompt_1,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        if num in my_dict:\n            my_dict[num] += 1\n        else:\n            my_dict[num] = 1\n    return pair_count']",1000,0.006115999998655752,0.00649212999995143,0.00705519999974058,N/A
p4_sum_array_pairs,prompt_1,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        if num in my_dict:\n            my_dict[num] += 1\n        else:\n            my_dict[num] = 1\n    return pair_count']",10000,0.06772580000142625,0.0693730680000408,0.07656090000091353,N/A
p4_sum_array_pairs,prompt_1,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in my_dict:\n            pair_count += my_dict[complement]\n        if num in my_dict:\n            my_dict[num] += 1\n        else:\n            my_dict[num] = 1\n    return pair_count']",100000,1.075427399999171,1.0950789860000076,1.1176560999992944,N/A
p4_sum_array_pairs,prompt_1,92,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006802399999287445,0.007071610999919358,0.007545499998741434,N/A
p4_sum_array_pairs,prompt_1,92,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07306480000079318,0.07477739000001747,0.07676010000068345,N/A
p4_sum_array_pairs,prompt_1,92,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.133324200000061,1.1537460509999438,1.1720477999988361,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    count = 0\n    dic = {}\n    for num in arg1:\n        if arg2 - num in dic:\n            count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",1000,0.006613999999899534,0.00701899499999854,0.010051999999632244,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    count = 0\n    dic = {}\n    for num in arg1:\n        if arg2 - num in dic:\n            count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",10000,0.07161090000045078,0.07339284099996803,0.08307950000016717,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    count = 0\n    dic = {}\n    for num in arg1:\n        if arg2 - num in dic:\n            count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",100000,1.1239548000012292,1.1433426330000112,1.1888989999988553,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count']",1000,0.006180700000186334,0.0066516739999497075,0.010823500000697095,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count']",10000,0.06826019999971322,0.06974949600005857,0.07828560000052676,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count']",100000,1.0794898999993165,1.09700456700004,1.1169828999991296,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        if i not in counts:\n            counts[i] = 1\n        else:\n            counts[i] += 1\n    return pairs']",1000,0.006082399999286281,0.006425537999875814,0.007307199999559089,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        if i not in counts:\n            counts[i] = 1\n        else:\n            counts[i] += 1\n    return pairs']",10000,0.06718089999958465,0.06862591900002371,0.07602289999886125,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        if i not in counts:\n            counts[i] = 1\n        else:\n            counts[i] += 1\n    return pairs']",100000,1.0775910000011208,1.096242905999916,1.1167485999994824,N/A
p4_sum_array_pairs,prompt_1,96,"['from typing import List\nfrom collections import defaultdict\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    seen = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if seen[complement]:\n            pair_count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] += 1\n    return pair_count']",1000,0.013804400001390604,0.01450637399982952,0.0158157999994728,N/A
p4_sum_array_pairs,prompt_1,96,"['from typing import List\nfrom collections import defaultdict\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    seen = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if seen[complement]:\n            pair_count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] += 1\n    return pair_count']",10000,0.14204809999864665,0.14450420299990582,0.15039919999981066,N/A
p4_sum_array_pairs,prompt_1,96,"['from typing import List\nfrom collections import defaultdict\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    seen = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if seen[complement]:\n            pair_count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] += 1\n    return pair_count']",100000,2.2010652999997546,2.2380831510000463,2.2654146000004403,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = []\n    for i in arg1:\n        complement = arg2 - i\n        if complement in seen:\n            pairs.append((complement, i))\n        seen[i] = True\n    return pairs']",1000,0.005202000000281259,0.005505489000042872,0.0065740999998524785,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = []\n    for i in arg1:\n        complement = arg2 - i\n        if complement in seen:\n            pairs.append((complement, i))\n        seen[i] = True\n    return pairs']",10000,0.05792299999848183,0.059491179999968155,0.06359429999974964,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = []\n    for i in arg1:\n        complement = arg2 - i\n        if complement in seen:\n            pairs.append((complement, i))\n        seen[i] = True\n    return pairs']",100000,0.975603000000774,1.004229395999955,1.0941965999991226,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        comp = arg2 - i\n        if comp in counts:\n            pair_count += counts[comp]\n        counts[i] = counts.get(i, 0) + 1\n    return pair_count']",1000,0.0067792000008921605,0.007310473999987153,0.00985439999931259,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        comp = arg2 - i\n        if comp in counts:\n            pair_count += counts[comp]\n        counts[i] = counts.get(i, 0) + 1\n    return pair_count']",10000,0.07292899999993097,0.07648086700006389,0.08532800000102725,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        comp = arg2 - i\n        if comp in counts:\n            pair_count += counts[comp]\n        counts[i] = counts.get(i, 0) + 1\n    return pair_count']",100000,1.1386473000002297,1.1606214010001168,1.1862357999998494,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pairs_count = 0\n    for num in arg1:\n        pairs_count += num_count.get(arg2 - num, 0)\n        num_count[num] = num_count.get(num, 0) + 1\n    return pairs_count']",1000,0.007729299999482464,0.008100822000142217,0.010862700000870973,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pairs_count = 0\n    for num in arg1:\n        pairs_count += num_count.get(arg2 - num, 0)\n        num_count[num] = num_count.get(num, 0) + 1\n    return pairs_count']",10000,0.08035559999916586,0.08386372200000551,0.09461770000052638,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pairs_count = 0\n    for num in arg1:\n        pairs_count += num_count.get(arg2 - num, 0)\n        num_count[num] = num_count.get(num, 0) + 1\n    return pairs_count']",100000,1.220817999999781,1.249165041000033,1.3624377000014647,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006746099999872968,0.007122411000109423,0.009254900000087218,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07217689999924914,0.07485477900007026,0.08256160000019008,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1285571999997046,1.1550336479999168,1.1836905000000115,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",1000,0.006506499999886728,0.00691581999988557,0.009737799999129493,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",10000,0.07062519999999495,0.07360875099997428,0.0905270000002929,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",100000,1.1107134000012593,1.1472628679999979,1.1793624000001728,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.006139500001154374,0.00649807999994664,0.009738999999171938,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06711409999843454,0.07013507699995898,0.07991869999932533,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.07141589999992,1.099453688999947,1.141832200000863,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00615509999988717,0.006518570999905933,0.007232500000100117,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06711619999987306,0.06954210900001272,0.08005500000035681,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.0622452999996312,1.0998949460000587,1.1283933000013349,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += seen[target]\n            seen[num] = 0\n    return count']",1000,0.005260300000372808,0.005669285999956628,0.009123199999521603,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += seen[target]\n            seen[num] = 0\n    return count']",10000,0.057241000000431086,0.059413022999888196,0.07073719999971217,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += seen[target]\n            seen[num] = 0\n    return count']",100000,0.9455715999993117,0.974013973000001,0.9972748999989562,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        comple = arg2 - num\n        if comple in freq_map:\n            count += freq_map[comple]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006262399998377077,0.006719376999881206,0.010892700000113109,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        comple = arg2 - num\n        if comple in freq_map:\n            count += freq_map[comple]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06685470000047644,0.06964526899993871,0.0730239000004076,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        comple = arg2 - num\n        if comple in freq_map:\n            count += freq_map[comple]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.0785942999991676,1.1002680679999504,1.1222257999997964,N/A
p4_sum_array_pairs,prompt_2,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter_dict = {}\n    pair_cnt = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counter_dict:\n            pair_cnt += counter_dict[complement]\n        counter_dict[i] = counter_dict.get(i, 0) + 1\n    return pair_cnt']",1000,0.006771899999876041,0.0071643950001089255,0.012144500000431435,N/A
p4_sum_array_pairs,prompt_2,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter_dict = {}\n    pair_cnt = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counter_dict:\n            pair_cnt += counter_dict[complement]\n        counter_dict[i] = counter_dict.get(i, 0) + 1\n    return pair_cnt']",10000,0.07238709999910498,0.07507554099996923,0.08536189999904309,N/A
p4_sum_array_pairs,prompt_2,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter_dict = {}\n    pair_cnt = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counter_dict:\n            pair_cnt += counter_dict[complement]\n        counter_dict[i] = counter_dict.get(i, 0) + 1\n    return pair_cnt']",100000,1.1392354000017804,1.1605214350000823,1.1962548999999854,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",1000,0.0045160999998188345,0.0048054680000495864,0.00677929999983462,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",10000,0.05569689999902039,0.05861636600000566,0.0724848000008933,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(output)']",100000,0.9292468999992707,0.9527481040000748,0.9811012999998638,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    freq = defaultdict(int)\n    count = 0\n    for num in arg1:\n        count += freq[arg2 - num]\n        freq[num] += 1\n    return count']",1000,0.014206500000000233,0.015089175000048272,0.018860899999708636,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    freq = defaultdict(int)\n    count = 0\n    for num in arg1:\n        count += freq[arg2 - num]\n        freq[num] += 1\n    return count']",10000,0.14101169999958074,0.1462756080001418,0.15336990000105288,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    freq = defaultdict(int)\n    count = 0\n    for num in arg1:\n        count += freq[arg2 - num]\n        freq[num] += 1\n    return count']",100000,2.2312763000009,2.2588661829998453,2.29781820000062,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pass\n        seen[num] = True']",1000,0.0052472000006673625,0.005518193000079918,0.006787899999835645,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pass\n        seen[num] = True']",10000,0.057577600000513485,0.06050503900005424,0.07644790000085777,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pass\n        seen[num] = True']",100000,0.9437955000012153,0.9634740409998994,0.9953466000006301,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num not in freq:\n            freq[num] = 0\n        freq[num] += 1\n    return count']",1000,0.008744299999307259,0.009263679000105185,0.01288120000026538,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num not in freq:\n            freq[num] = 0\n        freq[num] += 1\n    return count']",10000,0.09173650000047928,0.09550847300004534,0.10178860000087298,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num not in freq:\n            freq[num] = 0\n        freq[num] += 1\n    return count']",100000,1.3371387000006507,1.3626174199998968,1.4004026999991765,N/A
p4_sum_array_pairs,prompt_2,11,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_table = {}\n    pairs = []\n    for num in arg1:\n        comp = arg2 - num\n        if comp in hash_table:\n            pairs.append((comp, num))\n        hash_table[num] = num\n    return pairs']",1000,0.0052496000007522525,0.0055232609999802664,0.006317700001090998,N/A
p4_sum_array_pairs,prompt_2,11,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_table = {}\n    pairs = []\n    for num in arg1:\n        comp = arg2 - num\n        if comp in hash_table:\n            pairs.append((comp, num))\n        hash_table[num] = num\n    return pairs']",10000,0.057466199999907985,0.05970670800004882,0.06566059999931895,N/A
p4_sum_array_pairs,prompt_2,11,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_table = {}\n    pairs = []\n    for num in arg1:\n        comp = arg2 - num\n        if comp in hash_table:\n            pairs.append((comp, num))\n        hash_table[num] = num\n    return pairs']",100000,0.9583932000005007,0.9826627059999009,1.0127735999994911,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pairs_count']",1000,0.006148099999336409,0.006573463000040647,0.00926419999996142,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pairs_count']",10000,0.06721560000005411,0.07038567700003114,0.08211190000110946,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pairs_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pairs_count']",100000,1.074837000000116,1.097717522999883,1.1504823000013857,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006744799999069073,0.007251495999953477,0.010117900001205271,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07248529999924358,0.07514810800012128,0.08319800000026589,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1332053000005544,1.1585572059997502,1.186566499998662,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    hash_ = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_:\n            pairs_count += hash_[complement]\n        hash_[elem] = hash_.get(elem, 0) + 1\n    return pairs_count']",1000,0.006767000000763801,0.0073280419998627624,0.011079399999289308,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    hash_ = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_:\n            pairs_count += hash_[complement]\n        hash_[elem] = hash_.get(elem, 0) + 1\n    return pairs_count']",10000,0.07315110000126879,0.07531277000005503,0.0812593000009656,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    hash_ = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_:\n            pairs_count += hash_[complement]\n        hash_[elem] = hash_.get(elem, 0) + 1\n    return pairs_count']",100000,1.1329245000015362,1.1623731200000111,1.2343931999985216,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += numbers[complement]\n        numbers[num] = numbers.get(num, 0) + 1\n    return pair_count']",1000,0.006770500000129687,0.007296906999981729,0.014149699998597498,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += numbers[complement]\n        numbers[num] = numbers.get(num, 0) + 1\n    return pair_count']",10000,0.0723959000006289,0.07511509600000864,0.08308980000037991,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers:\n            pair_count += numbers[complement]\n        numbers[num] = numbers.get(num, 0) + 1\n    return pair_count']",100000,1.1335319000008894,1.1525848369999403,1.1669806000008975,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    mem = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",1000,0.006820799999331939,0.007148487999929784,0.008298000000650063,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    mem = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",10000,0.07329830000162474,0.07507093300000633,0.0795920999989903,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    mem = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",100000,1.136681199999657,1.1568851079998057,1.1944291999989218,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in count_dict:\n            count += count_dict[arg2 - num]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",1000,0.006537999999636668,0.0068686410000191244,0.007308700000066892,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in count_dict:\n            count += count_dict[arg2 - num]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",10000,0.07124339999973017,0.07299833999992188,0.07617980000031821,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in count_dict:\n            count += count_dict[arg2 - num]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",100000,1.1194238000007317,1.1391659410001012,1.1715286000016931,N/A
p4_sum_array_pairs,prompt_2,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_map = defaultdict(int)\n    count_pairs = 0\n    for i in arg1:\n        difference = arg2 - i\n        if count_map[difference]:\n            count_pairs += count_map[difference]\n        count_map[i] += 1\n    return count_pairs']",1000,0.014034800000445102,0.014664013000146952,0.01617400000031921,N/A
p4_sum_array_pairs,prompt_2,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_map = defaultdict(int)\n    count_pairs = 0\n    for i in arg1:\n        difference = arg2 - i\n        if count_map[difference]:\n            count_pairs += count_map[difference]\n        count_map[i] += 1\n    return count_pairs']",10000,0.138472599999659,0.14160862399992766,0.14649110000027576,N/A
p4_sum_array_pairs,prompt_2,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_map = defaultdict(int)\n    count_pairs = 0\n    for i in arg1:\n        difference = arg2 - i\n        if count_map[difference]:\n            count_pairs += count_map[difference]\n        count_map[i] += 1\n    return count_pairs']",100000,2.202384300000631,2.2519892250000337,2.2918812000007165,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(map(list, output))']",1000,0.004506200000832905,0.004741797000078805,0.00531800000135263,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(map(list, output))']",10000,0.05666860000019369,0.05811041899991323,0.061177499999757856,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return list(map(list, output))']",100000,0.946784600000683,0.9641685300000791,1.0028810999992857,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            count += elements[diff]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",1000,0.006262699998842436,0.0066539840000586995,0.007965800001329626,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            count += elements[diff]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",10000,0.06745330000012473,0.06984401600004275,0.07516680000117049,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            count += elements[diff]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",100000,1.0827994000010221,1.1019384710000668,1.1806873000004998,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    count = 0\n    found_values = {}\n    for i in arg1:\n        if arg2 - i in found_values:\n            count += found_values[arg2 - i]\n        found_values[i] = found_values.get(i, 0) + 1\n    return count']",1000,0.006652599999142694,0.007011054000140575,0.009546400000544963,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    count = 0\n    found_values = {}\n    for i in arg1:\n        if arg2 - i in found_values:\n            count += found_values[arg2 - i]\n        found_values[i] = found_values.get(i, 0) + 1\n    return count']",10000,0.07167769999978191,0.07333900200002973,0.07800219999990077,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    count = 0\n    found_values = {}\n    for i in arg1:\n        if arg2 - i in found_values:\n            count += found_values[arg2 - i]\n        found_values[i] = found_values.get(i, 0) + 1\n    return count']",100000,1.1169362999989971,1.1362747230000787,1.1634074999983568,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arr, target_sum):\n    sums = dict()\n    num_pairs = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in sums:\n            num_pairs += sums[complement]\n        sums[num] = sums.get(num, 0) + 1\n    return num_pairs']",1000,0.0067311000002518995,0.007090661000020191,0.008379399998375447,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arr, target_sum):\n    sums = dict()\n    num_pairs = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in sums:\n            num_pairs += sums[complement]\n        sums[num] = sums.get(num, 0) + 1\n    return num_pairs']",10000,0.0723333999994793,0.07344922999998743,0.08015990000058082,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arr, target_sum):\n    sums = dict()\n    num_pairs = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in sums:\n            num_pairs += sums[complement]\n        sums[num] = sums.get(num, 0) + 1\n    return num_pairs']",100000,1.1074170000010781,1.1358256460000848,1.1613753000001452,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        difference = arg2 - num\n        count += lookup.get(difference, 0)\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",1000,0.007472100000086357,0.008018573000008473,0.01218440000047849,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        difference = arg2 - num\n        count += lookup.get(difference, 0)\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",10000,0.07930449999912526,0.08125645199999781,0.08695849999821803,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        difference = arg2 - num\n        count += lookup.get(difference, 0)\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",100000,1.2071536000003107,1.228892100000012,1.259295200001361,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        pair_count += count_map.get(arg2 - num, 0)\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",1000,0.007522500000050059,0.007945145999874512,0.01030449999962002,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        pair_count += count_map.get(arg2 - num, 0)\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",10000,0.07980390000011539,0.0819086459999562,0.08958170000005339,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        pair_count += count_map.get(arg2 - num, 0)\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",100000,1.2071142999993754,1.2282041460000437,1.247307000001456,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in dict_map:\n            count += dict_map[remaining]\n        if num not in dict_map:\n            dict_map[num] = 0\n        dict_map[num] += 1\n    return count']",1000,0.008830099999613594,0.009205795000070793,0.010591700000077253,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in dict_map:\n            count += dict_map[remaining]\n        if num not in dict_map:\n            dict_map[num] = 0\n        dict_map[num] += 1\n    return count']",10000,0.09248850000039965,0.09389221400000679,0.1022506000008434,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in dict_map:\n            count += dict_map[remaining]\n        if num not in dict_map:\n            dict_map[num] = 0\n        dict_map[num] += 1\n    return count']",100000,1.3179940999998507,1.346844409000005,1.390293799999199,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for num in arg1:\n        hash_table[num] = hash_table.get(num, 0) + 1\n    for num in arg1:\n        target = arg2 - num\n        if target in hash_table:\n            count += hash_table[target]\n        if target == num:\n            count -= 1\n    return count // 2\npass']",1000,0.007736300000033225,0.00812701200009542,0.01076180000018212,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for num in arg1:\n        hash_table[num] = hash_table.get(num, 0) + 1\n    for num in arg1:\n        target = arg2 - num\n        if target in hash_table:\n            count += hash_table[target]\n        if target == num:\n            count -= 1\n    return count // 2\npass']",10000,0.0872161999996024,0.08886799299987615,0.09439749999910418,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    hash_table = {}\n    count = 0\n    for num in arg1:\n        hash_table[num] = hash_table.get(num, 0) + 1\n    for num in arg1:\n        target = arg2 - num\n        if target in hash_table:\n            count += hash_table[target]\n        if target == num:\n            count -= 1\n    return count // 2\npass']",100000,1.2905212999994546,1.31384238800003,1.3397904000012204,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in count:\n            pair_count += count[arg2 - num]\n        if num not in count:\n            count[num] = 0\n        count[num] += 1\n    return pair_count']",1000,0.008740999999645283,0.009198037999994994,0.010806499998579966,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in count:\n            pair_count += count[arg2 - num]\n        if num not in count:\n            count[num] = 0\n        count[num] += 1\n    return pair_count']",10000,0.09127320000152395,0.09327951400007806,0.0968075000000681,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in count:\n            pair_count += count[arg2 - num]\n        if num not in count:\n            count[num] = 0\n        count[num] += 1\n    return pair_count']",100000,1.3215916000008292,1.34877390200003,1.3772742999990442,N/A
p4_sum_array_pairs,prompt_2,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pair_count += num_dict[arg2 - num]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",1000,0.006058699998902739,0.006314745000054245,0.006708199998683995,N/A
p4_sum_array_pairs,prompt_2,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pair_count += num_dict[arg2 - num]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",10000,0.0665590999997221,0.06834784299999228,0.07168360000105167,N/A
p4_sum_array_pairs,prompt_2,28,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pair_count += num_dict[arg2 - num]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",100000,1.0699760999996215,1.090623652999966,1.1267932999999175,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    diff_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        if num in diff_counts:\n            pairs_count += diff_counts[num]\n        diff_counts.setdefault(arg2 - num, 0)\n        diff_counts[arg2 - num] += 1\n    return pairs_count']",1000,0.01004339999963122,0.010653261999996175,0.014931300000171177,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    diff_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        if num in diff_counts:\n            pairs_count += diff_counts[num]\n        diff_counts.setdefault(arg2 - num, 0)\n        diff_counts[arg2 - num] += 1\n    return pairs_count']",10000,0.1026079999992362,0.10504130699993766,0.10881070000141335,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    diff_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        if num in diff_counts:\n            pairs_count += diff_counts[num]\n        diff_counts.setdefault(arg2 - num, 0)\n        diff_counts[arg2 - num] += 1\n    return pairs_count']",100000,1.4918431000005512,1.5198841139999968,1.5431177999998908,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    difference = {}\n    count = 0\n    for element in arg1:\n        count += difference.get(element, 0)\n        difference[arg2 - element] = difference.get(arg2 - element, 0) + 1\n    return count']",1000,0.008447299998806557,0.008860068000030879,0.010390499999630265,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    difference = {}\n    count = 0\n    for element in arg1:\n        count += difference.get(element, 0)\n        difference[arg2 - element] = difference.get(arg2 - element, 0) + 1\n    return count']",10000,0.08948009999949136,0.09113822399991477,0.0945826000024681,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    difference = {}\n    count = 0\n    for element in arg1:\n        count += difference.get(element, 0)\n        difference[arg2 - element] = difference.get(arg2 - element, 0) + 1\n    return count']",100000,1.3189383999997517,1.3506929180000224,1.3749865999998292,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",1000,0.0044283000024734065,0.0046221270001478845,0.00487040000007255,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",10000,0.054904100001294864,0.05666873699985445,0.06571869999970659,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",100000,0.8265941000026942,0.8461196300001393,0.8777737999989768,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((complement, num))\n        hash_map[num] = True\n    return pairs']",1000,0.005251200000202516,0.005484029999897757,0.0066573000003700145,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((complement, num))\n        hash_map[num] = True\n    return pairs']",10000,0.05739909999829251,0.05933295899991208,0.06189699999958975,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((complement, num))\n        hash_map[num] = True\n    return pairs']",100000,0.9645466000001761,0.9846682160001364,1.006799199996749,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    num_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006084500000724802,0.0064752010001029705,0.007231299998238683,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    num_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.0669971000024816,0.06906239499992807,0.07148990000132471,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    num_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.0571300999981759,1.0860867769999094,1.1140820999971766,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for num in arg1:\n        if num in dict_counts:\n            pair_count += dict_counts[num]\n        dict_counts[arg2 - num] = dict_counts.get(arg2 - num, 0) + 1\n    return pair_count']",1000,0.007569599998532794,0.007948448999777612,0.009688800000731135,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for num in arg1:\n        if num in dict_counts:\n            pair_count += dict_counts[num]\n        dict_counts[arg2 - num] = dict_counts.get(arg2 - num, 0) + 1\n    return pair_count']",10000,0.0815552000021853,0.08345674600008351,0.09064090000174474,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for num in arg1:\n        if num in dict_counts:\n            pair_count += dict_counts[num]\n        dict_counts[arg2 - num] = dict_counts.get(arg2 - num, 0) + 1\n    return pair_count']",100000,1.2477182000002358,1.2715509630000452,1.3054878000002645,N/A
p4_sum_array_pairs,prompt_2,35,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_counts = {}\n    pair_count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in element_counts and element_counts[diff] > 0:\n            pair_count += 1\n            element_counts[diff] -= 1\n        else:\n            element_counts[ele] = element_counts.get(ele, 0) + 1\n    return pair_count']",1000,0.0067971999997098465,0.007235129999680794,0.011047700001654448,N/A
p4_sum_array_pairs,prompt_2,35,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_counts = {}\n    pair_count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in element_counts and element_counts[diff] > 0:\n            pair_count += 1\n            element_counts[diff] -= 1\n        else:\n            element_counts[ele] = element_counts.get(ele, 0) + 1\n    return pair_count']",10000,0.07342530000096303,0.07518474499996955,0.07902260000264505,N/A
p4_sum_array_pairs,prompt_2,35,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_counts = {}\n    pair_count = 0\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in element_counts and element_counts[diff] > 0:\n            pair_count += 1\n            element_counts[diff] -= 1\n        else:\n            element_counts[ele] = element_counts.get(ele, 0) + 1\n    return pair_count']",100000,1.1322710000022198,1.1505153830000199,1.1660716000005777,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    occurrence_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in occurrence_dict:\n            pair_count += occurrence_dict[arg2 - num]\n        occurrence_dict[num] = occurrence_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006511499999760417,0.006745204000035301,0.007640300002094591,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    occurrence_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in occurrence_dict:\n            pair_count += occurrence_dict[arg2 - num]\n        occurrence_dict[num] = occurrence_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07051249999858555,0.07181224000007205,0.07936659999904805,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    occurrence_dict = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in occurrence_dict:\n            pair_count += occurrence_dict[arg2 - num]\n        occurrence_dict[num] = occurrence_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1009493000019575,1.1251448739999979,1.1466306000002078,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.006772899996576598,0.007108116000053997,0.00950590000138618,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.0720800999988569,0.07385113100004674,0.07835250000061933,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.1193937999996706,1.1465316189999795,1.1974014999977953,N/A
p4_sum_array_pairs,prompt_2,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashed = set()\n    pairs_count = 0\n    for i in range(len(arg1)):\n        target = arg2 - arg1[i]\n        if target in hashed:\n            pairs_count += 1\n        hashed.add(arg1[i])\n    return pairs_count']",1000,0.005178400002478156,0.0054343219997826965,0.00611399999979767,N/A
p4_sum_array_pairs,prompt_2,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashed = set()\n    pairs_count = 0\n    for i in range(len(arg1)):\n        target = arg2 - arg1[i]\n        if target in hashed:\n            pairs_count += 1\n        hashed.add(arg1[i])\n    return pairs_count']",10000,0.06254880000051344,0.06423844800010556,0.06919940000079805,N/A
p4_sum_array_pairs,prompt_2,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashed = set()\n    pairs_count = 0\n    for i in range(len(arg1)):\n        target = arg2 - arg1[i]\n        if target in hashed:\n            pairs_count += 1\n        hashed.add(arg1[i])\n    return pairs_count']",100000,0.9249471000002814,0.939980022000018,0.9690813999986858,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        else:\n            seen.add(num)\n    return count']",1000,0.004232899998896755,0.004490649000144913,0.005466599999635946,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        else:\n            seen.add(num)\n    return count']",10000,0.05250990000058664,0.054540411999987555,0.057066700002906146,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        else:\n            seen.add(num)\n    return count']",100000,0.8161896000019624,0.8263786270000856,0.8433204000029946,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in map:\n            counter += map[complementary]\n        if num not in map:\n            map[num] = 0\n        map[num] += 1\n    return counter']",1000,0.008906499999284279,0.009342902000207686,0.010392699998192256,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in map:\n            counter += map[complementary]\n        if num not in map:\n            map[num] = 0\n        map[num] += 1\n    return counter']",10000,0.09346989999903599,0.09564555000019027,0.09917590000259224,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    map = {}\n    counter = 0\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in map:\n            counter += map[complementary]\n        if num not in map:\n            map[num] = 0\n        map[num] += 1\n    return counter']",100000,1.3464491999984602,1.3636955699997997,1.3835160000016913,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    saved = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in saved:\n            count += saved[difference]\n        if num not in saved:\n            saved[num] = 0\n        saved[num] += 1\n    return count']",1000,0.008875900002749404,0.0093148749998727,0.010035400002379902,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    saved = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in saved:\n            count += saved[difference]\n        if num not in saved:\n            saved[num] = 0\n        saved[num] += 1\n    return count']",10000,0.09385720000136644,0.0958934799999406,0.1009559000012814,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    saved = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in saved:\n            count += saved[difference]\n        if num not in saved:\n            saved[num] = 0\n        saved[num] += 1\n    return count']",100000,1.3449786999990465,1.364627543999668,1.3840520000012475,N/A
p4_sum_array_pairs,prompt_2,42,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_count = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in element_count:\n            count += element_count[arg2 - i]\n        if i in element_count:\n            element_count[i] += 1\n        else:\n            element_count[i] = 1\n    return count']",1000,0.006168500000057975,0.006528184000053443,0.00811500000054366,N/A
p4_sum_array_pairs,prompt_2,42,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_count = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in element_count:\n            count += element_count[arg2 - i]\n        if i in element_count:\n            element_count[i] += 1\n        else:\n            element_count[i] = 1\n    return count']",10000,0.06584400000065216,0.06790860500004783,0.06960550000076182,N/A
p4_sum_array_pairs,prompt_2,42,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_count = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in element_count:\n            count += element_count[arg2 - i]\n        if i in element_count:\n            element_count[i] += 1\n        else:\n            element_count[i] = 1\n    return count']",100000,1.0752345000000787,1.0948454709999715,1.115387699999701,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            counter += seen[target]\n            seen[target] -= 1\n            if seen[target] == 0:\n                del seen[target]\n        else:\n            seen[i] = 1\n    return counter']",1000,0.005386900000303285,0.005568271000229288,0.006925000001501758,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            counter += seen[target]\n            seen[target] -= 1\n            if seen[target] == 0:\n                del seen[target]\n        else:\n            seen[i] = 1\n    return counter']",10000,0.0584552000000258,0.061483210000114925,0.07128279999960796,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            counter += seen[target]\n            seen[target] -= 1\n            if seen[target] == 0:\n                del seen[target]\n        else:\n            seen[i] = 1\n    return counter']",100000,0.9905287000001408,1.0107855419998304,1.0366990999973495,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.005992700000206241,0.0063536220002060875,0.00735530000019935,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06569579999995767,0.06843350799994369,0.07766339999943739,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.07781889999751,1.099657421000229,1.13997179999933,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pairs_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pairs_count']",1000,0.006132200000138255,0.006559714000031818,0.008739899996726308,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pairs_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pairs_count']",10000,0.06686009999975795,0.06951368400008505,0.08190319999994244,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pairs_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pairs_count']",100000,1.0712860000021465,1.1006733900000472,1.1365589999986696,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    elem_dict = {}\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in elem_dict:\n            pair_count += elem_dict[arg2 - elem]\n        if elem_dict.get(elem):\n            elem_dict[elem] += 1\n        else:\n            elem_dict[elem] = 1\n    pass']",1000,0.006536799999594223,0.007167531999693892,0.013434000000415836,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    elem_dict = {}\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in elem_dict:\n            pair_count += elem_dict[arg2 - elem]\n        if elem_dict.get(elem):\n            elem_dict[elem] += 1\n        else:\n            elem_dict[elem] = 1\n    pass']",10000,0.07042699999874458,0.07384372400021676,0.09378319999814266,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    elem_dict = {}\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in elem_dict:\n            pair_count += elem_dict[arg2 - elem]\n        if elem_dict.get(elem):\n            elem_dict[elem] += 1\n        else:\n            elem_dict[elem] = 1\n    pass']",100000,1.1256051000018488,1.1473585499998809,1.186829399997805,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006562599999597296,0.007212387999934435,0.011593699997320073,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07070309999835445,0.07409628499990503,0.08775189999869326,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1196218000004592,1.1461721299996135,1.169652500000666,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.006714500002999557,0.0072142940001867824,0.009237300000677351,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.07247760000245762,0.07566523999998026,0.08989690000089468,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.128203600001143,1.1581665900000007,1.2035718000006455,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in hashmap:\n            count += hashmap[complement]\n        if arg1[i] in hashmap:\n            hashmap[arg1[i]] += 1\n        else:\n            hashmap[arg1[i]] = 1\n    return count']",1000,0.007215000001451699,0.00779920699998911,0.010198399999353569,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in hashmap:\n            count += hashmap[complement]\n        if arg1[i] in hashmap:\n            hashmap[arg1[i]] += 1\n        else:\n            hashmap[arg1[i]] = 1\n    return count']",10000,0.07859670000107144,0.08172922000012477,0.09096610000051442,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in hashmap:\n            count += hashmap[complement]\n        if arg1[i] in hashmap:\n            hashmap[arg1[i]] += 1\n        else:\n            hashmap[arg1[i]] = 1\n    return count']",100000,1.2021430999993754,1.2219087089998357,1.2485947999994096,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += element_dict.get(complement, 0)\n        element_dict[num] = element_dict.get(num, 0) + 1\n    return pair_count']",1000,0.007496199999877717,0.007947426999999152,0.010685499997634906,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += element_dict.get(complement, 0)\n        element_dict[num] = element_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07973089999723015,0.08279909900000348,0.09293089999846416,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += element_dict.get(complement, 0)\n        element_dict[num] = element_dict.get(num, 0) + 1\n    return pair_count']",100000,1.2122415999983787,1.2358278399999472,1.2686498000002757,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            pair_count += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return pair_count']",1000,0.006753800000296906,0.007254459999967366,0.010367899998527719,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            pair_count += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return pair_count']",10000,0.07243489999746089,0.07520808599987504,0.08949260000008508,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pair_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in seen:\n            pair_count += seen[remainder]\n        seen[num] = seen.get(num, 0) + 1\n    return pair_count']",100000,1.1267378000011377,1.1591079710001213,1.2180057000005036,N/A
p4_sum_array_pairs,prompt_2,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0074838000000454485,0.007996536999780802,0.011315699997794582,N/A
p4_sum_array_pairs,prompt_2,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.08004169999912847,0.08319629500045267,0.09728890000042156,N/A
p4_sum_array_pairs,prompt_2,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2161296999984188,1.2445643569999447,1.283067000000301,N/A
p4_sum_array_pairs,prompt_2,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_counts.get(complement, 0)\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return pair_count']",1000,0.007595799997943686,0.00802922499984561,0.011767200001486344,N/A
p4_sum_array_pairs,prompt_2,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_counts.get(complement, 0)\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return pair_count']",10000,0.07949059999737074,0.08246672000030231,0.08858970000073896,N/A
p4_sum_array_pairs,prompt_2,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_counts.get(complement, 0)\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return pair_count']",100000,1.2037691000004997,1.2379855379998117,1.2714919999998529,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = dict()\n    for i in arg1:\n        if arg2 - i in hash_map:\n            counter += hash_map[arg2 - i]\n        hash_map[i] = hash_map.get(i, 0) + 1\n    return counter']",1000,0.006546299999172334,0.006951665000124194,0.00878980000197771,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = dict()\n    for i in arg1:\n        if arg2 - i in hash_map:\n            counter += hash_map[arg2 - i]\n        hash_map[i] = hash_map.get(i, 0) + 1\n    return counter']",10000,0.0715762999971048,0.0743220260000453,0.0849763999976858,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = dict()\n    for i in arg1:\n        if arg2 - i in hash_map:\n            counter += hash_map[arg2 - i]\n        hash_map[i] = hash_map.get(i, 0) + 1\n    return counter']",100000,1.1253242000020691,1.1486593209997955,1.18280230000164,N/A
p4_sum_array_pairs,prompt_2,55,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter(arg1)\n    total_pairs = 0\n    for key in count:\n        complement = arg2 - key\n        if complement in count:\n            total_pairs += count[key]\n    if arg2 % 2 == 0:\n        total_pairs -= count[arg2 // 2]\n    return total_pairs // 2']",1000,0.006715499999700114,0.006989366999769118,0.008435399999143556,N/A
p4_sum_array_pairs,prompt_2,55,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter(arg1)\n    total_pairs = 0\n    for key in count:\n        complement = arg2 - key\n        if complement in count:\n            total_pairs += count[key]\n    if arg2 % 2 == 0:\n        total_pairs -= count[arg2 // 2]\n    return total_pairs // 2']",10000,0.07084690000192495,0.07349923000016133,0.08495440000115195,N/A
p4_sum_array_pairs,prompt_2,55,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter(arg1)\n    total_pairs = 0\n    for key in count:\n        complement = arg2 - key\n        if complement in count:\n            total_pairs += count[key]\n    if arg2 % 2 == 0:\n        total_pairs -= count[arg2 // 2]\n    return total_pairs // 2']",100000,1.0887858000023698,1.124206965999765,1.1593078000005335,N/A
p4_sum_array_pairs,prompt_2,56,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    num_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] += 1\n    return pair_count']",1000,0.010105099998327205,0.011163548000004084,0.02982729999712319,N/A
p4_sum_array_pairs,prompt_2,56,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    num_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] += 1\n    return pair_count']",10000,0.10493639999913285,0.10826640299990686,0.12497570000050473,N/A
p4_sum_array_pairs,prompt_2,56,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    num_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] += 1\n    return pair_count']",100000,1.4659904000000097,1.4920112890000383,1.5346587999993062,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    map = {}\n    pair_count = 0\n    for a in arg1:\n        if arg2 - a in map:\n            pair_count += map[arg2 - a]\n        map[a] = map.get(a, 0) + 1\n    return pair_count']",1000,0.006616400001803413,0.006965606999838201,0.009754700000485172,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    map = {}\n    pair_count = 0\n    for a in arg1:\n        if arg2 - a in map:\n            pair_count += map[arg2 - a]\n        map[a] = map.get(a, 0) + 1\n    return pair_count']",10000,0.07073440000021947,0.07342444800015073,0.08203169999978854,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    map = {}\n    pair_count = 0\n    for a in arg1:\n        if arg2 - a in map:\n            pair_count += map[arg2 - a]\n        map[a] = map.get(a, 0) + 1\n    return pair_count']",100000,1.1280226999988372,1.1490490070001034,1.1831344999991416,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(lst, sum):\n    count = 0\n    dict = {}\n    for num in lst:\n        temp = sum - num\n        if temp in dict:\n            count += dict[temp]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",1000,0.006767499999114079,0.007139814000147453,0.008416500000748783,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(lst, sum):\n    count = 0\n    dict = {}\n    for num in lst:\n        temp = sum - num\n        if temp in dict:\n            count += dict[temp]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",10000,0.07218439999996917,0.0755021110000962,0.08522420000008424,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(lst, sum):\n    count = 0\n    dict = {}\n    for num in lst:\n        temp = sum - num\n        if temp in dict:\n            count += dict[temp]\n        dict[num] = dict.get(num, 0) + 1\n    return count']",100000,1.1333908999986306,1.1588266680001835,1.191167700002552,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0065190000022994354,0.0068751930000871654,0.008183999998436775,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07067209999877377,0.07308996000007027,0.08376570000109496,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1130792000003566,1.1451108180001028,1.1766182999999728,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",1000,0.006790700001147343,0.007175974999918253,0.00987610000083805,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",10000,0.07293570000183536,0.07604695300011372,0.08410540000113542,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            counter += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",100000,1.1344750999996904,1.1577061270000923,1.1927308999984234,N/A
p4_sum_array_pairs,prompt_2,61,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    numbers_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers_dict:\n            pair_count += numbers_dict[diff]\n        if num in numbers_dict:\n            numbers_dict[num] += 1\n        else:\n            numbers_dict[num] = 1\n    return pair_count']",1000,0.006141300000308547,0.006537949000121443,0.00936100000035367,N/A
p4_sum_array_pairs,prompt_2,61,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    numbers_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers_dict:\n            pair_count += numbers_dict[diff]\n        if num in numbers_dict:\n            numbers_dict[num] += 1\n        else:\n            numbers_dict[num] = 1\n    return pair_count']",10000,0.06665980000252603,0.06972787200029415,0.08264270000290708,N/A
p4_sum_array_pairs,prompt_2,61,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    numbers_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers_dict:\n            pair_count += numbers_dict[diff]\n        if num in numbers_dict:\n            numbers_dict[num] += 1\n        else:\n            numbers_dict[num] = 1\n    return pair_count']",100000,1.0775711000023875,1.1034007319998635,1.1441961999989871,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",1000,0.0067608999997901265,0.0071326140001838215,0.008310699999128701,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",10000,0.07233099999939441,0.07461061999998492,0.08356499999717926,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",100000,1.1299455999978818,1.1609627280000132,1.1866121999992174,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    freq = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006608600000618026,0.006996671999986575,0.00934380000035162,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    freq = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07060949999868171,0.07377818199980539,0.07962060000136262,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    freq = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1217944000018178,1.1468283099999461,1.1838738999977068,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    count = 0\n    map = dict()\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.006036700000549899,0.006375909999951546,0.00813669999843114,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    count = 0\n    map = dict()\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06584049999946728,0.06854948499989405,0.0748953000002075,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    count = 0\n    map = dict()\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.0617545999994036,1.0992828650000228,1.1461893000014243,N/A
p4_sum_array_pairs,prompt_2,65,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pair_count']",1000,0.00605350000114413,0.006402311000165355,0.007457200001226738,N/A
p4_sum_array_pairs,prompt_2,65,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pair_count']",10000,0.06587740000031772,0.06875751200001105,0.07523369999762508,N/A
p4_sum_array_pairs,prompt_2,65,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pair_count']",100000,1.077655599998252,1.1021372030000203,1.1451554999985092,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    m = {}\n    res = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            res += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return res']",1000,0.006900999997014878,0.007275106999804848,0.00816560000021127,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    m = {}\n    res = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            res += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return res']",10000,0.06672740000067279,0.0702801000000909,0.08509269999922253,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    m = {}\n    res = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            res += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return res']",100000,1.0772384999982023,1.100471544000029,1.1250235000006796,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    arr_dict = {}\n    count = 0\n    for element in arg1:\n        remain = arg2 - element\n        if remain in arr_dict:\n            count += arr_dict[remain]\n        if element in arr_dict:\n            arr_dict[element] += 1\n        else:\n            arr_dict[element] = 1\n    return count']",1000,0.0061153999995440245,0.006512105000001611,0.008815900000627153,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    arr_dict = {}\n    count = 0\n    for element in arg1:\n        remain = arg2 - element\n        if remain in arr_dict:\n            count += arr_dict[remain]\n        if element in arr_dict:\n            arr_dict[element] += 1\n        else:\n            arr_dict[element] = 1\n    return count']",10000,0.06751900000017486,0.07042495400022744,0.08964259999993374,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    arr_dict = {}\n    count = 0\n    for element in arg1:\n        remain = arg2 - element\n        if remain in arr_dict:\n            count += arr_dict[remain]\n        if element in arr_dict:\n            arr_dict[element] += 1\n        else:\n            arr_dict[element] = 1\n    return count']",100000,1.0803037000005133,1.100873313999873,1.13413539999965,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004446599999937462,0.004823832000110997,0.008166399999026908,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05490329999884125,0.05757154699971579,0.06624109999756911,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8488827000001038,0.8700349050000296,0.8948206999994,N/A
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    count = 0\n    m = [0] * 1000\n    for i in range(0, len(arg1)):\n        rem = arg2 - arg1[i]\n        if m[rem] != 0:\n            count += m[rem]\n        m[arg1[i]] += 1\n    return count']",1000,0,0,0,	 exception: list index out of range
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    count = 0\n    m = [0] * 1000\n    for i in range(0, len(arg1)):\n        rem = arg2 - arg1[i]\n        if m[rem] != 0:\n            count += m[rem]\n        m[arg1[i]] += 1\n    return count']",10000,0,0,0,	 exception: list index out of range
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    count = 0\n    m = [0] * 1000\n    for i in range(0, len(arg1)):\n        rem = arg2 - arg1[i]\n        if m[rem] != 0:\n            count += m[rem]\n        m[arg1[i]] += 1\n    return count']",100000,0,0,0,	 exception: list index out of range
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for el in arg1:\n        complement = arg2 - el\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[el] = counts.get(el, 0) + 1\n    return pair_count']",1000,0.006776499998522922,0.007261197000007087,0.011275000000750879,N/A
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for el in arg1:\n        complement = arg2 - el\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[el] = counts.get(el, 0) + 1\n    return pair_count']",10000,0.0722185000013269,0.07534178200010501,0.0860692000023846,N/A
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for el in arg1:\n        complement = arg2 - el\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[el] = counts.get(el, 0) + 1\n    return pair_count']",100000,1.139626500000304,1.1637367219999941,1.2008932000026107,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arr, sum_val):\n    freq = dict()\n    count = 0\n    for num in arr:\n        complement = sum_val - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006741500001226086,0.007232138000072155,0.010594599996693432,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arr, sum_val):\n    freq = dict()\n    count = 0\n    for num in arr:\n        complement = sum_val - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07243840000228374,0.07513377200008108,0.08188210000298568,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arr, sum_val):\n    freq = dict()\n    count = 0\n    for num in arr:\n        complement = sum_val - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1358716999966418,1.1631736190001174,1.2036912000003213,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006742500001564622,0.007169407999899704,0.009551399998599663,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07212179999987711,0.07530369700023584,0.08713260000149603,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1275015999999596,1.157171859999944,1.189320499997848,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.00750299999708659,0.008028071999760869,0.010807499998918502,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07984959999885177,0.08211375499984569,0.08723280000049272,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.21960240000044,1.2364572619998215,1.2737889000018185,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    counter_dict = dict()\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in counter_dict:\n            pair_count += counter_dict[arg2 - elem]\n        if elem in counter_dict:\n            counter_dict[elem] += 1\n        else:\n            counter_dict[elem] = 1\n    return pair_count']",1000,0.006068400001822738,0.0063403670003754084,0.007390399998257635,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    counter_dict = dict()\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in counter_dict:\n            pair_count += counter_dict[arg2 - elem]\n        if elem in counter_dict:\n            counter_dict[elem] += 1\n        else:\n            counter_dict[elem] = 1\n    return pair_count']",10000,0.06620339999790303,0.06812732399976085,0.07311589999881107,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    counter_dict = dict()\n    pair_count = 0\n    for elem in arg1:\n        if arg2 - elem in counter_dict:\n            pair_count += counter_dict[arg2 - elem]\n        if elem in counter_dict:\n            counter_dict[elem] += 1\n        else:\n            counter_dict[elem] = 1\n    return pair_count']",100000,1.0809172000008402,1.0963260750001427,1.133742699999857,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006545100000948878,0.006849346999915724,0.0073321999989275355,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07170920000135084,0.07309318000010535,0.07718930000191904,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.1218066000001272,1.1425963349998347,1.1653885999985505,N/A
p4_sum_array_pairs,prompt_2,76,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006811299997934839,0.007123160999872198,0.007478299998183502,N/A
p4_sum_array_pairs,prompt_2,76,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07370060000175727,0.07502100700014125,0.07825709999815444,N/A
p4_sum_array_pairs,prompt_2,76,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1394604000015534,1.1575567790000423,1.1933521000028122,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in dict_counts:\n            counter += dict_counts[arg2 - i]\n        if i in dict_counts:\n            dict_counts[i] += 1\n        else:\n            dict_counts[i] = 1\n    return counter']",1000,0.006121299997175811,0.006497154999888153,0.00839579999956186,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in dict_counts:\n            counter += dict_counts[arg2 - i]\n        if i in dict_counts:\n            dict_counts[i] += 1\n        else:\n            dict_counts[i] = 1\n    return counter']",10000,0.06605380000110017,0.06818775199993979,0.07254269999975804,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in dict_counts:\n            counter += dict_counts[arg2 - i]\n        if i in dict_counts:\n            dict_counts[i] += 1\n        else:\n            dict_counts[i] = 1\n    return counter']",100000,1.0703070999988995,1.0909628469998642,1.1187611000023026,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            pair_count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return pair_count']",1000,0.007250399998156354,0.007564370000072813,0.007917499999166466,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            pair_count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return pair_count']",10000,0.07904070000222418,0.0806239330002063,0.08308870000109891,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            pair_count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return pair_count']",100000,1.1925297999987379,1.2126598059999014,1.2985426999985066,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",1000,0.006729299999278737,0.0071026949997758495,0.00924979999763309,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",10000,0.07294610000099055,0.07436836900029448,0.0761763999980758,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for i in arg1:\n        target = arg2 - i\n        if target in seen:\n            count += seen[target]\n        seen[i] = seen.get(i, 0) + 1\n    return count']",100000,1.1206181999987166,1.1486298359999636,1.192323800001759,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairCount = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairCount += hashMap[arg2 - num]\n        if num in hashMap:\n            hashMap[num] += 1\n        else:\n            hashMap[num] = 1\n    return pairCount']",1000,0.006047199996828567,0.006399908000203141,0.00801780000256258,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairCount = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairCount += hashMap[arg2 - num]\n        if num in hashMap:\n            hashMap[num] += 1\n        else:\n            hashMap[num] = 1\n    return pairCount']",10000,0.06639260000156355,0.06812897399991925,0.07250959999873885,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairCount = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairCount += hashMap[arg2 - num]\n        if num in hashMap:\n            hashMap[num] += 1\n        else:\n            hashMap[num] = 1\n    return pairCount']",100000,1.0833076000017172,1.1000071060000847,1.117258700000093,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",1000,0.006748300002072938,0.007125281000007817,0.010511899999983143,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",10000,0.07287280000309693,0.0746582150001268,0.07754290000229958,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",100000,1.120310000002064,1.1439203920002547,1.1719175999969593,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_dict:\n            count += seen_dict[complement]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return count']",1000,0.006754199999704724,0.0071027390000745075,0.009423599996807752,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_dict:\n            count += seen_dict[complement]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return count']",10000,0.07248660000186646,0.07393328299971472,0.07694830000036745,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_dict:\n            count += seen_dict[complement]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return count']",100000,1.1229425000019546,1.1477540059999591,1.1782994999994116,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.0065443999992567115,0.006896985999992467,0.00762639999811654,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.07191600000078324,0.07334372000008443,0.07758010000179638,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.1096029000000271,1.1337019549998877,1.1606504000010318,N/A
p4_sum_array_pairs,prompt_2,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count']",1000,0.006125299998529954,0.006447773999898345,0.006921899999724701,N/A
p4_sum_array_pairs,prompt_2,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count']",10000,0.06679259999873466,0.06862348200003908,0.07395550000001094,N/A
p4_sum_array_pairs,prompt_2,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count']",100000,1.0618872999984887,1.0853818789999787,1.1236809000001813,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count = 0\n    dict_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in dict_count:\n            count += dict_count[complement]\n        if number not in dict_count:\n            dict_count[number] = 1\n        else:\n            dict_count[number] += 1\n    return count']",1000,0.006209200000739656,0.006494216999926721,0.007774300000164658,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count = 0\n    dict_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in dict_count:\n            count += dict_count[complement]\n        if number not in dict_count:\n            dict_count[number] = 1\n        else:\n            dict_count[number] += 1\n    return count']",10000,0.06788899999810383,0.06918296100004227,0.07217639999726089,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count = 0\n    dict_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in dict_count:\n            count += dict_count[complement]\n        if number not in dict_count:\n            dict_count[number] = 1\n        else:\n            dict_count[number] += 1\n    return count']",100000,1.0795590999987326,1.0966277110001466,1.1129438000025402,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006782200001907768,0.007132188999930804,0.007966900000610622,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07348949999868637,0.07501483699983509,0.08081849999871338,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += seen[temp]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1299810000018624,1.1507671860002302,1.1912120999986655,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        pairs_count += seen.get(remainder, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",1000,0.0076816999971924815,0.007978368000112823,0.009345400001620874,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        pairs_count += seen.get(remainder, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",10000,0.07983450000028824,0.08225489400017977,0.09137530000225524,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs_count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        pairs_count += seen.get(remainder, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",100000,1.2110804000003554,1.2370508440000412,1.3642394999988028,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    visited_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited_numbers:\n            pair_count += visited_numbers[complement]\n        if num in visited_numbers:\n            visited_numbers[num] += 1\n        else:\n            visited_numbers[num] = 1\n    return pair_count']",1000,0.006150599998363759,0.006462629000125162,0.0081633999980113,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    visited_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited_numbers:\n            pair_count += visited_numbers[complement]\n        if num in visited_numbers:\n            visited_numbers[num] += 1\n        else:\n            visited_numbers[num] = 1\n    return pair_count']",10000,0.06742030000168597,0.06894822900005237,0.07346280000274419,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    visited_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited_numbers:\n            pair_count += visited_numbers[complement]\n        if num in visited_numbers:\n            visited_numbers[num] += 1\n        else:\n            visited_numbers[num] = 1\n    return pair_count']",100000,1.0661823999980697,1.085884574999982,1.1160276999980852,N/A
p4_sum_array_pairs,prompt_2,89,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_dict.get(complement, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",1000,0.007521200001065154,0.007938046000053873,0.011166799999045907,N/A
p4_sum_array_pairs,prompt_2,89,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_dict.get(complement, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",10000,0.079698700003064,0.08131287700009125,0.08754060000137542,N/A
p4_sum_array_pairs,prompt_2,89,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += num_dict.get(complement, 0)\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1907712000029278,1.2159480699999767,1.2353240999982518,N/A
p4_sum_array_pairs,prompt_2,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    number_dict = dict()\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_dict:\n            num_pairs += number_dict[complement]\n        if num not in number_dict:\n            number_dict[num] = 0\n        number_dict[num] += 1\n    return num_pairs']",1000,0.008788499999354826,0.00934120099977008,0.01548729999922216,N/A
p4_sum_array_pairs,prompt_2,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    number_dict = dict()\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_dict:\n            num_pairs += number_dict[complement]\n        if num not in number_dict:\n            number_dict[num] = 0\n        number_dict[num] += 1\n    return num_pairs']",10000,0.09244929999840679,0.09467136199997185,0.10077060000185156,N/A
p4_sum_array_pairs,prompt_2,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    number_dict = dict()\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_dict:\n            num_pairs += number_dict[complement]\n        if num not in number_dict:\n            number_dict[num] = 0\n        number_dict[num] += 1\n    return num_pairs']",100000,1.3404721999977482,1.3682840539999233,1.47344510000039,N/A
p4_sum_array_pairs,prompt_2,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in my_dict:\n            count += my_dict[rem]\n            my_dict[rem] -= 1\n            if my_dict[rem] == 0:\n                del my_dict[rem]\n        elif i not in my_dict:\n            my_dict[i] = 1\n        else:\n            my_dict[i] += 1\n    return count']",1000,0.006241499999305233,0.0065531199999168165,0.007324700000026496,N/A
p4_sum_array_pairs,prompt_2,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in my_dict:\n            count += my_dict[rem]\n            my_dict[rem] -= 1\n            if my_dict[rem] == 0:\n                del my_dict[rem]\n        elif i not in my_dict:\n            my_dict[i] = 1\n        else:\n            my_dict[i] += 1\n    return count']",10000,0.06866059999811114,0.07083813599998394,0.07982270000138669,N/A
p4_sum_array_pairs,prompt_2,91,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    my_dict = {}\n    count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in my_dict:\n            count += my_dict[rem]\n            my_dict[rem] -= 1\n            if my_dict[rem] == 0:\n                del my_dict[rem]\n        elif i not in my_dict:\n            my_dict[i] = 1\n        else:\n            my_dict[i] += 1\n    return count']",100000,1.105400299999019,1.1253960370001732,1.14573240000027,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += 1\n    return count']",1000,0.005266799998935312,0.005553821999856154,0.006224400000064634,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += 1\n    return count']",10000,0.057441799999651266,0.05953858299970307,0.07098620000033407,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            count += 1\n    return count']",100000,0.9337937999989663,0.951097532000058,0.9669863000017358,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    hash_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        count_pairs += hash_map.get(difference, 0)\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count_pairs']",1000,0.0075556000010692514,0.007987916999809386,0.009105900000577094,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    hash_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        count_pairs += hash_map.get(difference, 0)\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count_pairs']",10000,0.07948029999897699,0.08405245400004788,0.09738020000077086,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    hash_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        count_pairs += hash_map.get(difference, 0)\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count_pairs']",100000,1.217751700001827,1.237588298999799,1.2571270999978879,N/A
p4_sum_array_pairs,prompt_2,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_count = 0\n    frequency = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += frequency[complement]\n        frequency[num] += 1\n    return pair_count']",1000,0.014500799999950686,0.015134799999905225,0.01717550000103074,N/A
p4_sum_array_pairs,prompt_2,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_count = 0\n    frequency = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += frequency[complement]\n        frequency[num] += 1\n    return pair_count']",10000,0.14222959999824525,0.14506799399987358,0.1503283999991254,N/A
p4_sum_array_pairs,prompt_2,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_count = 0\n    frequency = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += frequency[complement]\n        frequency[num] += 1\n    return pair_count']",100000,2.2172753999984707,2.251931047000071,2.283721499999956,N/A
p4_sum_array_pairs,prompt_2,95,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    output = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, diff), max(num, diff)))\n    return list(output)']",1000,0.004514200001722202,0.00473545600023499,0.005936000001383945,N/A
p4_sum_array_pairs,prompt_2,95,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    output = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, diff), max(num, diff)))\n    return list(output)']",10000,0.055736799997248454,0.0572641929999736,0.06196490000002086,N/A
p4_sum_array_pairs,prompt_2,95,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    output = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, diff), max(num, diff)))\n    return list(output)']",100000,0.9242837999991025,0.9396059719997356,0.9633323999987624,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counts:\n            pair_count += counts[complement]\n        if i in counts:\n            counts[i] += 1\n        else:\n            counts[i] = 1\n    return pair_count']",1000,0.006142599999293452,0.00657638999982737,0.007804800003214041,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counts:\n            pair_count += counts[complement]\n        if i in counts:\n            counts[i] += 1\n        else:\n            counts[i] = 1\n    return pair_count']",10000,0.06699769999977434,0.06882314200011024,0.07679949999874225,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in counts:\n            pair_count += counts[complement]\n        if i in counts:\n            counts[i] += 1\n        else:\n            counts[i] = 1\n    return pair_count']",100000,1.0665349000009883,1.0922891319998962,1.1160882999975001,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    d = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in d:\n            count += d[arg2 - num]\n        d[num] = d.get(num, 0) + 1\n    return count']",1000,0.0065260999981546775,0.006844539999838162,0.007160199998907046,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    d = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in d:\n            count += d[arg2 - num]\n        d[num] = d.get(num, 0) + 1\n    return count']",10000,0.07161709999854793,0.07316883899984532,0.0775772999986657,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    d = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in d:\n            count += d[arg2 - num]\n        d[num] = d.get(num, 0) + 1\n    return count']",100000,1.1139617999979237,1.1344636869999158,1.1603892000021006,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pairs_count += count_dict[diff]\n        if num not in count_dict:\n            count_dict[num] = 0\n        count_dict[num] += 1\n    return pairs_count']",1000,0.008853100000123959,0.009318896000040695,0.011432700001023477,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pairs_count += count_dict[diff]\n        if num not in count_dict:\n            count_dict[num] = 0\n        count_dict[num] += 1\n    return pairs_count']",10000,0.0940496000002895,0.09642368600016198,0.10906899999827147,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pairs_count += count_dict[diff]\n        if num not in count_dict:\n            count_dict[num] = 0\n        count_dict[num] += 1\n    return pairs_count']",100000,1.3340045000004466,1.3655715319999944,1.4055593000011868,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in num_dict:\n            count += num_dict[arg2 - i]\n        if i in num_dict:\n            num_dict[i] += 1\n        else:\n            num_dict[i] = 1\n    return count']",1000,0.006060299998353003,0.006397486999921966,0.007730799999990268,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in num_dict:\n            count += num_dict[arg2 - i]\n        if i in num_dict:\n            num_dict[i] += 1\n        else:\n            num_dict[i] = 1\n    return count']",10000,0.06688539999959175,0.06833278299996891,0.07883880000008503,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in num_dict:\n            count += num_dict[arg2 - i]\n        if i in num_dict:\n            num_dict[i] += 1\n        else:\n            num_dict[i] = 1\n    return count']",100000,1.0722190999986196,1.0939645259999815,1.1125224999996135,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    nums = {}\n    pairs_count = 0\n    for i in arg1:\n        if nums.get(arg2 - i):\n            pairs_count += nums[arg2 - i]\n        nums[i] = nums.get(i, 0) + 1\n    return pairs_count']",1000,0.006949200000235578,0.0072973279999132504,0.008194100002583582,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    nums = {}\n    pairs_count = 0\n    for i in arg1:\n        if nums.get(arg2 - i):\n            pairs_count += nums[arg2 - i]\n        nums[i] = nums.get(i, 0) + 1\n    return pairs_count']",10000,0.07507919999989099,0.0767333869999129,0.07909890000155428,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    nums = {}\n    pairs_count = 0\n    for i in arg1:\n        if nums.get(arg2 - i):\n            pairs_count += nums[arg2 - i]\n        nums[i] = nums.get(i, 0) + 1\n    return pairs_count']",100000,1.1322427999984939,1.1547697409997637,1.1891796000018076,N/A
p4_sum_array_pairs,prompt_3,1,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",1000,0.006744499998603715,0.0071373249998941905,0.009420900001714472,N/A
p4_sum_array_pairs,prompt_3,1,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",10000,0.07233749999795691,0.07548779399967316,0.08652319999964675,N/A
p4_sum_array_pairs,prompt_3,1,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    lookup = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            count += lookup[diff]\n        lookup[num] = lookup.get(num, 0) + 1\n    return count']",100000,1.13322110000081,1.1618790560002525,1.2017550000018673,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count and dict_count[arg2 - num] > 0:\n            pair_count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return pair_count']",1000,0.00998309999704361,0.010637096000173187,0.012892299997474765,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count and dict_count[arg2 - num] > 0:\n            pair_count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return pair_count']",10000,0.10314250000010361,0.10789356500004942,0.12108230000012554,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count and dict_count[arg2 - num] > 0:\n            pair_count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return pair_count']",100000,1.4566903999984788,1.4868040840001049,1.5336382999994385,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    elements = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in elements:\n            pair_count += elements[arg2 - num]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",1000,0.006550399997649947,0.00693363300000783,0.008210600000893464,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    elements = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in elements:\n            pair_count += elements[arg2 - num]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",10000,0.0705658000006224,0.07349122700019507,0.08812290000059875,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    elements = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in elements:\n            pair_count += elements[arg2 - num]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",100000,1.1213844000012614,1.1509659160000956,1.194074199996976,N/A
p4_sum_array_pairs,prompt_3,4,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pairs += counter[complement]\n        counter[num] += 1\n    return pairs']",1000,0.010029599998233607,0.01075687000004109,0.012661300002946518,N/A
p4_sum_array_pairs,prompt_3,4,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pairs += counter[complement]\n        counter[num] += 1\n    return pairs']",10000,0.1051813999984006,0.10885776699997222,0.11661159999857773,N/A
p4_sum_array_pairs,prompt_3,4,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pairs += counter[complement]\n        counter[num] += 1\n    return pairs']",100000,1.4602578000012727,1.484465876999784,1.5115447999996832,N/A
p4_sum_array_pairs,prompt_3,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    number_dict = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in number_dict:\n            count += number_dict[arg2 - num]\n        number_dict[num] += 1\n    return count']",1000,0.011522199998580618,0.012104754999891157,0.013874399999622256,N/A
p4_sum_array_pairs,prompt_3,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    number_dict = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in number_dict:\n            count += number_dict[arg2 - num]\n        number_dict[num] += 1\n    return count']",10000,0.10202519999802462,0.10574389299974428,0.11620650000259047,N/A
p4_sum_array_pairs,prompt_3,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    number_dict = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in number_dict:\n            count += number_dict[arg2 - num]\n        number_dict[num] += 1\n    return count']",100000,1.448145399997884,1.4857860290001554,1.551766199998383,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",1000,0.004283800000848714,0.004551654000206327,0.0065794000001915265,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",10000,0.052796600000874605,0.05517552200006321,0.06335860000035609,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",100000,0.8325530999973125,0.8516975999998613,0.888734200001636,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006606799997825874,0.007081060999989858,0.011843899999803398,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07082069999887608,0.07386569799975405,0.08741620000000694,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.1206087999999,1.1472152460000506,1.183570299999701,N/A
p4_sum_array_pairs,prompt_3,8,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            counter += freq_map[complement]\n        freq_map[num] = freq_map.get(num, 0) + 1\n    return counter']",1000,0.006730500001140172,0.007041292000067188,0.009978499998396728,N/A
p4_sum_array_pairs,prompt_3,8,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            counter += freq_map[complement]\n        freq_map[num] = freq_map.get(num, 0) + 1\n    return counter']",10000,0.07216169999810518,0.07478374399986933,0.09610400000019581,N/A
p4_sum_array_pairs,prompt_3,8,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            counter += freq_map[complement]\n        freq_map[num] = freq_map.get(num, 0) + 1\n    return counter']",100000,1.1344365000004473,1.1596589909999602,1.1901978999994753,N/A
p4_sum_array_pairs,prompt_3,9,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.00671169999986887,0.007242383999910089,0.013052000002062414,N/A
p4_sum_array_pairs,prompt_3,9,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.072899700000562,0.07521992400001182,0.08054569999876549,N/A
p4_sum_array_pairs,prompt_3,9,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.1349177000010968,1.1597055649999675,1.1803424999998242,N/A
p4_sum_array_pairs,prompt_3,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs_dict:\n            count += pairs_dict[difference]\n        if num not in pairs_dict:\n            pairs_dict[num] = 0\n        pairs_dict[num] += 1\n    return count']",1000,0.008889799999451498,0.009422533999786537,0.011542699998244643,N/A
p4_sum_array_pairs,prompt_3,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs_dict:\n            count += pairs_dict[difference]\n        if num not in pairs_dict:\n            pairs_dict[num] = 0\n        pairs_dict[num] += 1\n    return count']",10000,0.09301549999872805,0.09688254799977586,0.1102978000017174,N/A
p4_sum_array_pairs,prompt_3,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs_dict:\n            count += pairs_dict[difference]\n        if num not in pairs_dict:\n            pairs_dict[num] = 0\n        pairs_dict[num] += 1\n    return count']",100000,1.3394661000020278,1.3712605100001383,1.4148147000014433,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    encountered_numbers = {}\n    pair_list = []\n    for number in arg1:\n        second_number = arg2 - number\n        if second_number in encountered_numbers:\n            pair_list.append((number, second_number))\n        encountered_numbers[number] = True\n    return pair_list']",1000,0.0051844999979948625,0.005587484999923617,0.008873899998434354,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    encountered_numbers = {}\n    pair_list = []\n    for number in arg1:\n        second_number = arg2 - number\n        if second_number in encountered_numbers:\n            pair_list.append((number, second_number))\n        encountered_numbers[number] = True\n    return pair_list']",10000,0.057286999999632826,0.059642793999846615,0.06761950000145589,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    encountered_numbers = {}\n    pair_list = []\n    for number in arg1:\n        second_number = arg2 - number\n        if second_number in encountered_numbers:\n            pair_list.append((number, second_number))\n        encountered_numbers[number] = True\n    return pair_list']",100000,0.9684227999969153,0.995359903999888,1.020179499999358,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",1000,0.004518600002484163,0.004868590999940352,0.007301499997993233,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",10000,0.055874499998026295,0.05885816200006957,0.06618370000069262,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",100000,0.9161046000008355,0.9492484459996559,0.9713564000012411,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",1000,0.006756299997505266,0.007269233999941207,0.01208260000203154,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",10000,0.07268730000214418,0.07605242100016767,0.08656599999812897,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",100000,1.129700599998614,1.1602238869998474,1.1923633999977028,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.0060374999993655365,0.006442055999832519,0.008007099997485057,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06588249999913387,0.06838089499979105,0.07972220000010566,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    num_count = dict()\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in num_count:\n            pair_count += num_count[arg2 - num]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.0732075000014447,1.0987673730001553,1.1315134999967995,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in seen:\n            counter += seen[arg2 - i]\n        if i in seen:\n            seen[i] += 1\n        else:\n            seen[i] = 1\n    return counter']",1000,0.0060228999973332975,0.006533655999955954,0.013490199999068864,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in seen:\n            counter += seen[arg2 - i]\n        if i in seen:\n            seen[i] += 1\n        else:\n            seen[i] = 1\n    return counter']",10000,0.06573700000080862,0.06836294499986252,0.07814820000203326,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for i in arg1:\n        if arg2 - i in seen:\n            counter += seen[arg2 - i]\n        if i in seen:\n            seen[i] += 1\n        else:\n            seen[i] = 1\n    return counter']",100000,1.0871764000003168,1.1047161010000126,1.1347803999997268,N/A
p4_sum_array_pairs,prompt_3,16,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    result = []\n    lookup = {}\n    for index, num in enumerate(arg1):\n        if num in lookup:\n            result.append((lookup[num], num))\n        else:\n            lookup[arg2 - num] = num\n    return result']",1000,0.005923700002313126,0.00640058399996633,0.011646499999187654,N/A
p4_sum_array_pairs,prompt_3,16,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    result = []\n    lookup = {}\n    for index, num in enumerate(arg1):\n        if num in lookup:\n            result.append((lookup[num], num))\n        else:\n            lookup[arg2 - num] = num\n    return result']",10000,0.06371209999997518,0.06634670500014181,0.07892290000017965,N/A
p4_sum_array_pairs,prompt_3,16,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    result = []\n    lookup = {}\n    for index, num in enumerate(arg1):\n        if num in lookup:\n            result.append((lookup[num], num))\n        else:\n            lookup[arg2 - num] = num\n    return result']",100000,1.0342622000025585,1.0744314060001126,1.114096299999801,N/A
p4_sum_array_pairs,prompt_3,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        counts[i] = counts.get(i, 0) + 1\n    return pairs']",1000,0.006515900000522379,0.007022051999992982,0.010245800000120653,N/A
p4_sum_array_pairs,prompt_3,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        counts[i] = counts.get(i, 0) + 1\n    return pairs']",10000,0.07073579999996582,0.07375436499973148,0.08832069999698433,N/A
p4_sum_array_pairs,prompt_3,17,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in counts:\n            pairs += counts[arg2 - i]\n        counts[i] = counts.get(i, 0) + 1\n    return pairs']",100000,1.107483299998421,1.146202492999837,1.1849049999982526,N/A
p4_sum_array_pairs,prompt_3,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    comp_dict = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if comp_dict[num] > 0:\n            count += comp_dict[num]\n        comp_dict[arg2 - num] += 1\n    return count']",1000,0.013852500000211876,0.014992931999950087,0.02123570000185282,N/A
p4_sum_array_pairs,prompt_3,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    comp_dict = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if comp_dict[num] > 0:\n            count += comp_dict[num]\n        comp_dict[arg2 - num] += 1\n    return count']",10000,0.13985690000117756,0.14548231800003122,0.15836969999872963,N/A
p4_sum_array_pairs,prompt_3,18,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    comp_dict = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if comp_dict[num] > 0:\n            count += comp_dict[num]\n        comp_dict[arg2 - num] += 1\n    return count']",100000,2.229255700000067,2.277903165000098,2.322237300002598,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    """"""Count pairs of elements in a list whose sum equals the specified sum in a single iteration.""""""\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            pair_count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.006739900003594812,0.0070988819999911355,0.0095303000016429,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    """"""Count pairs of elements in a list whose sum equals the specified sum in a single iteration.""""""\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            pair_count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07316030000220053,0.07496090700016794,0.08099199999924167,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    """"""Count pairs of elements in a list whose sum equals the specified sum in a single iteration.""""""\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counter:\n            pair_count += counter[difference]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.1312391999999818,1.1602555439998832,1.1951625999972748,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",1000,0.0067632999998750165,0.007233283000023221,0.010404900000139605,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",10000,0.07236959999863757,0.07544076800018956,0.08159539999905974,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",100000,1.1387328999990132,1.1618778260002,1.1889066999974602,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_values = dict()\n    for value in arg1:\n        remaining_value = arg2 - value\n        count_pairs += seen_values.get(remaining_value, 0)\n        seen_values[value] = seen_values.get(value, 0) + 1\n    return count_pairs']",1000,0.007414499999867985,0.008089895000011893,0.010718900000938447,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_values = dict()\n    for value in arg1:\n        remaining_value = arg2 - value\n        count_pairs += seen_values.get(remaining_value, 0)\n        seen_values[value] = seen_values.get(value, 0) + 1\n    return count_pairs']",10000,0.0793647000027704,0.08280470699974103,0.09117659999901662,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_values = dict()\n    for value in arg1:\n        remaining_value = arg2 - value\n        count_pairs += seen_values.get(remaining_value, 0)\n        seen_values[value] = seen_values.get(value, 0) + 1\n    return count_pairs']",100000,1.214623700001539,1.2424930289999248,1.3015974999980244,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number not in hash_map:\n            hash_map[number] = 1\n        else:\n            hash_map[number] += 1\n    return pair_count']",1000,0.006059100000129547,0.006385571999708191,0.0076420000004873145,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number not in hash_map:\n            hash_map[number] = 1\n        else:\n            hash_map[number] += 1\n    return pair_count']",10000,0.0663652999974147,0.06886724500003766,0.08080689999769675,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        if arg2 - number in hash_map:\n            pair_count += hash_map[arg2 - number]\n        if number not in hash_map:\n            hash_map[number] = 1\n        else:\n            hash_map[number] += 1\n    return pair_count']",100000,1.0822823000016797,1.1047963720001643,1.128909900002327,N/A
p4_sum_array_pairs,prompt_3,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_dict:\n            count += pair_dict[complement]\n        pair_dict[num] = pair_dict.get(num, 0) + 1\n    return count']",1000,0.006816300003265496,0.007371066999876347,0.012190399997052737,N/A
p4_sum_array_pairs,prompt_3,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_dict:\n            count += pair_dict[complement]\n        pair_dict[num] = pair_dict.get(num, 0) + 1\n    return count']",10000,0.07233519999863347,0.07636085399990407,0.10156889999780105,N/A
p4_sum_array_pairs,prompt_3,23,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_dict:\n            count += pair_dict[complement]\n        pair_dict[num] = pair_dict.get(num, 0) + 1\n    return count']",100000,1.1292959000020346,1.1610012180000922,1.1918307000014465,N/A
p4_sum_array_pairs,prompt_3,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",1000,0.006737699997756863,0.007163306000111333,0.011234800000238465,N/A
p4_sum_array_pairs,prompt_3,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",10000,0.07288920000064536,0.07558081900002435,0.0845093000025372,N/A
p4_sum_array_pairs,prompt_3,24,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",100000,1.1371623000013642,1.156053194999986,1.1879870000011579,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            output += seen[target]\n            seen[num] = 0\n    return output']",1000,0.005241700000624405,0.005573621000148705,0.008026300001802156,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            output += seen[target]\n            seen[num] = 0\n    return output']",10000,0.05753789999653236,0.05942468500030373,0.06551799999942887,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 0\n        else:\n            output += seen[target]\n            seen[num] = 0\n    return output']",100000,0.9509724000017741,0.975495235999806,1.0088219999997818,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq and freq[arg2 - num] > 0:\n            count += freq[arg2 - num]\n            freq[arg2 - num] -= 1\n        else:\n            freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006688999998004874,0.00705115000004298,0.009323199999926146,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq and freq[arg2 - num] > 0:\n            count += freq[arg2 - num]\n            freq[arg2 - num] -= 1\n        else:\n            freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07095349999872269,0.07401498999985051,0.08300649999728194,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq and freq[arg2 - num] > 0:\n            count += freq[arg2 - num]\n            freq[arg2 - num] -= 1\n        else:\n            freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1442253999994136,1.1633719609999753,1.1987623999993957,N/A
p4_sum_array_pairs,prompt_3,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if count_dict.get(remainder) is not None:\n            pairs_count += count_dict.get(remainder)\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pairs_count']",1000,0.007027100000414066,0.0075924529998883375,0.010908799999015173,N/A
p4_sum_array_pairs,prompt_3,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if count_dict.get(remainder) is not None:\n            pairs_count += count_dict.get(remainder)\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pairs_count']",10000,0.0762464000035834,0.07964804300016112,0.09530889999950887,N/A
p4_sum_array_pairs,prompt_3,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if count_dict.get(remainder) is not None:\n            pairs_count += count_dict.get(remainder)\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pairs_count']",100000,1.16541320000033,1.1885515690001194,1.2643568000021332,N/A
p4_sum_array_pairs,prompt_3,28,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = defaultdict(int)\n    pairs_count = 0\n    for num in arg1:\n        if cnt[arg2 - num]:\n            pairs_count += cnt[arg2 - num]\n        cnt[num] += 1\n    return pairs_count']",1000,0.01387800000156858,0.014623242000016034,0.01849930000025779,N/A
p4_sum_array_pairs,prompt_3,28,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = defaultdict(int)\n    pairs_count = 0\n    for num in arg1:\n        if cnt[arg2 - num]:\n            pairs_count += cnt[arg2 - num]\n        cnt[num] += 1\n    return pairs_count']",10000,0.1358152999964659,0.1410620520001248,0.14958699999988312,N/A
p4_sum_array_pairs,prompt_3,28,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = defaultdict(int)\n    pairs_count = 0\n    for num in arg1:\n        if cnt[arg2 - num]:\n            pairs_count += cnt[arg2 - num]\n        cnt[num] += 1\n    return pairs_count']",100000,2.2138586999972176,2.251469606999963,2.2992670000021462,N/A
p4_sum_array_pairs,prompt_3,29,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if num_dict.get(remaining):\n            count += num_dict[remaining]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",1000,0.0071992000011960045,0.00774772100008704,0.01239029999851482,N/A
p4_sum_array_pairs,prompt_3,29,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if num_dict.get(remaining):\n            count += num_dict[remaining]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",10000,0.07730939999964903,0.07927551100019628,0.0853335000028892,N/A
p4_sum_array_pairs,prompt_3,29,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if num_dict.get(remaining):\n            count += num_dict[remaining]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",100000,1.1642729000013787,1.1842130110002835,1.2125555999991775,N/A
p4_sum_array_pairs,prompt_3,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += 1\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.006615099999180529,0.006950377999964985,0.0079939999995986,N/A
p4_sum_array_pairs,prompt_3,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += 1\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.0710174999985611,0.07305986799987295,0.07846900000004098,N/A
p4_sum_array_pairs,prompt_3,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += 1\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.1094704000024649,1.1309510449998197,1.158661100002064,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count']",1000,0.008940600000642007,0.00928972599973349,0.009832200001255842,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count']",10000,0.09379039999839733,0.0955977430000712,0.10169600000153878,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count']",100000,1.347633900000801,1.3659017209999365,1.392507000000478,N/A
p4_sum_array_pairs,prompt_3,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    pairs = 0\n    for num in arg1:\n        comp = arg2 - num\n        if map.get(comp):\n            pairs += 1\n            del map[comp]\n        else:\n            map[num] = 1\n    return pairs']",1000,0.00553810000201338,0.005901177000159805,0.00766509999812115,N/A
p4_sum_array_pairs,prompt_3,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    pairs = 0\n    for num in arg1:\n        comp = arg2 - num\n        if map.get(comp):\n            pairs += 1\n            del map[comp]\n        else:\n            map[num] = 1\n    return pairs']",10000,0.06184679999932996,0.06404963499990117,0.07187309999790159,N/A
p4_sum_array_pairs,prompt_3,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map = {}\n    pairs = 0\n    for num in arg1:\n        comp = arg2 - num\n        if map.get(comp):\n            pairs += 1\n            del map[comp]\n        else:\n            map[num] = 1\n    return pairs']",100000,0.9803231000005326,1.0000935110001228,1.0345036999970034,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",1000,0.006807599998865044,0.007150436999872909,0.008510600000590784,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",10000,0.07382209999923361,0.07545034500002658,0.08972300000095856,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        num_count[num] = num_count.get(num, 0) + 1\n    return pair_count']",100000,1.1424587000001338,1.1603019309999945,1.2257520999992266,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen_dict = dict()\n    pair_count = 0\n    for number in arg1:\n        remainder = arg2 - number\n        if remainder in seen_dict:\n            pair_count += seen_dict[remainder]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return pair_count']",1000,0.006715700001223013,0.007105459999875166,0.007708299999649171,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen_dict = dict()\n    pair_count = 0\n    for number in arg1:\n        remainder = arg2 - number\n        if remainder in seen_dict:\n            pair_count += seen_dict[remainder]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return pair_count']",10000,0.0736311000000569,0.07511446599986811,0.08157669999854988,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen_dict = dict()\n    pair_count = 0\n    for number in arg1:\n        remainder = arg2 - number\n        if remainder in seen_dict:\n            pair_count += seen_dict[remainder]\n        seen_dict[number] = seen_dict.get(number, 0) + 1\n    return pair_count']",100000,1.136098499999207,1.1549793309997767,1.1944887000026938,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006530700000439538,0.006938633999816375,0.009327399999165209,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.071369200002664,0.07327514399996289,0.07562409999809461,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.119296699998813,1.1406437329999972,1.15927659999943,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0067706999980146065,0.007110998000280233,0.007602900001074886,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07967410000128439,0.08120080100030463,0.08758379999926547,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1362191000007442,1.1557472730000518,1.1807329000002937,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    counts_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in counts_dict:\n            count_pairs += counts_dict[arg2 - num]\n        counts_dict[num] = counts_dict.get(num, 0) + 1\n    return count_pairs']",1000,0.0065227000013692304,0.006876116000166803,0.007423200000630459,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    counts_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in counts_dict:\n            count_pairs += counts_dict[arg2 - num]\n        counts_dict[num] = counts_dict.get(num, 0) + 1\n    return count_pairs']",10000,0.07110430000102497,0.07307115900013741,0.07888280000042869,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    counts_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in counts_dict:\n            count_pairs += counts_dict[arg2 - num]\n        counts_dict[num] = counts_dict.get(num, 0) + 1\n    return count_pairs']",100000,1.1199128000007477,1.1429830630001743,1.1689297999982955,N/A
p4_sum_array_pairs,prompt_3,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.0044524000004457776,0.004749597000118229,0.0067172000017308164,N/A
p4_sum_array_pairs,prompt_3,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.055598099999770056,0.0572420490001241,0.06297200000335579,N/A
p4_sum_array_pairs,prompt_3,38,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8519694999995409,0.866094549000154,0.904606000000058,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            pairs_count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs_count']",1000,0.006809999998949934,0.007212312000083329,0.00825059999988298,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            pairs_count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs_count']",10000,0.07346019999749842,0.07496561899981316,0.07798039999761386,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            pairs_count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs_count']",100000,1.1274830000002112,1.149164870000277,1.1795916000010038,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006708100001560524,0.007060307999781798,0.009759900000062771,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07259500000145636,0.07406368800009659,0.07731169999897247,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1273877999992692,1.1433682180000688,1.1648341000000073,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            count += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",1000,0.006524199998239055,0.006836532000052103,0.007746700001007412,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            count += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",10000,0.07115970000086236,0.0724182340000334,0.07724680000319495,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    counter = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            count += counter[arg2 - num]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",100000,1.1010452000009536,1.1221268219998455,1.1468309999982012,N/A
p4_sum_array_pairs,prompt_3,42,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    pairs = []\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = True\n        else:\n            pairs.append((number, target))\n    return pairs']",1000,0.0052537000010488555,0.005574530999874696,0.007764999998471467,N/A
p4_sum_array_pairs,prompt_3,42,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    pairs = []\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = True\n        else:\n            pairs.append((number, target))\n    return pairs']",10000,0.05813080000007176,0.05960138100010227,0.06216839999979129,N/A
p4_sum_array_pairs,prompt_3,42,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    pairs = []\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = True\n        else:\n            pairs.append((number, target))\n    return pairs']",100000,0.9463938999979291,0.9685680299999513,0.9922922000005201,N/A
p4_sum_array_pairs,prompt_3,43,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    count = 0\n    present = defaultdict(int)\n    for num in arg1:\n        count += present[arg2 - num]\n        present[num] += 1\n    pass']",1000,0.013838999999279622,0.014513494000020728,0.015790600002219435,N/A
p4_sum_array_pairs,prompt_3,43,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    count = 0\n    present = defaultdict(int)\n    for num in arg1:\n        count += present[arg2 - num]\n        present[num] += 1\n    pass']",10000,0.13935839999976452,0.14212965799993982,0.15111030000116443,N/A
p4_sum_array_pairs,prompt_3,43,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> None:\n    count = 0\n    present = defaultdict(int)\n    for num in arg1:\n        count += present[arg2 - num]\n        present[num] += 1\n    pass']",100000,2.1836427000016556,2.2289732380001444,2.2669550999999046,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    dictVal = {}\n    for num in arg1:\n        if arg2 - num in dictVal:\n            count += dictVal[arg2 - num]\n        if num in dictVal:\n            dictVal[num] += 1\n        else:\n            dictVal[num] = 1\n    return count']",1000,0.006018600000970764,0.006301519000044209,0.007664799999474781,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    dictVal = {}\n    for num in arg1:\n        if arg2 - num in dictVal:\n            count += dictVal[arg2 - num]\n        if num in dictVal:\n            dictVal[num] += 1\n        else:\n            dictVal[num] = 1\n    return count']",10000,0.06560870000248542,0.06697986100007255,0.07098279999991064,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    dictVal = {}\n    for num in arg1:\n        if arg2 - num in dictVal:\n            count += dictVal[arg2 - num]\n        if num in dictVal:\n            dictVal[num] += 1\n        else:\n            dictVal[num] = 1\n    return count']",100000,1.0609889999977895,1.087129135999894,1.113849699999264,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    pairs = 0\n    counter = dict()\n    for num in arg1:\n        difference = arg2 - num\n        pairs += counter.get(difference, 0)\n        counter[num] = counter.get(num, 0) + 1\n    return pairs']",1000,0.00748080000266782,0.00785380700002861,0.008618400002887938,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    pairs = 0\n    counter = dict()\n    for num in arg1:\n        difference = arg2 - num\n        pairs += counter.get(difference, 0)\n        counter[num] = counter.get(num, 0) + 1\n    return pairs']",10000,0.07956790000025649,0.08127313999983016,0.08707229999708943,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    pairs = 0\n    counter = dict()\n    for num in arg1:\n        difference = arg2 - num\n        pairs += counter.get(difference, 0)\n        counter[num] = counter.get(num, 0) + 1\n    return pairs']",100000,1.211856900001294,1.231711643000126,1.2517750000006345,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    record = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in record:\n            count += record[complement]\n        record[num] = record.get(num, 0) + 1\n    return count']",1000,0.006741100001818268,0.0071508429998721115,0.008566199998313095,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    record = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in record:\n            count += record[complement]\n        record[num] = record.get(num, 0) + 1\n    return count']",10000,0.07316540000101668,0.07471521700037556,0.07799249999879976,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    record = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in record:\n            count += record[complement]\n        record[num] = record.get(num, 0) + 1\n    return count']",100000,1.1278094000008423,1.1535314299999664,1.2381506000019726,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    diffs = {}\n    count = 0\n    for num in arg1:\n        if num in diffs:\n            count += diffs[num]\n        diffs[arg2 - num] = diffs.get(arg2 - num, 0) + 1\n    return count']",1000,0.007694599997194018,0.008176941000165243,0.010694700002204627,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    diffs = {}\n    count = 0\n    for num in arg1:\n        if num in diffs:\n            count += diffs[num]\n        diffs[arg2 - num] = diffs.get(arg2 - num, 0) + 1\n    return count']",10000,0.08086360000015702,0.08364396800010582,0.0896532999977353,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    diffs = {}\n    count = 0\n    for num in arg1:\n        if num in diffs:\n            count += diffs[num]\n        diffs[arg2 - num] = diffs.get(arg2 - num, 0) + 1\n    return count']",100000,1.245990500003245,1.269519770000079,1.2910379000022658,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pairs_count']",1000,0.00613570000132313,0.006531226999941282,0.008681700001034187,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pairs_count']",10000,0.06782000000021071,0.06947552400008135,0.07312020000244956,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if number in hash_map:\n            hash_map[number] += 1\n        else:\n            hash_map[number] = 1\n    return pairs_count']",100000,1.078456000002916,1.095080699999744,1.1165178999981435,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    numbers_dict = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in numbers_dict:\n            pairs_count += numbers_dict[complement]\n        numbers_dict[arg1[i]] = numbers_dict.get(arg1[i], 0) + 1\n    return pairs_count']",1000,0.008262399998784531,0.008575840999801585,0.010705000000598375,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    numbers_dict = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in numbers_dict:\n            pairs_count += numbers_dict[complement]\n        numbers_dict[arg1[i]] = numbers_dict.get(arg1[i], 0) + 1\n    return pairs_count']",10000,0.08698410000215517,0.08882224099990708,0.09258689999842318,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    numbers_dict = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in numbers_dict:\n            pairs_count += numbers_dict[complement]\n        numbers_dict[arg1[i]] = numbers_dict.get(arg1[i], 0) + 1\n    return pairs_count']",100000,1.2637056999992637,1.2840096429999175,1.318064899998717,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006821200000558747,0.0072650200000134646,0.014267300000938121,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07256050000069081,0.07485653000007005,0.08125509999808855,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1358099999997648,1.1542082700000538,1.180924699998286,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    double_count = 0\n    for element in arg1:\n        remaining = arg2 - element\n        if remaining in count_dict:\n            double_count += count_dict[remaining]\n        if element in count_dict:\n            count_dict[element] += 1\n        else:\n            count_dict[element] = 1\n    return double_count']",1000,0.006171699998958502,0.006533349999990605,0.008991700000478886,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    double_count = 0\n    for element in arg1:\n        remaining = arg2 - element\n        if remaining in count_dict:\n            double_count += count_dict[remaining]\n        if element in count_dict:\n            count_dict[element] += 1\n        else:\n            count_dict[element] = 1\n    return double_count']",10000,0.06816530000287457,0.06981170700000802,0.0755157000021427,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    double_count = 0\n    for element in arg1:\n        remaining = arg2 - element\n        if remaining in count_dict:\n            double_count += count_dict[remaining]\n        if element in count_dict:\n            count_dict[element] += 1\n        else:\n            count_dict[element] = 1\n    return double_count']",100000,1.0721497000013187,1.0951769410001726,1.147628300001088,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hashmap:\n            count += hashmap[difference]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.00679390000004787,0.007176401999931841,0.010158599998248974,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hashmap:\n            count += hashmap[difference]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.07261239999934332,0.07486939200007328,0.0790631999989273,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hashmap:\n            count += hashmap[difference]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.1155959999996412,1.1423872909999044,1.1703039000021818,N/A
p4_sum_array_pairs,prompt_3,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.006125899999460671,0.006470456999995804,0.007679000002099201,N/A
p4_sum_array_pairs,prompt_3,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06829989999823738,0.06971155700011877,0.07537039999806439,N/A
p4_sum_array_pairs,prompt_3,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.0674523000016052,1.0951654449998751,1.1194151999989117,N/A
p4_sum_array_pairs,prompt_3,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",1000,0.006736700001056306,0.007221875000141154,0.010384600001998479,N/A
p4_sum_array_pairs,prompt_3,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",10000,0.07313600000270526,0.07487303699967014,0.07945159999871976,N/A
p4_sum_array_pairs,prompt_3,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",100000,1.1205566999997245,1.1426355350000086,1.167264100000466,N/A
p4_sum_array_pairs,prompt_3,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006751699998858385,0.007139440999817452,0.00870539999959874,N/A
p4_sum_array_pairs,prompt_3,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07298140000057174,0.07489070199997513,0.07827799999722629,N/A
p4_sum_array_pairs,prompt_3,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.127757099999144,1.147731375999938,1.1798199999975623,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        balance = arg2 - num\n        if balance in seen:\n            counter += seen[balance]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",1000,0.006163500002003275,0.0065047519998552164,0.007606299997860333,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        balance = arg2 - num\n        if balance in seen:\n            counter += seen[balance]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",10000,0.06712359999801265,0.0696465359998183,0.08465920000162441,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    counter = 0\n    seen = {}\n    for num in arg1:\n        balance = arg2 - num\n        if balance in seen:\n            counter += seen[balance]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",100000,1.072419500000251,1.100853640000023,1.1485572999990836,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_count']",1000,0.006219499999133404,0.006624563000186754,0.009807200000068406,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_count']",10000,0.06724140000005718,0.07013599700017949,0.07963270000254852,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_count']",100000,1.0731510000005073,1.1008378500000617,1.1232261000004655,N/A
p4_sum_array_pairs,prompt_3,58,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    pairs = []\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.append((num, target))\n        seen.add(num)\n    return pairs']",1000,0.004527200002485188,0.004804106000046886,0.008126099997753045,N/A
p4_sum_array_pairs,prompt_3,58,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    pairs = []\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.append((num, target))\n        seen.add(num)\n    return pairs']",10000,0.05483559999993304,0.05766250300010142,0.06346819999816944,N/A
p4_sum_array_pairs,prompt_3,58,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    seen = set()\n    pairs = []\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.append((num, target))\n        seen.add(num)\n    return pairs']",100000,0.8673522999997658,0.8891501609998522,0.9215798000004725,N/A
p4_sum_array_pairs,prompt_3,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairsCounter = 0\n    seenNumbers = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seenNumbers:\n            pairsCounter += seenNumbers[difference]\n        seenNumbers[num] = seenNumbers.get(num, 0) + 1\n    return pairsCounter']",1000,0.006721599998854799,0.00731874599976436,0.01123139999981504,N/A
p4_sum_array_pairs,prompt_3,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairsCounter = 0\n    seenNumbers = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seenNumbers:\n            pairsCounter += seenNumbers[difference]\n        seenNumbers[num] = seenNumbers.get(num, 0) + 1\n    return pairsCounter']",10000,0.07315430000016931,0.07567312200011657,0.08349359999920125,N/A
p4_sum_array_pairs,prompt_3,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairsCounter = 0\n    seenNumbers = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seenNumbers:\n            pairsCounter += seenNumbers[difference]\n        seenNumbers[num] = seenNumbers.get(num, 0) + 1\n    return pairsCounter']",100000,1.1285410999989836,1.160109674000305,1.2093319000050542,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if counter.get(complement, 0):\n            pair_count += 1\n            counter[complement] -= 1\n        else:\n            counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.0071805999978096224,0.007654528999846661,0.010297900000296067,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if counter.get(complement, 0):\n            pair_count += 1\n            counter[complement] -= 1\n        else:\n            counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07605580000381451,0.07976384699984919,0.09301520000008168,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if counter.get(complement, 0):\n            pair_count += 1\n            counter[complement] -= 1\n        else:\n            counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.1638296000019182,1.1889411089997157,1.2248852999982773,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            count += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return count']",1000,0.006481100004748441,0.00678434900015418,0.007517700003518257,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            count += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return count']",10000,0.07082549999904586,0.07291380699949514,0.07855460000428138,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashMap:\n            count += hashMap[arg2 - num]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return count']",100000,1.1135851999933948,1.1459473910002271,1.1783517000003485,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if dict_count[arg2 - num] > 0:\n            count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return count']",1000,0.01392659999692114,0.014619550999777858,0.01918879999720957,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if dict_count[arg2 - num] > 0:\n            count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return count']",10000,0.13877749999664957,0.14414655600019613,0.15336889999889536,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    dict_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        if dict_count[arg2 - num] > 0:\n            count += 1\n            dict_count[arg2 - num] -= 1\n        else:\n            dict_count[num] += 1\n    return count']",100000,2.2221608000036213,2.260940617000524,2.36393319999479,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            result.append((diff, num))\n        else:\n            hash_map[num] = 1\n    return result']",1000,0.005152899997483473,0.005395433000012417,0.006166599996504374,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            result.append((diff, num))\n        else:\n            hash_map[num] = 1\n    return result']",10000,0.05730000000039581,0.05993436499928066,0.06792300000233809,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            result.append((diff, num))\n        else:\n            hash_map[num] = 1\n    return result']",100000,0.9504142000005231,0.9748624949999793,1.0055640999999014,N/A
p4_sum_array_pairs,prompt_3,64,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    countPairs = 0\n    hashTable = dict()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hashTable:\n            countPairs += hashTable[compliment]\n        if i in hashTable:\n            hashTable[i] += 1\n        else:\n            hashTable[i] = 1\n    return countPairs']",1000,0.006148200001916848,0.006527070000156527,0.011419399997976143,N/A
p4_sum_array_pairs,prompt_3,64,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    countPairs = 0\n    hashTable = dict()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hashTable:\n            countPairs += hashTable[compliment]\n        if i in hashTable:\n            hashTable[i] += 1\n        else:\n            hashTable[i] = 1\n    return countPairs']",10000,0.0671954999997979,0.07010523400058447,0.07789350000530249,N/A
p4_sum_array_pairs,prompt_3,64,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    countPairs = 0\n    hashTable = dict()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hashTable:\n            countPairs += hashTable[compliment]\n        if i in hashTable:\n            hashTable[i] += 1\n        else:\n            hashTable[i] = 1\n    return countPairs']",100000,1.073318399998243,1.0985575730001438,1.134363699995447,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    seen_nums = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pair_count += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pair_count']",1000,0.006779700001061428,0.007250493999163154,0.008730300003662705,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    seen_nums = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pair_count += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pair_count']",10000,0.07287890000588959,0.07560172899982717,0.08423190000030445,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    seen_nums = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pair_count += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pair_count']",100000,1.1312667000020156,1.1607445909998932,1.1914921999996295,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    count = 0\n    difference_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in difference_map:\n            count += difference_map[difference]\n        if num in difference_map:\n            difference_map[num] += 1\n        else:\n            difference_map[num] = 1\n    return count']",1000,0.006163799997011665,0.006578287999436725,0.009232900003553368,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    count = 0\n    difference_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in difference_map:\n            count += difference_map[difference]\n        if num in difference_map:\n            difference_map[num] += 1\n        else:\n            difference_map[num] = 1\n    return count']",10000,0.06778070000291336,0.07025359400016896,0.07986290000553709,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    count = 0\n    difference_map = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in difference_map:\n            count += difference_map[difference]\n        if num in difference_map:\n            difference_map[num] += 1\n        else:\n            difference_map[num] = 1\n    return count']",100000,1.083443100003933,1.1028482000007351,1.134535600001982,N/A
p4_sum_array_pairs,prompt_3,67,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter()\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += counter[complement]\n        counter[num] += 1\n    return count_pairs']",1000,0.01839779999863822,0.019475583999810624,0.02519659999961732,N/A
p4_sum_array_pairs,prompt_3,67,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter()\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += counter[complement]\n        counter[num] += 1\n    return count_pairs']",10000,0.18543140000110725,0.19280972199951066,0.2048542999982601,N/A
p4_sum_array_pairs,prompt_3,67,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter()\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += counter[complement]\n        counter[num] += 1\n    return count_pairs']",100000,2.2925442999985535,2.32301937299977,2.383183799996914,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.006127900000137743,0.006545231999989482,0.00864660000661388,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.06709430000046268,0.06959660400018038,0.08075349999853643,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.069298999995226,1.1026368739995815,1.1406357000014395,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        pair_count += dict_count.get(complement, 0)\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return pair_count']",1000,0.007467700001143385,0.007903193999809446,0.009824399996432476,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        pair_count += dict_count.get(complement, 0)\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return pair_count']",10000,0.07946919999812962,0.08267508499986434,0.08954439999797614,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        pair_count += dict_count.get(complement, 0)\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return pair_count']",100000,1.2203426999985822,1.2420430530001614,1.2737095999982557,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    mark_hash = {}\n    count = 0\n    for i in range(len(arg1)):\n        remainder = arg2 - arg1[i]\n        if remainder in mark_hash:\n            count += mark_hash[remainder]\n        mark_hash[arg1[i]] = mark_hash.get(arg1[i], 0) + 1\n    return count']",1000,0.00814620000164723,0.008761938999668928,0.014771699999982957,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    mark_hash = {}\n    count = 0\n    for i in range(len(arg1)):\n        remainder = arg2 - arg1[i]\n        if remainder in mark_hash:\n            count += mark_hash[remainder]\n        mark_hash[arg1[i]] = mark_hash.get(arg1[i], 0) + 1\n    return count']",10000,0.08600049999949988,0.08962275599980785,0.10195760000351584,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    mark_hash = {}\n    count = 0\n    for i in range(len(arg1)):\n        remainder = arg2 - arg1[i]\n        if remainder in mark_hash:\n            count += mark_hash[remainder]\n        mark_hash[arg1[i]] = mark_hash.get(arg1[i], 0) + 1\n    return count']",100000,1.2626845999984653,1.2988426780002191,1.328783700002532,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    _dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        pairs_count += _dict.get(arg2 - i, 0)\n        _dict[i] = _dict.get(i, 0) + 1\n    return pairs_count']",1000,0.007490500000130851,0.007962222000060137,0.014571799998520873,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    _dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        pairs_count += _dict.get(arg2 - i, 0)\n        _dict[i] = _dict.get(i, 0) + 1\n    return pairs_count']",10000,0.08020589999796357,0.08290758800001641,0.09379850000550505,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    _dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        pairs_count += _dict.get(arg2 - i, 0)\n        _dict[i] = _dict.get(i, 0) + 1\n    return pairs_count']",100000,1.2130717000036384,1.2481207469999935,1.3492669999977807,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map_vals = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map_vals:\n            count += map_vals[diff]\n        if num not in map_vals:\n            map_vals[num] = 0\n        map_vals[num] += 1\n    return count']",1000,0.00894710000284249,0.009738437999913004,0.0168444000009913,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map_vals = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map_vals:\n            count += map_vals[diff]\n        if num not in map_vals:\n            map_vals[num] = 0\n        map_vals[num] += 1\n    return count']",10000,0.09330279999994673,0.09698155199985195,0.10771440000098664,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map_vals = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map_vals:\n            count += map_vals[diff]\n        if num not in map_vals:\n            map_vals[num] = 0\n        map_vals[num] += 1\n    return count']",100000,1.3572719000003417,1.3781871710000997,1.4694550999993226,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    count = 0\n    observed = {}\n    for num in arg1:\n        if arg2 - num in observed:\n            count += observed[arg2 - num]\n        if num not in observed:\n            observed[num] = 0\n        observed[num] += 1\n    return count']",1000,0.008708200002729427,0.009216514000145252,0.012540400006400887,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    count = 0\n    observed = {}\n    for num in arg1:\n        if arg2 - num in observed:\n            count += observed[arg2 - num]\n        if num not in observed:\n            observed[num] = 0\n        observed[num] += 1\n    return count']",10000,0.09115919999749167,0.09500933299954341,0.10380549999536015,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    count = 0\n    observed = {}\n    for num in arg1:\n        if arg2 - num in observed:\n            count += observed[arg2 - num]\n        if num not in observed:\n            observed[num] = 0\n        observed[num] += 1\n    return count']",100000,1.3406107000046177,1.3668822500000533,1.3933013999994728,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += 1\n        else:\n            seen.add(num)\n    return pairs_count']",1000,0.004463500001293141,0.004709398999912082,0.005364500000723638,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += 1\n        else:\n            seen.add(num)\n    return pairs_count']",10000,0.05466960000194376,0.05707116700003098,0.06560919999901671,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen = set()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += 1\n        else:\n            seen.add(num)\n    return pairs_count']",100000,0.8333359000025666,0.8549811169999885,0.8784329000045545,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    pair_counts = {}\n    pair_sum_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_counts:\n            pair_sum_count += pair_counts[complement]\n        pair_counts[num] = pair_counts.get(num, 0) + 1\n    return pair_sum_count']",1000,0.006759000003512483,0.007161713000459713,0.00960760000452865,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    pair_counts = {}\n    pair_sum_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_counts:\n            pair_sum_count += pair_counts[complement]\n        pair_counts[num] = pair_counts.get(num, 0) + 1\n    return pair_sum_count']",10000,0.07235529999888968,0.0754235149994929,0.08319789999950444,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    pair_counts = {}\n    pair_sum_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in pair_counts:\n            pair_sum_count += pair_counts[complement]\n        pair_counts[num] = pair_counts.get(num, 0) + 1\n    return pair_sum_count']",100000,1.1356832000019494,1.162590615000372,1.203831500002707,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1: list, arg2: int) -> int:\n    counts_dict = {}\n    pair_counts = 0\n    for number in arg1:\n        if arg2 - number in counts_dict:\n            pair_counts += counts_dict[arg2 - number]\n        counts_dict[number] = counts_dict.get(number, 0) + 1\n    return pair_counts']",1000,0.006588799995370209,0.006997908999765059,0.009928899999067653,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1: list, arg2: int) -> int:\n    counts_dict = {}\n    pair_counts = 0\n    for number in arg1:\n        if arg2 - number in counts_dict:\n            pair_counts += counts_dict[arg2 - number]\n        counts_dict[number] = counts_dict.get(number, 0) + 1\n    return pair_counts']",10000,0.07079470000462607,0.07323957699991297,0.0792901000022539,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1: list, arg2: int) -> int:\n    counts_dict = {}\n    pair_counts = 0\n    for number in arg1:\n        if arg2 - number in counts_dict:\n            pair_counts += counts_dict[arg2 - number]\n        counts_dict[number] = counts_dict.get(number, 0) + 1\n    return pair_counts']",100000,1.1172660000011092,1.1469835890001558,1.1862003999995068,N/A
p4_sum_array_pairs,prompt_3,77,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    lookup = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += lookup[complement]\n        lookup[num] += 1\n    return pair_count']",1000,0.014402399996470194,0.015377574000158347,0.031113700002606492,N/A
p4_sum_array_pairs,prompt_3,77,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    lookup = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += lookup[complement]\n        lookup[num] += 1\n    return pair_count']",10000,0.14123530000506435,0.14780149899917888,0.15407259999483358,N/A
p4_sum_array_pairs,prompt_3,77,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    lookup = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += lookup[complement]\n        lookup[num] += 1\n    return pair_count']",100000,2.24680939999962,2.2780531160003012,2.3193023999992874,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    output = 0\n    count_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_dict:\n            output += count_dict[complement]\n        count_dict[elem] = count_dict.get(elem, 0) + 1\n    return output']",1000,0.006721999998262618,0.007168609000000287,0.008802899996226188,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    output = 0\n    count_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_dict:\n            output += count_dict[complement]\n        count_dict[elem] = count_dict.get(elem, 0) + 1\n    return output']",10000,0.07241410000278847,0.07515424799996254,0.08633629999530967,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    output = 0\n    count_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_dict:\n            output += count_dict[complement]\n        count_dict[elem] = count_dict.get(elem, 0) + 1\n    return output']",100000,1.1253264999977546,1.156883737999742,1.1957417000012356,N/A
p4_sum_array_pairs,prompt_3,79,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_ = {}\n    pair_count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in map_:\n            pair_count += map_[rem]\n        if i in map_:\n            map_[i] += 1\n        else:\n            map_[i] = 1\n    return pair_count']",1000,0.006170900000142865,0.006554227000378887,0.007994599996891338,N/A
p4_sum_array_pairs,prompt_3,79,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_ = {}\n    pair_count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in map_:\n            pair_count += map_[rem]\n        if i in map_:\n            map_[i] += 1\n        else:\n            map_[i] = 1\n    return pair_count']",10000,0.06687930000043707,0.06992610100016464,0.07722220000141533,N/A
p4_sum_array_pairs,prompt_3,79,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_ = {}\n    pair_count = 0\n    for i in arg1:\n        rem = arg2 - i\n        if rem in map_:\n            pair_count += map_[rem]\n        if i in map_:\n            map_[i] += 1\n        else:\n            map_[i] = 1\n    return pair_count']",100000,1.0713284000012209,1.1065076499996211,1.142957899995963,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = []\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            output.append((number, target))\n    return output']",1000,0.005266499996650964,0.00581646299957356,0.012075200000253972,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = []\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            output.append((number, target))\n    return output']",10000,0.05773640000552405,0.060046857000124874,0.0685486000002129,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    output = []\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen[number] = 1\n        else:\n            output.append((number, target))\n    return output']",100000,0.9541604999976698,0.979052904999553,1.0055018999992171,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    ctr = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            ctr += lookup[arg2 - num]\n        if num not in lookup:\n            lookup[num] = 0\n        lookup[num] += 1\n    return ctr']",1000,0.00874669999757316,0.00929221500045969,0.013748700002906844,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    ctr = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            ctr += lookup[arg2 - num]\n        if num not in lookup:\n            lookup[num] = 0\n        lookup[num] += 1\n    return ctr']",10000,0.09175130000221543,0.09508909699943616,0.11384620000171708,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    ctr = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            ctr += lookup[arg2 - num]\n        if num not in lookup:\n            lookup[num] = 0\n        lookup[num] += 1\n    return ctr']",100000,1.3338166999965324,1.3619526699997369,1.4031571000014083,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    visited_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in visited_dict:\n            pairs.append((arg2 - num, num))\n        else:\n            visited_dict[num] = True\n    return pairs']",1000,0.005038399998738896,0.005397902000040631,0.00979650000226684,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    visited_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in visited_dict:\n            pairs.append((arg2 - num, num))\n        else:\n            visited_dict[num] = True\n    return pairs']",10000,0.055376199998136144,0.05793545900007303,0.06754589999763994,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    visited_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in visited_dict:\n            pairs.append((arg2 - num, num))\n        else:\n            visited_dict[num] = True\n    return pairs']",100000,0.9396766999998363,0.9605129499999748,1.0102049999986775,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    pairsCount = {}\n    totalPairs = 0\n    for x in arg1:\n        if x in pairsCount:\n            totalPairs += pairsCount[x]\n        if arg2 - x in pairsCount:\n            pairsCount[arg2 - x] += 1\n        else:\n            pairsCount[arg2 - x] = 1\n    return totalPairs']",1000,0.006787699996493757,0.007189222000306472,0.008527300000423566,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    pairsCount = {}\n    totalPairs = 0\n    for x in arg1:\n        if x in pairsCount:\n            totalPairs += pairsCount[x]\n        if arg2 - x in pairsCount:\n            pairsCount[arg2 - x] += 1\n        else:\n            pairsCount[arg2 - x] = 1\n    return totalPairs']",10000,0.07410109999909764,0.07558212300020387,0.08200389999547042,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    pairsCount = {}\n    totalPairs = 0\n    for x in arg1:\n        if x in pairsCount:\n            totalPairs += pairsCount[x]\n        if arg2 - x in pairsCount:\n            pairsCount[arg2 - x] += 1\n        else:\n            pairsCount[arg2 - x] = 1\n    return totalPairs']",100000,1.1776604000042425,1.2016562819999672,1.22829730000376,N/A
p4_sum_array_pairs,prompt_3,84,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += count[complement]\n        count[number] += 1\n    return pairs_count']",1000,0.01829840000573313,0.018799120000112454,0.021111599999130704,N/A
p4_sum_array_pairs,prompt_3,84,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += count[complement]\n        count[number] += 1\n    return pairs_count']",10000,0.18250529999932041,0.1855218459992466,0.19546709999849554,N/A
p4_sum_array_pairs,prompt_3,84,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = Counter()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += count[complement]\n        count[number] += 1\n    return pairs_count']",100000,2.234007400002156,2.279051475999804,2.333353800000623,N/A
p4_sum_array_pairs,prompt_3,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_count = 0\n    hash_map = dict()\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[element] = hash_map.get(element, 0) + 1\n    return pairs_count']",1000,0.006710600006044842,0.007174744999865652,0.012624100003449712,N/A
p4_sum_array_pairs,prompt_3,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_count = 0\n    hash_map = dict()\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[element] = hash_map.get(element, 0) + 1\n    return pairs_count']",10000,0.07228620000387309,0.07404601800037199,0.08313050000288058,N/A
p4_sum_array_pairs,prompt_3,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs_count = 0\n    hash_map = dict()\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[element] = hash_map.get(element, 0) + 1\n    return pairs_count']",100000,1.1244777999963844,1.1408388320000085,1.169177200004924,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen_numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seen_numbers:\n            pairs_count += seen_numbers[difference]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pairs_count']",1000,0.006703099999867845,0.006973040000229957,0.008178399999451358,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen_numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seen_numbers:\n            pairs_count += seen_numbers[difference]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pairs_count']",10000,0.07221690000005765,0.07309736199975304,0.07829090000450378,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen_numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in seen_numbers:\n            pairs_count += seen_numbers[difference]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pairs_count']",100000,1.1108441000033054,1.1386895829997956,1.1663165999998455,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        pair_count += hash_map.get(target, 0)\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",1000,0.007434500003000721,0.007858970000379486,0.009474900005443487,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        pair_count += hash_map.get(target, 0)\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",10000,0.07941959999880055,0.080995409999814,0.08538850000331877,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        pair_count += hash_map.get(target, 0)\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",100000,1.1980957000050694,1.2264656660004403,1.3271418000003905,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004286399998818524,0.0045689080000011015,0.006076700003177393,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.052111800003331155,0.05388010299997404,0.060434799997892696,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8263264999986859,0.843599818999719,0.8644533999977284,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        if arg2 - num in element_map:\n            count += element_map[arg2 - num]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",1000,0.006020900000294205,0.00629391399990709,0.00658829999883892,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        if arg2 - num in element_map:\n            count += element_map[arg2 - num]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",10000,0.06679620000068098,0.06819754900010594,0.07115419999900041,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        if arg2 - num in element_map:\n            count += element_map[arg2 - num]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",100000,1.0769253999969806,1.0953844449997996,1.1265320000020438,N/A
p4_sum_array_pairs,prompt_3,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = {}\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in count_map:\n            count += count_map[complement]\n        count_map[i] = count_map.get(i, 0) + 1\n    return count']",1000,0.006910600000992417,0.007294653999706497,0.009464999995543621,N/A
p4_sum_array_pairs,prompt_3,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = {}\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in count_map:\n            count += count_map[complement]\n        count_map[i] = count_map.get(i, 0) + 1\n    return count']",10000,0.0738307000065106,0.0756149260001257,0.0839202999995905,N/A
p4_sum_array_pairs,prompt_3,90,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = {}\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in count_map:\n            count += count_map[complement]\n        count_map[i] = count_map.get(i, 0) + 1\n    return count']",100000,1.1434692000038922,1.16059247400015,1.1826360000050045,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    elements = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            pair_count += elements[diff]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",1000,0.006719700002577156,0.007144300000072689,0.008918400002585258,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    elements = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            pair_count += elements[diff]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",10000,0.07304589999694144,0.07502138299962098,0.08062739999877522,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    elements = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            pair_count += elements[diff]\n        elements[num] = elements.get(num, 0) + 1\n    return pair_count']",100000,1.1405474999992293,1.158389747000183,1.1806569000036689,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",1000,0.006760500000382308,0.007139413999902899,0.0076938999991398305,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",10000,0.07281450000300538,0.07478366300041671,0.07773750000342261,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",100000,1.1372690999996848,1.1578258579992688,1.1975798999992548,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    value_count_map = dict()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in value_count_map:\n            pairs_count += value_count_map[complement]\n        if number in value_count_map:\n            value_count_map[number] += 1\n        else:\n            value_count_map[number] = 1\n    return pairs_count']",1000,0.006128199995146133,0.0066099059999396555,0.012268300000869203,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    value_count_map = dict()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in value_count_map:\n            pairs_count += value_count_map[complement]\n        if number in value_count_map:\n            value_count_map[number] += 1\n        else:\n            value_count_map[number] = 1\n    return pairs_count']",10000,0.06794989999616519,0.06928417299997819,0.0721306999985245,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    value_count_map = dict()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in value_count_map:\n            pairs_count += value_count_map[complement]\n        if number in value_count_map:\n            value_count_map[number] += 1\n        else:\n            value_count_map[number] = 1\n    return pairs_count']",100000,1.0780328000037116,1.1012385310004902,1.127442400000291,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    length = len(arg1)\n    countPairs = 0\n    mapValueToCount = {}\n    for i in range(0, length):\n        remainder = arg2 - arg1[i]\n        if remainder in mapValueToCount:\n            countPairs += mapValueToCount[remainder]\n        if arg1[i] in mapValueToCount:\n            mapValueToCount[arg1[i]] += 1\n        else:\n            mapValueToCount[arg1[i]] = 1\n    return countPairs']",1000,0.0073482999941916205,0.007652525000376045,0.008730399997148197,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    length = len(arg1)\n    countPairs = 0\n    mapValueToCount = {}\n    for i in range(0, length):\n        remainder = arg2 - arg1[i]\n        if remainder in mapValueToCount:\n            countPairs += mapValueToCount[remainder]\n        if arg1[i] in mapValueToCount:\n            mapValueToCount[arg1[i]] += 1\n        else:\n            mapValueToCount[arg1[i]] = 1\n    return countPairs']",10000,0.0782690999985789,0.08031225899983838,0.08527889999822946,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    length = len(arg1)\n    countPairs = 0\n    mapValueToCount = {}\n    for i in range(0, length):\n        remainder = arg2 - arg1[i]\n        if remainder in mapValueToCount:\n            countPairs += mapValueToCount[remainder]\n        if arg1[i] in mapValueToCount:\n            mapValueToCount[arg1[i]] += 1\n        else:\n            mapValueToCount[arg1[i]] = 1\n    return countPairs']",100000,1.1928696999966633,1.2148472340000445,1.2299474999963422,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for number in arg1:\n        if arg2 - number in hash_map:\n            result.append((number, arg2 - number))\n        else:\n            hash_map[number] = None\n    return result']",1000,0.005011499997635838,0.005297746000142069,0.0067019000052823685,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for number in arg1:\n        if arg2 - number in hash_map:\n            result.append((number, arg2 - number))\n        else:\n            hash_map[number] = None\n    return result']",10000,0.05559319999883883,0.05763559499988333,0.06397730000026058,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for number in arg1:\n        if arg2 - number in hash_map:\n            result.append((number, arg2 - number))\n        else:\n            hash_map[number] = None\n    return result']",100000,0.9357903999989503,0.9544179460003943,0.9774684000003617,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0074314999947091565,0.008013294000120368,0.010022300004493445,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.0805389999950421,0.0824320730000909,0.08702869999979157,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2189784000001964,1.2369193800003995,1.2583907000007457,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",1000,0.006776400005037431,0.0070912510005291555,0.007702499999140855,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",10000,0.07321139999839943,0.07471467699971981,0.07805089999601478,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",100000,1.1337815999941085,1.1550274220003485,1.2077232000010554,N/A
p4_sum_array_pairs,prompt_3,98,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    count_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in count_dict:\n            pairs.append((num, arg2 - num))\n        count_dict[num] = arg2 - num\n    return pairs']",1000,0.0059446999948704615,0.006212600999933784,0.009782300003280398,N/A
p4_sum_array_pairs,prompt_3,98,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    count_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in count_dict:\n            pairs.append((num, arg2 - num))\n        count_dict[num] = arg2 - num\n    return pairs']",10000,0.06414219999714987,0.0656986029996915,0.068997299997136,N/A
p4_sum_array_pairs,prompt_3,98,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    count_dict = dict()\n    pairs = []\n    for num in arg1:\n        if arg2 - num in count_dict:\n            pairs.append((num, arg2 - num))\n        count_dict[num] = arg2 - num\n    return pairs']",100000,1.072585900001286,1.1271530780000467,1.180452200002037,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    number_counts = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_counts and number_counts[complement] > 0:\n            pairs.append((complement, num))\n            number_counts[complement] -= 1\n        else:\n            number_counts[num] = number_counts.get(num, 0) + 1\n    return pairs']",1000,0.007013800001004711,0.007213029000777169,0.008754400005273055,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    number_counts = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_counts and number_counts[complement] > 0:\n            pairs.append((complement, num))\n            number_counts[complement] -= 1\n        else:\n            number_counts[num] = number_counts.get(num, 0) + 1\n    return pairs']",10000,0.07398819999798434,0.07544177899959323,0.08162749999610242,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    number_counts = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in number_counts and number_counts[complement] > 0:\n            pairs.append((complement, num))\n            number_counts[complement] -= 1\n        else:\n            number_counts[num] = number_counts.get(num, 0) + 1\n    return pairs']",100000,1.161214599997038,1.1959119870002177,1.2718652000039583,N/A
p4_sum_array_pairs,prompt_3,100,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[num] = element_map.get(num, 0) + 1\n    return pair_count']",1000,0.006713899994792882,0.007082422000021325,0.010463600003276952,N/A
p4_sum_array_pairs,prompt_3,100,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[num] = element_map.get(num, 0) + 1\n    return pair_count']",10000,0.07280119999632007,0.07484082299997681,0.08141480000631418,N/A
p4_sum_array_pairs,prompt_3,100,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        element_map[num] = element_map.get(num, 0) + 1\n    return pair_count']",100000,1.1365098000023863,1.1590934330003801,1.1775563000046532,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairsCount = 0\n    for i in arg1:\n        if arg2 - i in countDict:\n            pairsCount += countDict[arg2 - i]\n        if i in countDict:\n            countDict[i] += 1\n        else:\n            countDict[i] = 1\n    return pairsCount']",1000,0.006025799993949477,0.006391294999848469,0.008353999997780193,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairsCount = 0\n    for i in arg1:\n        if arg2 - i in countDict:\n            pairsCount += countDict[arg2 - i]\n        if i in countDict:\n            countDict[i] += 1\n        else:\n            countDict[i] = 1\n    return pairsCount']",10000,0.06688240000221413,0.06817980100036948,0.07404500000120606,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairsCount = 0\n    for i in arg1:\n        if arg2 - i in countDict:\n            pairsCount += countDict[arg2 - i]\n        if i in countDict:\n            countDict[i] += 1\n        else:\n            countDict[i] = 1\n    return pairsCount']",100000,1.0721867000029306,1.098526017000113,1.1171270000049844,N/A
p4_sum_array_pairs,prompt_4,2,"['from collections import defaultdict\n\ndef funcImp(arg1: list, arg2: int) -> int:\n    numbers_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_count:\n            count += numbers_count[complement]\n        numbers_count[num] += 1\n    return count']",1000,0.010439400000905152,0.01102180000030785,0.015302799998607952,N/A
p4_sum_array_pairs,prompt_4,2,"['from collections import defaultdict\n\ndef funcImp(arg1: list, arg2: int) -> int:\n    numbers_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_count:\n            count += numbers_count[complement]\n        numbers_count[num] += 1\n    return count']",10000,0.10647140000219224,0.10806896200003394,0.11349499999778345,N/A
p4_sum_array_pairs,prompt_4,2,"['from collections import defaultdict\n\ndef funcImp(arg1: list, arg2: int) -> int:\n    numbers_count = defaultdict(int)\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_count:\n            count += numbers_count[complement]\n        numbers_count[num] += 1\n    return count']",100000,1.4637994000004255,1.4870113450000644,1.5073106000054395,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    dict_store = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_store:\n            pair_count += dict_store[diff]\n        dict_store[num] = dict_store.get(num, 0) + 1\n    return pair_count']",1000,0.006824399999459274,0.007164048000049661,0.007754899997962639,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    dict_store = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_store:\n            pair_count += dict_store[diff]\n        dict_store[num] = dict_store.get(num, 0) + 1\n    return pair_count']",10000,0.07351619999826653,0.07515618800018274,0.07792939999490045,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    dict_store = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in dict_store:\n            pair_count += dict_store[diff]\n        dict_store[num] = dict_store.get(num, 0) + 1\n    return pair_count']",100000,1.1300749000001815,1.1541184410001006,1.1843423999962397,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        if arg1[i] not in m:\n            m[arg1[i]] = 0\n        m[arg1[i]] += 1\n    return count']",1000,0.010695800003304612,0.011037010000072768,0.012705200002528727,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        if arg1[i] not in m:\n            m[arg1[i]] = 0\n        m[arg1[i]] += 1\n    return count']",10000,0.1091011000025901,0.1116767769998114,0.11640410000109114,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        if arg1[i] not in m:\n            m[arg1[i]] = 0\n        m[arg1[i]] += 1\n    return count']",100000,1.5109794000018155,1.533597204999678,1.5571668999982649,N/A
p4_sum_array_pairs,prompt_4,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq_in_array = dict()\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in freq_in_array:\n            count += freq_in_array[complement]\n        if arg1[i] in freq_in_array:\n            freq_in_array[arg1[i]] += 1\n        else:\n            freq_in_array[arg1[i]] = 1\n    return count']",1000,0.007198200000857469,0.007623787999691558,0.011075700000219513,N/A
p4_sum_array_pairs,prompt_4,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq_in_array = dict()\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in freq_in_array:\n            count += freq_in_array[complement]\n        if arg1[i] in freq_in_array:\n            freq_in_array[arg1[i]] += 1\n        else:\n            freq_in_array[arg1[i]] = 1\n    return count']",10000,0.07880409999779658,0.08061561699978484,0.08766850000392878,N/A
p4_sum_array_pairs,prompt_4,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq_in_array = dict()\n    count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in freq_in_array:\n            count += freq_in_array[complement]\n        if arg1[i] in freq_in_array:\n            freq_in_array[arg1[i]] += 1\n        else:\n            freq_in_array[arg1[i]] = 1\n    return count']",100000,1.1966822000031243,1.216387733000156,1.2446474000025773,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs = 0\n    for num in arg1:\n        con_num = arg2 - num\n        if con_num in lookup:\n            pairs += lookup[con_num]\n        lookup[num] = lookup.get(num, 0) + 1\n    return pairs']",1000,0.0068535999962477945,0.007211054000072182,0.008151900001394097,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs = 0\n    for num in arg1:\n        con_num = arg2 - num\n        if con_num in lookup:\n            pairs += lookup[con_num]\n        lookup[num] = lookup.get(num, 0) + 1\n    return pairs']",10000,0.07338380000146572,0.07467814400042698,0.07905169999867212,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs = 0\n    for num in arg1:\n        con_num = arg2 - num\n        if con_num in lookup:\n            pairs += lookup[con_num]\n        lookup[num] = lookup.get(num, 0) + 1\n    return pairs']",100000,1.1329534000033163,1.1573025279994908,1.1744993999964208,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pairs_count']",1000,0.006736400006047916,0.007111918999726186,0.0075728000010713,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pairs_count']",10000,0.07349229999817908,0.0748786109995126,0.07911910000257194,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pairs_count']",100000,1.1345989999972517,1.1570212980001815,1.1763549000024796,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs = []\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pairs.append((remainder, num))\n        else:\n            count_dict[num] = True\n    return (len(pairs), pairs)']",1000,0.005320299998857081,0.00557141400015098,0.008045400005357806,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs = []\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pairs.append((remainder, num))\n        else:\n            count_dict[num] = True\n    return (len(pairs), pairs)']",10000,0.058181700005661696,0.05949663099956524,0.06460669999796664,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs = []\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in count_dict:\n            pairs.append((remainder, num))\n        else:\n            count_dict[num] = True\n    return (len(pairs), pairs)']",100000,0.952070500003174,0.9707000070002687,0.9848189000040293,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    countDict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in countDict:\n            count += countDict[remainder]\n        if num not in countDict:\n            countDict[num] = 1\n        else:\n            countDict[num] += 1\n    return count']",1000,0.006217400004970841,0.006505413000413682,0.007252200004586484,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    countDict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in countDict:\n            count += countDict[remainder]\n        if num not in countDict:\n            countDict[num] = 1\n        else:\n            countDict[num] += 1\n    return count']",10000,0.06831270000111545,0.06998175799955789,0.07348309999360936,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    countDict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in countDict:\n            count += countDict[remainder]\n        if num not in countDict:\n            countDict[num] = 1\n        else:\n            countDict[num] += 1\n    return count']",100000,1.0802455000011832,1.1035817350001162,1.12910710000142,N/A
p4_sum_array_pairs,prompt_4,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            counter += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return counter']",1000,0.0060391000006347895,0.006420529000024544,0.007993699997314252,N/A
p4_sum_array_pairs,prompt_4,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            counter += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return counter']",10000,0.06668680000439053,0.06832048899945221,0.07369080000353279,N/A
p4_sum_array_pairs,prompt_4,10,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = dict()\n    counter = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            counter += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return counter']",100000,1.0802433999997447,1.1034225120001064,1.1414216999983182,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    freq = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            counter += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return counter']",1000,0.006545299998833798,0.007030526999806171,0.010058800005936064,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    freq = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            counter += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return counter']",10000,0.070374199996877,0.07330570399979479,0.08314450000034412,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    freq = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            counter += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return counter']",100000,1.1251573999979883,1.1470122329999868,1.1798009000049205,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in count_dict:\n            pair_count += count_dict[arg2 - i]\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pair_count']",1000,0.0065300999995088205,0.006880888999949093,0.00884990000486141,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in count_dict:\n            pair_count += count_dict[arg2 - i]\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pair_count']",10000,0.07066730000224197,0.07302530200031469,0.07683299999916926,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in count_dict:\n            pair_count += count_dict[arg2 - i]\n        count_dict[i] = count_dict.get(i, 0) + 1\n    return pair_count']",100000,1.1165519999995013,1.1435263199998735,1.1867082999960985,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num not in map:\n            map[num] = 1\n        else:\n            map[num] += 1\n    return count']",1000,0.006192200002260506,0.006701869000171428,0.013492400001268834,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num not in map:\n            map[num] = 1\n        else:\n            map[num] += 1\n    return count']",10000,0.067441899998812,0.06987257900007535,0.08477829999901587,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += map[complement]\n        if num not in map:\n            map[num] = 1\n        else:\n            map[num] += 1\n    return count']",100000,1.082856900000479,1.1095193030001247,1.1631398999961675,N/A
p4_sum_array_pairs,prompt_4,14,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    myMap = {}\n    count = 0\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in myMap:\n            count += myMap[arg2 - arg1[i]]\n        if arg1[i] in myMap:\n            myMap[arg1[i]] += 1\n        else:\n            myMap[arg1[i]] = 1\n    return count']",1000,0.007056000002194196,0.007513735999818891,0.009322099998826161,N/A
p4_sum_array_pairs,prompt_4,14,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    myMap = {}\n    count = 0\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in myMap:\n            count += myMap[arg2 - arg1[i]]\n        if arg1[i] in myMap:\n            myMap[arg1[i]] += 1\n        else:\n            myMap[arg1[i]] = 1\n    return count']",10000,0.0774851000023773,0.08046621699992101,0.0953427999993437,N/A
p4_sum_array_pairs,prompt_4,14,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    myMap = {}\n    count = 0\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in myMap:\n            count += myMap[arg2 - arg1[i]]\n        if arg1[i] in myMap:\n            myMap[arg1[i]] += 1\n        else:\n            myMap[arg1[i]] = 1\n    return count']",100000,1.2067251999978907,1.2263730570003828,1.2552623000010499,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers:\n            pairs_count += numbers[diff]\n        if num not in numbers:\n            numbers[num] = 1\n        else:\n            numbers[num] += 1\n    return pairs_count']",1000,0.006172099994728342,0.00645080299989786,0.010027500000433065,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers:\n            pairs_count += numbers[diff]\n        if num not in numbers:\n            numbers[num] = 1\n        else:\n            numbers[num] += 1\n    return pairs_count']",10000,0.06761640000331681,0.06997804100028589,0.07771240000147372,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    numbers = {}\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in numbers:\n            pairs_count += numbers[diff]\n        if num not in numbers:\n            numbers[num] = 1\n        else:\n            numbers[num] += 1\n    return pairs_count']",100000,1.0765572000018437,1.1060635480003111,1.1338630000027479,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    occ_map = {}\n    pair_count = 0\n    for num in arg1:\n        needed_val = arg2 - num\n        if needed_val in occ_map:\n            pair_count += occ_map[needed_val]\n        if num in occ_map:\n            occ_map[num] += 1\n        else:\n            occ_map[num] = 1\n    return pair_count']",1000,0.006271899997955188,0.00668237699988822,0.012622700000065379,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    occ_map = {}\n    pair_count = 0\n    for num in arg1:\n        needed_val = arg2 - num\n        if needed_val in occ_map:\n            pair_count += occ_map[needed_val]\n        if num in occ_map:\n            occ_map[num] += 1\n        else:\n            occ_map[num] = 1\n    return pair_count']",10000,0.06732770000235178,0.06995393599958334,0.08059099999809405,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    occ_map = {}\n    pair_count = 0\n    for num in arg1:\n        needed_val = arg2 - num\n        if needed_val in occ_map:\n            pair_count += occ_map[needed_val]\n        if num in occ_map:\n            occ_map[num] += 1\n        else:\n            occ_map[num] = 1\n    return pair_count']",100000,1.0825754999968922,1.1104115699996329,1.195081100006064,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    counter = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        if arg2 - arg1[i] in m:\n            counter += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return counter']",1000,0.007997300002898555,0.008563796000089496,0.012791100001777522,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    counter = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        if arg2 - arg1[i] in m:\n            counter += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return counter']",10000,0.08461709999392042,0.0886035519996949,0.10223930000211112,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    counter = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        if arg2 - arg1[i] in m:\n            counter += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return counter']",100000,1.2595606999966549,1.2912029769996298,1.3400124000036158,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    numbers_dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if remainder in numbers_dict:\n            pairs_count += numbers_dict[remainder]\n        numbers_dict[i] = numbers_dict.get(i, 0) + 1\n    return pairs_count']",1000,0.006750500004272908,0.007122073000209639,0.008657699996547308,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    numbers_dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if remainder in numbers_dict:\n            pairs_count += numbers_dict[remainder]\n        numbers_dict[i] = numbers_dict.get(i, 0) + 1\n    return pairs_count']",10000,0.07243480000033742,0.07547700400005851,0.08488190000207396,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    numbers_dict = dict()\n    pairs_count = 0\n    for i in arg1:\n        remainder = arg2 - i\n        if remainder in numbers_dict:\n            pairs_count += numbers_dict[remainder]\n        numbers_dict[i] = numbers_dict.get(i, 0) + 1\n    return pairs_count']",100000,1.1342742999986513,1.1606395570006862,1.19576689999667,N/A
p4_sum_array_pairs,prompt_4,19,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = defaultdict(int)\n    count = 0\n    if not arg1:\n        return 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] += 1\n    return count']",1000,0.010116599994944409,0.010827806999659515,0.016144299996085465,N/A
p4_sum_array_pairs,prompt_4,19,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = defaultdict(int)\n    count = 0\n    if not arg1:\n        return 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] += 1\n    return count']",10000,0.10419700000056764,0.10876491599949077,0.11825239999598125,N/A
p4_sum_array_pairs,prompt_4,19,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = defaultdict(int)\n    count = 0\n    if not arg1:\n        return 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] += 1\n    return count']",100000,1.4553223000038997,1.4815726790004555,1.517284199995629,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in num_dict:\n            count += num_dict[difference]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006117999997513834,0.006547699999573524,0.008776800001214724,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in num_dict:\n            count += num_dict[difference]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06671099999948638,0.0696294129997841,0.07809909999923548,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in num_dict:\n            count += num_dict[difference]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.0687156999993022,1.0981638489997567,1.1298200000019278,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    counter = 0\n    pair_map = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in pair_map:\n            counter += pair_map[diff]\n        if num in pair_map:\n            pair_map[num] += 1\n        else:\n            pair_map[num] = 1\n    return counter']",1000,0.006137000003946014,0.00653044900012901,0.008779600000707433,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    counter = 0\n    pair_map = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in pair_map:\n            counter += pair_map[diff]\n        if num in pair_map:\n            pair_map[num] += 1\n        else:\n            pair_map[num] = 1\n    return counter']",10000,0.0674631000001682,0.07042965799999365,0.07769900000130292,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    counter = 0\n    pair_map = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in pair_map:\n            counter += pair_map[diff]\n        if num in pair_map:\n            pair_map[num] += 1\n        else:\n            pair_map[num] = 1\n    return counter']",100000,1.0875192000021343,1.1044430750006722,1.122063299997535,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    mp = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in mp:\n            count += mp[arg2 - num]\n        mp[num] = mp.get(num, 0) + 1\n    return count']",1000,0.0066213000027346425,0.007252446000056807,0.011926099999982398,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    mp = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in mp:\n            count += mp[arg2 - num]\n        mp[num] = mp.get(num, 0) + 1\n    return count']",10000,0.07112629999755882,0.07408846800019092,0.08591130000422709,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    mp = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in mp:\n            count += mp[arg2 - num]\n        mp[num] = mp.get(num, 0) + 1\n    return count']",100000,1.1236785000000964,1.1482763990001694,1.191473799997766,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        pairs += complements.get(num, 0)\n        complements[complement] = complements.get(complement, 0) + 1\n    return pairs']",1000,0.007634100002178457,0.008148916000063764,0.010631600001943298,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        pairs += complements.get(num, 0)\n        complements[complement] = complements.get(complement, 0) + 1\n    return pairs']",10000,0.07949380000354722,0.08247118699997373,0.08837860000494402,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        pairs += complements.get(num, 0)\n        complements[complement] = complements.get(complement, 0) + 1\n    return pairs']",100000,1.246216400002595,1.276191157000576,1.3048093000033987,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    seen = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006004099996061996,0.006481793000057223,0.009833100004470907,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    seen = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06587430000217864,0.06862892800032569,0.07454399999551242,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    seen = dict()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.0793659999981173,1.1029400679997343,1.1241806999969413,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return counter']",1000,0.006093000003602356,0.00642860199957795,0.010677700003725477,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return counter']",10000,0.06585489999997662,0.06839575199977845,0.07321719999890774,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            counter += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return counter']",100000,1.0737280000030296,1.101385039999368,1.1446233000024222,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in frequency:\n            count += frequency[difference]\n        frequency[num] = frequency.get(num, 0) + 1\n    return count']",1000,0.006767999999283347,0.007162648000157788,0.009447399999771733,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in frequency:\n            count += frequency[difference]\n        frequency[num] = frequency.get(num, 0) + 1\n    return count']",10000,0.07223630000225967,0.07475633300011396,0.08123250000062399,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in frequency:\n            count += frequency[difference]\n        frequency[num] = frequency.get(num, 0) + 1\n    return count']",100000,1.1373056000011275,1.1594570570001088,1.1887476999982027,N/A
p4_sum_array_pairs,prompt_4,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        if num not in num_dict:\n            num_dict[num] = 0\n        num_dict[num] += 1\n    return count']",1000,0.008919100000639446,0.009590244999562856,0.014881299997796305,N/A
p4_sum_array_pairs,prompt_4,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        if num not in num_dict:\n            num_dict[num] = 0\n        num_dict[num] += 1\n    return count']",10000,0.09318899999925634,0.09657085800026835,0.10515859999577515,N/A
p4_sum_array_pairs,prompt_4,27,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in num_dict:\n            count += num_dict[remainder]\n        if num not in num_dict:\n            num_dict[num] = 0\n        num_dict[num] += 1\n    return count']",100000,1.356025300003239,2.1076435739997397,6.716573300000164,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    m = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in m:\n            count += m[complement]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",1000,0.008310099998197984,0.00870775900024455,0.013187199998355936,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    m = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in m:\n            count += m[complement]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",10000,0.08863759999803733,0.13939075099995535,0.784269800002221,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    m = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in m:\n            count += m[complement]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",100000,1.2748924999978044,5.710988639999778,10.179003899997042,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    encountered_numbers = {}\n    for num in arg1:\n        if arg2 - num in encountered_numbers:\n            count += encountered_numbers[arg2 - num]\n        encountered_numbers[num] = encountered_numbers.get(num, 0) + 1\n    return count']",1000,0.006564000002981629,0.007000857000239193,0.00966340000013588,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    encountered_numbers = {}\n    for num in arg1:\n        if arg2 - num in encountered_numbers:\n            count += encountered_numbers[arg2 - num]\n        encountered_numbers[num] = encountered_numbers.get(num, 0) + 1\n    return count']",10000,0.07168670000100974,0.07591158400042332,0.08455469999898924,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    encountered_numbers = {}\n    for num in arg1:\n        if arg2 - num in encountered_numbers:\n            count += encountered_numbers[arg2 - num]\n        encountered_numbers[num] = encountered_numbers.get(num, 0) + 1\n    return count']",100000,1.1172412999949302,2.0112131650000085,6.553802000002179,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    num_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            num_pairs += seen[complement]\n        seen[element] = seen.get(element, 0) + 1\n    return num_pairs']",1000,0.006757799994375091,0.007191984999881242,0.012481600002502091,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    num_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            num_pairs += seen[complement]\n        seen[element] = seen.get(element, 0) + 1\n    return num_pairs']",10000,0.07234539999626577,0.07563588399985748,0.08426540000073146,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    seen = {}\n    num_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            num_pairs += seen[complement]\n        seen[element] = seen.get(element, 0) + 1\n    return num_pairs']",100000,1.121274099998118,1.157543155999665,1.2023860000044806,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        if num in counts:\n            pairs += counts[num]\n        counts[arg2 - num] = counts.get(arg2 - num, 0) + 1\n    return pairs']",1000,0.007544799998868257,0.008079144999719574,0.013689799998246599,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        if num in counts:\n            pairs += counts[num]\n        counts[arg2 - num] = counts.get(arg2 - num, 0) + 1\n    return pairs']",10000,0.08084620000590803,0.08362192900043737,0.09099560000322526,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        if num in counts:\n            pairs += counts[num]\n        counts[arg2 - num] = counts.get(arg2 - num, 0) + 1\n    return pairs']",100000,1.2542545999967842,1.282171394999823,1.3135521999938646,N/A
p4_sum_array_pairs,prompt_4,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    frequency = dict()\n    for num in arg1:\n        remaining_sum = arg2 - num\n        if remaining_sum in frequency:\n            count += frequency[remaining_sum]\n        if num not in frequency:\n            frequency[num] = 1\n        else:\n            frequency[num] += 1\n    return count']",1000,0.006237699999473989,0.006630520000398974,0.008109399997920264,N/A
p4_sum_array_pairs,prompt_4,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    frequency = dict()\n    for num in arg1:\n        remaining_sum = arg2 - num\n        if remaining_sum in frequency:\n            count += frequency[remaining_sum]\n        if num not in frequency:\n            frequency[num] = 1\n        else:\n            frequency[num] += 1\n    return count']",10000,0.06757780000043567,0.07049785499977589,0.07791759999963688,N/A
p4_sum_array_pairs,prompt_4,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    frequency = dict()\n    for num in arg1:\n        remaining_sum = arg2 - num\n        if remaining_sum in frequency:\n            count += frequency[remaining_sum]\n        if num not in frequency:\n            frequency[num] = 1\n        else:\n            frequency[num] += 1\n    return count']",100000,1.0930941000042367,1.1202037259999633,1.1681538999982877,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    s = dict()\n    for i in arg1:\n        count += s.get(arg2 - i, 0)\n        if i in s:\n            s[i] += 1\n        else:\n            s[i] = 1\n    return count']",1000,0.00677939999877708,0.007072506000113208,0.008689799993589986,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    s = dict()\n    for i in arg1:\n        count += s.get(arg2 - i, 0)\n        if i in s:\n            s[i] += 1\n        else:\n            s[i] = 1\n    return count']",10000,0.0751555999959237,0.07646798499947181,0.07807809999940218,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    s = dict()\n    for i in arg1:\n        count += s.get(arg2 - i, 0)\n        if i in s:\n            s[i] += 1\n        else:\n            s[i] = 1\n    return count']",100000,1.1599103000044124,1.1877860719997988,1.2331403999996837,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    complementSet = set()\n    for num in arg1:\n        comp = arg2 - num\n        if comp in complementSet:\n            pass\n        complementSet.add(num)']",1000,0.00443000000086613,0.004674563999578822,0.006147299995063804,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    complementSet = set()\n    for num in arg1:\n        comp = arg2 - num\n        if comp in complementSet:\n            pass\n        complementSet.add(num)']",10000,0.054951800004346296,0.056501413000150935,0.06536570000025677,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    complementSet = set()\n    for num in arg1:\n        comp = arg2 - num\n        if comp in complementSet:\n            pass\n        complementSet.add(num)']",100000,0.8306488000016543,0.8422317119999206,0.8747594000014942,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    hashmap = dict()\n    count = 0\n    for element in arg1:\n        diff = arg2 - element\n        if diff in hashmap:\n            count += hashmap[diff]\n        hashmap[element] = hashmap.get(element, 0) + 1\n    return count']",1000,0.006744600003003143,0.007243935000078636,0.010255000001052395,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    hashmap = dict()\n    count = 0\n    for element in arg1:\n        diff = arg2 - element\n        if diff in hashmap:\n            count += hashmap[diff]\n        hashmap[element] = hashmap.get(element, 0) + 1\n    return count']",10000,0.07239269999990938,0.07435442200010584,0.07958879999932833,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    hashmap = dict()\n    count = 0\n    for element in arg1:\n        diff = arg2 - element\n        if diff in hashmap:\n            count += hashmap[diff]\n        hashmap[element] = hashmap.get(element, 0) + 1\n    return count']",100000,1.1220321000000695,1.1458557879998261,1.1910529999950086,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",1000,0.006687099994451273,0.007065322000271408,0.010545900004217401,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",10000,0.07204859999910695,0.07322071599992341,0.07999790000030771,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        num_map[num] = num_map.get(num, 0) + 1\n    return pair_count']",100000,1.1164302000033786,1.145031982000146,1.1709570000020904,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",1000,0.006016999999701511,0.0062925149998045524,0.007157599997299258,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",10000,0.06571299999632174,0.06719848099994125,0.07202600000164239,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = dict()\n    for num in arg1:\n        if arg2 - num in lookup:\n            count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",100000,1.0660266999984742,1.0864378690002194,1.1031264000048395,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += min(map[num], map[complement]) if num in map else map[complement]\n            map[complement] -= min(map[num], map[complement]) if num in map else map[complement]\n        map[num] = map.get(num, 0) + 1\n    return count']",1000,0.0068652999980258755,0.007283165999542689,0.010880000001634471,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += min(map[num], map[complement]) if num in map else map[complement]\n            map[complement] -= min(map[num], map[complement]) if num in map else map[complement]\n        map[num] = map.get(num, 0) + 1\n    return count']",10000,0.07304750000184868,0.07491966100016725,0.07965970000077505,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map:\n            count += min(map[num], map[complement]) if num in map else map[complement]\n            map[complement] -= min(map[num], map[complement]) if num in map else map[complement]\n        map[num] = map.get(num, 0) + 1\n    return count']",100000,1.1609070999984397,1.187609584999591,1.2265390000029583,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        count = count_dict.get(arg2 - num, 0)\n        pair_count += count\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",1000,0.007644100005563814,0.007978185000029043,0.008632299999590032,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        count = count_dict.get(arg2 - num, 0)\n        pair_count += count\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",10000,0.08130819999496453,0.0824345870000252,0.08921420000115177,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        count = count_dict.get(arg2 - num, 0)\n        pair_count += count\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",100000,1.229352900001686,1.2553804549998313,1.3031007000026875,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.00445449999824632,0.004673111999945832,0.005707700001948979,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.0546150999944075,0.05651115800043044,0.0637743000042974,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8472445000006701,0.8623852080003417,0.890205399999104,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",1000,0.004473299995879643,0.004700641999734217,0.005456099999719299,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",10000,0.05514189999666996,0.05659004700006335,0.0610240000023623,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            count += 1\n    return count']",100000,0.8262337000051048,0.8412154390000797,0.8672495999999228,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_count:\n            pair_count += element_count[diff]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006122899998445064,0.006344113000232028,0.007335100002819672,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_count:\n            pair_count += element_count[diff]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06696699999884004,0.06795827000016288,0.07273349999741185,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_count:\n            pair_count += element_count[diff]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.066550899995491,1.0918936549997307,1.1171977999983937,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    pass']",1000,0.00673580000147922,0.007062076999791316,0.007966899996972643,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    pass']",10000,0.07267739999952028,0.07437854600000719,0.08019890000286978,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    pass']",100000,1.1301795999970636,1.150471978000205,1.173870500002522,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    frequency_map = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        frequency_map[num] = frequency_map.get(num, 0) + 1\n    return pair_count']",1000,0.006717800002661534,0.007018243000347865,0.007510000003094319,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    frequency_map = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        frequency_map[num] = frequency_map.get(num, 0) + 1\n    return pair_count']",10000,0.07384959999762941,0.07503930000020773,0.08056629999919096,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    frequency_map = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        frequency_map[num] = frequency_map.get(num, 0) + 1\n    return pair_count']",100000,1.1418057000046247,1.158320725000158,1.1793134000035934,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    look_for = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in look_for:\n            counter += look_for[diff]\n        if num in look_for:\n            look_for[num] += 1\n        else:\n            look_for[num] = 1\n    return counter']",1000,0.006124499996076338,0.006483147000399186,0.007044599995424505,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    look_for = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in look_for:\n            counter += look_for[diff]\n        if num in look_for:\n            look_for[num] += 1\n        else:\n            look_for[num] = 1\n    return counter']",10000,0.06770209999376675,0.0693207860000257,0.07246849999501137,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    look_for = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in look_for:\n            counter += look_for[diff]\n        if num in look_for:\n            look_for[num] += 1\n        else:\n            look_for[num] = 1\n    return counter']",100000,1.0877389000015683,1.1059883449996415,1.1294160000034026,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_map:\n            count += count_map[complement]\n        if elem in count_map:\n            count_map[elem] += 1\n        else:\n            count_map[elem] = 1\n    return count']",1000,0.006183399993460625,0.006526811999719939,0.008935799996834248,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_map:\n            count += count_map[complement]\n        if elem in count_map:\n            count_map[elem] += 1\n        else:\n            count_map[elem] = 1\n    return count']",10000,0.0683567000014591,0.06988534899974183,0.07672140000067884,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in count_map:\n            count += count_map[complement]\n        if elem in count_map:\n            count_map[elem] += 1\n        else:\n            count_map[elem] = 1\n    return count']",100000,1.076385799999116,1.1003487330003554,1.1367496000020765,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006773400004021823,0.007127262000067276,0.009137999993981794,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07374300000083167,0.07556343399977777,0.08774779999657767,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.1385754000002635,1.158883400999839,1.1875328000023728,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs.append((num, arg2 - num))\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs']",1000,0.006668400004855357,0.006974795999994967,0.007421200003591366,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs.append((num, arg2 - num))\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs']",10000,0.07190470000205096,0.07314640899967344,0.07659850000345614,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs.append((num, arg2 - num))\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return pairs']",100000,1.1405592000010074,1.1618858850003015,1.1917524999953457,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.0063633999961894006,0.0065432530002726705,0.007658900001842994,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.0682574000020395,0.06978794699993159,0.07257559999561636,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hashmap:\n            count += hashmap[diff]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.079166499999701,1.1013065220000136,1.1275392999959877,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            pair_count += num_dict[comp]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",1000,0.0063405999972019345,0.006501242000013008,0.006984699997701682,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            pair_count += num_dict[comp]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",10000,0.06691049999790266,0.06936076600024535,0.07275420000223676,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            pair_count += num_dict[comp]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",100000,1.0646248999983072,1.0887048349998805,1.1223033999995096,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_counts = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_counts += counts[complement]\n        counts[number] = counts.get(number, 0) + 1\n    return pair_counts']",1000,0.006735099996149074,0.006955934999787132,0.00740869999572169,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_counts = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_counts += counts[complement]\n        counts[number] = counts.get(number, 0) + 1\n    return pair_counts']",10000,0.07214039999962552,0.07394179700029781,0.09280050000234041,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_counts = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_counts += counts[complement]\n        counts[number] = counts.get(number, 0) + 1\n    return pair_counts']",100000,1.1181654000029084,1.147896300999273,1.1711942999972962,N/A
p4_sum_array_pairs,prompt_4,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elem_dict = {}\n    count = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in elem_dict:\n            count += elem_dict[temp]\n        elem_dict[i] = elem_dict.get(i, 0) + 1\n    return count']",1000,0.006717600001138635,0.007063996999277151,0.008621200002380647,N/A
p4_sum_array_pairs,prompt_4,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elem_dict = {}\n    count = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in elem_dict:\n            count += elem_dict[temp]\n        elem_dict[i] = elem_dict.get(i, 0) + 1\n    return count']",10000,0.07238900000083959,0.07392138300005172,0.07642179999675136,N/A
p4_sum_array_pairs,prompt_4,52,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elem_dict = {}\n    count = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in elem_dict:\n            count += elem_dict[temp]\n        elem_dict[i] = elem_dict.get(i, 0) + 1\n    return count']",100000,1.1325954999992973,1.1456228139997255,1.165588600000774,N/A
p4_sum_array_pairs,prompt_4,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        leftover = arg2 - num\n        if leftover in seen:\n            pairs += seen[leftover]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",1000,0.006766899998183362,0.007138634000002639,0.010554200001934078,N/A
p4_sum_array_pairs,prompt_4,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        leftover = arg2 - num\n        if leftover in seen:\n            pairs += seen[leftover]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",10000,0.07280069999978878,0.07444763899984537,0.08080140000674874,N/A
p4_sum_array_pairs,prompt_4,53,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    pairs = 0\n    for num in arg1:\n        leftover = arg2 - num\n        if leftover in seen:\n            pairs += seen[leftover]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs']",100000,1.1177708000031998,1.1449275910000143,1.1744965999969281,N/A
p4_sum_array_pairs,prompt_4,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_count:\n            pair_count += map_count[complement]\n        if num in map_count:\n            map_count[num] += 1\n        else:\n            map_count[num] = 1\n    return pair_count']",1000,0.006100300000980496,0.006360761000032653,0.007040299999061972,N/A
p4_sum_array_pairs,prompt_4,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_count:\n            pair_count += map_count[complement]\n        if num in map_count:\n            map_count[num] += 1\n        else:\n            map_count[num] = 1\n    return pair_count']",10000,0.06700299999647541,0.06821218699973543,0.07124209999892628,N/A
p4_sum_array_pairs,prompt_4,54,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    map_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_count:\n            pair_count += map_count[complement]\n        if num in map_count:\n            map_count[num] += 1\n        else:\n            map_count[num] = 1\n    return pair_count']",100000,1.0691049000015482,1.0925360980002006,1.1149110000042128,N/A
p4_sum_array_pairs,prompt_4,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    existing_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in existing_numbers:\n            pair_count += existing_numbers[arg2 - num]\n        if num in existing_numbers:\n            existing_numbers[num] += 1\n        else:\n            existing_numbers[num] = 1\n    return pair_count']",1000,0.006024599999364,0.006348378999682609,0.007099900001776405,N/A
p4_sum_array_pairs,prompt_4,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    existing_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in existing_numbers:\n            pair_count += existing_numbers[arg2 - num]\n        if num in existing_numbers:\n            existing_numbers[num] += 1\n        else:\n            existing_numbers[num] = 1\n    return pair_count']",10000,0.06614989999798127,0.06776690200022131,0.07132830000045942,N/A
p4_sum_array_pairs,prompt_4,55,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    existing_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in existing_numbers:\n            pair_count += existing_numbers[arg2 - num]\n        if num in existing_numbers:\n            existing_numbers[num] += 1\n        else:\n            existing_numbers[num] = 1\n    return pair_count']",100000,1.0716397000069264,1.0893709909999598,1.1077665999982855,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        search = arg2 - arg1[i]\n        if search in hash_map:\n            count += hash_map[search]\n        hash_map[arg1[i]] = hash_map.get(arg1[i], 0) + 1\n    return count']",1000,0.00806439999723807,0.008524055999878329,0.009865399995760527,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        search = arg2 - arg1[i]\n        if search in hash_map:\n            count += hash_map[search]\n        hash_map[arg1[i]] = hash_map.get(arg1[i], 0) + 1\n    return count']",10000,0.08611060000112047,0.08823230199966929,0.09436719999939669,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        search = arg2 - arg1[i]\n        if search in hash_map:\n            count += hash_map[search]\n        hash_map[arg1[i]] = hash_map.get(arg1[i], 0) + 1\n    return count']",100000,1.2535466000044835,1.2726280489999773,1.3339545999988331,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    mapper = {}\n    pair_count = 0\n    for i in arg1:\n        if mapper.get(arg2 - i, 0) != 0:\n            pair_count += 1\n        mapper[i] = mapper.get(i, 0) + 1\n    return pair_count']",1000,0.007190800002717879,0.007571377000567736,0.008418000004894566,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    mapper = {}\n    pair_count = 0\n    for i in arg1:\n        if mapper.get(arg2 - i, 0) != 0:\n            pair_count += 1\n        mapper[i] = mapper.get(i, 0) + 1\n    return pair_count']",10000,0.07744920000550337,0.07859647899982519,0.08163230000354815,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    mapper = {}\n    pair_count = 0\n    for i in arg1:\n        if mapper.get(arg2 - i, 0) != 0:\n            pair_count += 1\n        mapper[i] = mapper.get(i, 0) + 1\n    return pair_count']",100000,1.1826087000008556,1.207374648000041,1.2323858000017935,N/A
p4_sum_array_pairs,prompt_4,58,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        element_count[num] = element_count.get(num, 0) + 1\n    return pair_count']",1000,0.006723800004692748,0.00703892999990785,0.008653800003230572,N/A
p4_sum_array_pairs,prompt_4,58,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        element_count[num] = element_count.get(num, 0) + 1\n    return pair_count']",10000,0.07256690000212984,0.07442047400021692,0.08210749999852851,N/A
p4_sum_array_pairs,prompt_4,58,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pair_count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        element_count[num] = element_count.get(num, 0) + 1\n    return pair_count']",100000,1.127713899993978,1.1493636049996712,1.1920465000002878,N/A
p4_sum_array_pairs,prompt_4,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        remain = arg2 - num\n        if remain in hash_map:\n            count += hash_map[remain]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006752499997674022,0.007130230000111624,0.008630500000435859,N/A
p4_sum_array_pairs,prompt_4,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        remain = arg2 - num\n        if remain in hash_map:\n            count += hash_map[remain]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07327339999756077,0.07496952200002852,0.07802580000134185,N/A
p4_sum_array_pairs,prompt_4,59,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        remain = arg2 - num\n        if remain in hash_map:\n            count += hash_map[remain]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.13731099999859,1.1558893430000898,1.207284800002526,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen = {}\n    counter = 0\n    for num in arg1:\n        needed = arg2 - num\n        if needed in seen:\n            counter += seen[needed]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",1000,0.006225999997695908,0.006496717000263743,0.009880699995846953,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen = {}\n    counter = 0\n    for num in arg1:\n        needed = arg2 - num\n        if needed in seen:\n            counter += seen[needed]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",10000,0.0683329000021331,0.0709043099997507,0.08042849999765167,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1: list, arg2: int) -> int:\n    seen = {}\n    counter = 0\n    for num in arg1:\n        needed = arg2 - num\n        if needed in seen:\n            counter += seen[needed]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return counter']",100000,1.084810299995297,1.1033708900003694,1.1218476000067312,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    count = 0\n    map_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_dict:\n            count += map_dict[complement]\n        if num in map_dict:\n            map_dict[num] += 1\n        else:\n            map_dict[num] = 1\n    return count']",1000,0.006163199999718927,0.006452971999824513,0.006886700000904966,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    count = 0\n    map_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_dict:\n            count += map_dict[complement]\n        if num in map_dict:\n            map_dict[num] += 1\n        else:\n            map_dict[num] = 1\n    return count']",10000,0.06786319999810075,0.06946928800010937,0.07350830000359565,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    count = 0\n    map_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_dict:\n            count += map_dict[complement]\n        if num in map_dict:\n            map_dict[num] += 1\n        else:\n            map_dict[num] = 1\n    return count']",100000,1.083523499997682,1.1045360419998906,1.1255222000036156,N/A
p4_sum_array_pairs,prompt_4,62,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for element in arg1:\n        if arg2 - element in hash_map:\n            count += hash_map[arg2 - element]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",1000,0.00600230000418378,0.00643788500012306,0.009862600003543776,N/A
p4_sum_array_pairs,prompt_4,62,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for element in arg1:\n        if arg2 - element in hash_map:\n            count += hash_map[arg2 - element]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",10000,0.06707049999386072,0.06916665699951409,0.08210909999615978,N/A
p4_sum_array_pairs,prompt_4,62,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    hash_map = {}\n    for element in arg1:\n        if arg2 - element in hash_map:\n            count += hash_map[arg2 - element]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",100000,1.0686962000036146,1.101412984999406,1.12384480000037,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006150799999886658,0.006653976999878068,0.012129700000514276,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06700870000349823,0.06986951000042609,0.07639070000004722,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0805841999972472,1.1131564809996781,1.1433528999987175,N/A
p4_sum_array_pairs,prompt_4,64,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    count = 0\n    for num in counter:\n        complement = arg2 - num\n        if complement == num:\n            count += counter[num] // 2\n        else:\n            count += min(counter[num], counter.get(complement, 0))\n    return count']",1000,0.015413599998282734,0.016472970999820973,0.020432800003618468,N/A
p4_sum_array_pairs,prompt_4,64,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    count = 0\n    for num in counter:\n        complement = arg2 - num\n        if complement == num:\n            count += counter[num] // 2\n        else:\n            count += min(counter[num], counter.get(complement, 0))\n    return count']",10000,0.15993080000043847,0.167051315999488,0.18667529999947874,N/A
p4_sum_array_pairs,prompt_4,64,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    count = 0\n    for num in counter:\n        complement = arg2 - num\n        if complement == num:\n            count += counter[num] // 2\n        else:\n            count += min(counter[num], counter.get(complement, 0))\n    return count']",100000,2.0136504999973113,2.047713186999608,2.096193299999868,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006019599997671321,0.006338306000179728,0.007574100003694184,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06562609999673441,0.06842518700017536,0.0763751000049524,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.0689562000043225,1.1079380010000022,1.1472817999965628,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0068391000022529624,0.007240652999898884,0.010916599996562582,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07266230000095675,0.07575071000057505,0.08595909999712603,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = dict()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1407160999951884,1.1649347839999245,1.1899113999970723,N/A
p4_sum_array_pairs,prompt_4,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if pairs.get(complement, 0) > 0:\n            counter += pairs[complement]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",1000,0.0072179999988293275,0.007612246999997296,0.00819690000207629,N/A
p4_sum_array_pairs,prompt_4,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if pairs.get(complement, 0) > 0:\n            counter += pairs[complement]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",10000,0.07770100000197999,0.08149920900024882,0.09467050000239396,N/A
p4_sum_array_pairs,prompt_4,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if pairs.get(complement, 0) > 0:\n            counter += pairs[complement]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",100000,1.1875346999950125,1.2137415309997595,1.2378381000016816,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_count:\n            pair_count += freq_count[complement]\n        if num in freq_count:\n            freq_count[num] += 1\n        else:\n            freq_count[num] = 1\n    return pair_count']",1000,0.0061850999991293065,0.006517083999933675,0.007910400003311224,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_count:\n            pair_count += freq_count[complement]\n        if num in freq_count:\n            freq_count[num] += 1\n        else:\n            freq_count[num] = 1\n    return pair_count']",10000,0.06683020000491524,0.07005057800030044,0.08409219999884954,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_count:\n            pair_count += freq_count[complement]\n        if num in freq_count:\n            freq_count[num] += 1\n        else:\n            freq_count[num] = 1\n    return pair_count']",100000,1.0792068999944604,1.111002351000061,1.1719308999963687,N/A
p4_sum_array_pairs,prompt_4,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map, count = ({}, 0)\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006529300000693183,0.006923741999489721,0.00914339999872027,N/A
p4_sum_array_pairs,prompt_4,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map, count = ({}, 0)\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07082479999371571,0.07376931499951751,0.08507189999363618,N/A
p4_sum_array_pairs,prompt_4,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map, count = ({}, 0)\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.1301949999979115,1.1509510630001023,1.1728474000046845,N/A
p4_sum_array_pairs,prompt_4,70,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    nums_hash = {}\n    results = []\n    for num in arg1:\n        if arg2 - num in nums_hash:\n            results.append((arg2 - num, num))\n        else:\n            nums_hash[num] = True\n    return results']",1000,0.005063299999164883,0.005346084000120754,0.006653800002823118,N/A
p4_sum_array_pairs,prompt_4,70,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    nums_hash = {}\n    results = []\n    for num in arg1:\n        if arg2 - num in nums_hash:\n            results.append((arg2 - num, num))\n        else:\n            nums_hash[num] = True\n    return results']",10000,0.05555850000382634,0.057429751999734435,0.0626062000010279,N/A
p4_sum_array_pairs,prompt_4,70,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    nums_hash = {}\n    results = []\n    for num in arg1:\n        if arg2 - num in nums_hash:\n            results.append((arg2 - num, num))\n        else:\n            nums_hash[num] = True\n    return results']",100000,0.9364420999991125,0.9674094890002016,0.988835600001039,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        if arg2 - num not in freq_dict:\n            freq_dict[num] = freq_dict.get(num, 0) + 1\n        else:\n            count += freq_dict[arg2 - num]\n    return count']",1000,0.006567899996298365,0.006935622999662883,0.00816579999809619,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        if arg2 - num not in freq_dict:\n            freq_dict[num] = freq_dict.get(num, 0) + 1\n        else:\n            count += freq_dict[arg2 - num]\n    return count']",10000,0.0706354000067222,0.07373598299964215,0.08003829999506706,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        if arg2 - num not in freq_dict:\n            freq_dict[num] = freq_dict.get(num, 0) + 1\n        else:\n            count += freq_dict[arg2 - num]\n    return count']",100000,1.1019784000018262,1.137428711000248,1.1658814999973401,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.006219700000656303,0.006619808999603265,0.009504699999524746,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06728470000234665,0.07069197199991323,0.08813650000229245,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map:\n            count += map[temp]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.0771221999966656,1.1025665999994816,1.127627100002428,N/A
p4_sum_array_pairs,prompt_4,73,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen.add(number)\n        else:\n            count += 1\n    return count']",1000,0.004433899994182866,0.004739947999769356,0.006379500002367422,N/A
p4_sum_array_pairs,prompt_4,73,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen.add(number)\n        else:\n            count += 1\n    return count']",10000,0.054734899997129105,0.057891443999906186,0.0628253000031691,N/A
p4_sum_array_pairs,prompt_4,73,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target not in seen:\n            seen.add(number)\n        else:\n            count += 1\n    return count']",100000,0.8335588999980246,0.8546513280002546,0.8897521999970195,N/A
p4_sum_array_pairs,prompt_4,74,"['from typing import List\n\ndef funcImp(lst: List[int], k: int) -> int:\n    count = 0\n    freq = dict()\n    for element in lst:\n        if k - element in freq:\n            count += freq[k - element]\n        freq[element] = freq.get(element, 0) + 1\n    return count']",1000,0.006536300003062934,0.006875807999895187,0.008188599997083656,N/A
p4_sum_array_pairs,prompt_4,74,"['from typing import List\n\ndef funcImp(lst: List[int], k: int) -> int:\n    count = 0\n    freq = dict()\n    for element in lst:\n        if k - element in freq:\n            count += freq[k - element]\n        freq[element] = freq.get(element, 0) + 1\n    return count']",10000,0.07057419999910053,0.07299545100009709,0.07779360000131419,N/A
p4_sum_array_pairs,prompt_4,74,"['from typing import List\n\ndef funcImp(lst: List[int], k: int) -> int:\n    count = 0\n    freq = dict()\n    for element in lst:\n        if k - element in freq:\n            count += freq[k - element]\n        freq[element] = freq.get(element, 0) + 1\n    return count']",100000,1.1312444000068353,1.1574860149999586,1.1791809999995166,N/A
p4_sum_array_pairs,prompt_4,75,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in counter:\n            count += counter[diff]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",1000,0.006747100000211503,0.0072469200003979495,0.010348799994972069,N/A
p4_sum_array_pairs,prompt_4,75,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in counter:\n            count += counter[diff]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",10000,0.07276039999851491,0.07612540299996909,0.08608060000551632,N/A
p4_sum_array_pairs,prompt_4,75,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = dict()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in counter:\n            count += counter[diff]\n        counter[num] = counter.get(num, 0) + 1\n    return count']",100000,1.1419175999981235,1.1689004249999562,1.1995411000025342,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in dict_nums:\n            count += dict_nums[arg2 - i]\n        dict_nums[i] = dict_nums.get(i, 0) + 1\n    return count']",1000,0.006560199995874427,0.007011599000034039,0.009103999997023493,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in dict_nums:\n            count += dict_nums[arg2 - i]\n        dict_nums[i] = dict_nums.get(i, 0) + 1\n    return count']",10000,0.07134019999648444,0.07412851099972613,0.08102449999569217,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    count = 0\n    for i in arg1:\n        if arg2 - i in dict_nums:\n            count += dict_nums[arg2 - i]\n        dict_nums[i] = dict_nums.get(i, 0) + 1\n    return count']",100000,1.129459500007215,1.153384015000047,1.187036100003752,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    m = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            pairs += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return pairs']",1000,0.0061238999987836,0.006483614999669953,0.007139299996197224,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    m = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            pairs += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return pairs']",10000,0.06754389999696286,0.07041500699953758,0.08038339999620803,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    m = {}\n    pairs = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in m:\n            pairs += m[diff]\n        if num in m:\n            m[num] += 1\n        else:\n            m[num] = 1\n    return pairs']",100000,1.074279000000388,1.1057435700000497,1.1408576000030735,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006769300001906231,0.007253482999731204,0.009645999998610932,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07235779999609804,0.07540397400000075,0.08394720000069356,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1322653999959584,1.1654482720001398,1.1986193000047933,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006015499995555729,0.006398207000238472,0.009965500001271721,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06612820000009378,0.06883015200051887,0.07606490000034682,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0767909999995027,1.1002343109998036,1.1301431999963825,N/A
p4_sum_array_pairs,prompt_4,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elements_count = dict()\n    pair_count = 0\n    for num in arg1:\n        target_num = arg2 - num\n        if target_num in elements_count:\n            pair_count += elements_count[target_num]\n        if num in elements_count:\n            elements_count[num] += 1\n        else:\n            elements_count[num] = 1\n    return pair_count']",1000,0.006124100000306498,0.006455964999258867,0.007000400000833906,N/A
p4_sum_array_pairs,prompt_4,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elements_count = dict()\n    pair_count = 0\n    for num in arg1:\n        target_num = arg2 - num\n        if target_num in elements_count:\n            pair_count += elements_count[target_num]\n        if num in elements_count:\n            elements_count[num] += 1\n        else:\n            elements_count[num] = 1\n    return pair_count']",10000,0.06734699999651639,0.06984083100040152,0.0841775000008056,N/A
p4_sum_array_pairs,prompt_4,80,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    elements_count = dict()\n    pair_count = 0\n    for num in arg1:\n        target_num = arg2 - num\n        if target_num in elements_count:\n            pair_count += elements_count[target_num]\n        if num in elements_count:\n            elements_count[num] += 1\n        else:\n            elements_count[num] = 1\n    return pair_count']",100000,1.0779447000022628,1.1080885800001123,1.177612899999076,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += counts.get(complement, 0)\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.007521200001065154,0.008023813999825507,0.012180300000181887,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += counts.get(complement, 0)\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.07959419999679085,0.08303397699979541,0.09119889999419684,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    counts = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        pair_count += counts.get(complement, 0)\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.227517399995122,1.2540095799996198,1.2941518000006909,N/A
p4_sum_array_pairs,prompt_4,82,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    table = defaultdict(int)\n    total = 0\n    for i in arg1:\n        if arg2 - i in table:\n            total += table[arg2 - i]\n        table[i] += 1\n    return total']",1000,0.010039299995696638,0.010761370999680366,0.015488099998037796,N/A
p4_sum_array_pairs,prompt_4,82,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    table = defaultdict(int)\n    total = 0\n    for i in arg1:\n        if arg2 - i in table:\n            total += table[arg2 - i]\n        table[i] += 1\n    return total']",10000,0.10176960000535473,0.10659010300019872,0.11789550000685267,N/A
p4_sum_array_pairs,prompt_4,82,"['from collections import defaultdict\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    table = defaultdict(int)\n    total = 0\n    for i in arg1:\n        if arg2 - i in table:\n            total += table[arg2 - i]\n        table[i] += 1\n    return total']",100000,1.4661414000001969,1.506829145000156,1.539040700001351,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairsCount = 0\n    for i in range(len(arg1)):\n        compliment = arg2 - arg1[i]\n        if compliment not in hashMap:\n            hashMap[arg1[i]] = i\n        else:\n            pairsCount += 1\n    return pairsCount']",1000,0.006364099994243588,0.006667197999995551,0.008186999999452382,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairsCount = 0\n    for i in range(len(arg1)):\n        compliment = arg2 - arg1[i]\n        if compliment not in hashMap:\n            hashMap[arg1[i]] = i\n        else:\n            pairsCount += 1\n    return pairsCount']",10000,0.06774600000062492,0.07084015800057386,0.08093290000397246,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairsCount = 0\n    for i in range(len(arg1)):\n        compliment = arg2 - arg1[i]\n        if compliment not in hashMap:\n            hashMap[arg1[i]] = i\n        else:\n            pairsCount += 1\n    return pairsCount']",100000,1.0989078999991762,1.1226503499998217,1.1561259000009159,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.006778299997677095,0.0071742810002615445,0.008732700000109617,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07266850000451086,0.07550872699990578,0.08784949999972014,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.1353777999975136,1.1662013529997786,1.2019530000034138,N/A
p4_sum_array_pairs,prompt_4,85,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if count_dict[complement]:\n            pair_count += 1\n        count_dict[num] += 1\n    return pair_count']",1000,0.013968000006570946,0.014711906999655184,0.016947000003710855,N/A
p4_sum_array_pairs,prompt_4,85,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if count_dict[complement]:\n            pair_count += 1\n        count_dict[num] += 1\n    return pair_count']",10000,0.13988480000261916,0.14540445099999488,0.1576405000014347,N/A
p4_sum_array_pairs,prompt_4,85,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if count_dict[complement]:\n            pair_count += 1\n        count_dict[num] += 1\n    return pair_count']",100000,2.1875902000028873,2.2450520299999335,2.2922777000057977,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006757900002412498,0.007183728000381961,0.011280400001851376,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.0722343000015826,0.07511772400015616,0.0823409000004176,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1447365999993053,1.167130282000362,1.190344800001185,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    visited_nums = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in visited_nums:\n            pair_count += visited_nums[arg2 - num]\n        if num in visited_nums:\n            visited_nums[num] += 1\n        else:\n            visited_nums[num] = 1\n    return pair_count']",1000,0.006007300005876459,0.006312073999797576,0.007148100004997104,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    visited_nums = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in visited_nums:\n            pair_count += visited_nums[arg2 - num]\n        if num in visited_nums:\n            visited_nums[num] += 1\n        else:\n            visited_nums[num] = 1\n    return pair_count']",10000,0.06577780000225175,0.0679777869998361,0.07322520000161603,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    visited_nums = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in visited_nums:\n            pair_count += visited_nums[arg2 - num]\n        if num in visited_nums:\n            visited_nums[num] += 1\n        else:\n            visited_nums[num] = 1\n    return pair_count']",100000,1.0674109000028693,1.10478225699997,1.1461969000010868,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006618499995965976,0.006944899999944028,0.008428400004049763,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07097139999677893,0.073991871000253,0.08527379999577533,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1264563000004273,1.1510088919996633,1.1780902999962564,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in data:\n            count += data[temp]\n        data[num] = data.get(num, 0) + 1\n    return count']",1000,0.006737800002156291,0.007521592999983113,0.018922099996416364,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in data:\n            count += data[temp]\n        data[num] = data.get(num, 0) + 1\n    return count']",10000,0.07254280000051949,0.0755269130004308,0.08441549999406561,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in data:\n            count += data[temp]\n        data[num] = data.get(num, 0) + 1\n    return count']",100000,1.13709569999628,1.1642750819996581,1.1916179999971064,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counts:\n            pairs += counts[difference]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",1000,0.006199800001922995,0.006474249000093551,0.007657800000743009,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counts:\n            pairs += counts[difference]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",10000,0.06683560000237776,0.06972367899987147,0.07451310000033118,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in counts:\n            pairs += counts[difference]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",100000,1.082479799995781,1.1053199589999714,1.1363465000031283,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    dic = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dic:\n            count += dic[complement]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",1000,0.006739700002071913,0.007187654000372277,0.011610000001383014,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    dic = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dic:\n            count += dic[complement]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",10000,0.0721040999997058,0.07567654100035724,0.08420070000283886,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    dic = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dic:\n            count += dic[complement]\n        dic[num] = dic.get(num, 0) + 1\n    return count']",100000,1.141080300003523,1.163056551000409,1.2108263999980409,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    cnts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in cnts:\n            pairs += cnts[arg2 - i]\n        cnts[i] = cnts.get(i, 0) + 1\n    return pairs']",1000,0.006669499998679385,0.007032703999502701,0.008694000003742985,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    cnts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in cnts:\n            pairs += cnts[arg2 - i]\n        cnts[i] = cnts.get(i, 0) + 1\n    return pairs']",10000,0.07146419999480713,0.0743066849996103,0.08509320000302978,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    cnts = {}\n    pairs = 0\n    for i in arg1:\n        if arg2 - i in cnts:\n            pairs += cnts[arg2 - i]\n        cnts[i] = cnts.get(i, 0) + 1\n    return pairs']",100000,1.1236137999949278,1.1486029969997618,1.1797789000047487,N/A
p4_sum_array_pairs,prompt_4,93,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    res = 0\n    m = defaultdict(int)\n    for i in range(0, len(arg1)):\n        res += m[arg2 - arg1[i]]\n        m[arg1[i]] += 1\n    return res']",1000,0.014943599999241997,0.015640961000317474,0.01956139999674633,N/A
p4_sum_array_pairs,prompt_4,93,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    res = 0\n    m = defaultdict(int)\n    for i in range(0, len(arg1)):\n        res += m[arg2 - arg1[i]]\n        m[arg1[i]] += 1\n    return res']",10000,0.14954240000224672,0.15356066000014834,0.15960009999980684,N/A
p4_sum_array_pairs,prompt_4,93,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    res = 0\n    m = defaultdict(int)\n    for i in range(0, len(arg1)):\n        res += m[arg2 - arg1[i]]\n        m[arg1[i]] += 1\n    return res']",100000,2.280958899995312,2.319920806000082,2.4129117999982554,N/A
p4_sum_array_pairs,prompt_4,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006565800002135802,0.006996170999991591,0.008989499998278916,N/A
p4_sum_array_pairs,prompt_4,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07058390000020154,0.07266112500008604,0.07794830000057118,N/A
p4_sum_array_pairs,prompt_4,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1094904999990831,1.1333624430005875,1.1626440000036382,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    if not arg1 or not isinstance(arg1, list) or (not all((isinstance(i, int) for i in arg1))):\n        pass\n        return\n    if not isinstance(arg2, int):\n        pass\n        return\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        elif num not in hash_map:\n            hash_map[num] = 1\n    pass']",1000,0.008764799997152295,0.009131876000537886,0.01046640000276966,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    if not arg1 or not isinstance(arg1, list) or (not all((isinstance(i, int) for i in arg1))):\n        pass\n        return\n    if not isinstance(arg2, int):\n        pass\n        return\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        elif num not in hash_map:\n            hash_map[num] = 1\n    pass']",10000,0.09314119999908144,0.09489472600005683,0.10048929999902612,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    if not arg1 or not isinstance(arg1, list) or (not all((isinstance(i, int) for i in arg1))):\n        pass\n        return\n    if not isinstance(arg2, int):\n        pass\n        return\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        elif num not in hash_map:\n            hash_map[num] = 1\n    pass']",100000,1.3319173000054434,1.3608148900001107,1.4341197999965516,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004443399993760977,0.004726918000233127,0.005324700003257021,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05490699999791104,0.05654360600026848,0.059350800001993775,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8381492999978946,0.8523239969999122,0.8943875000040862,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004375499993329868,0.004701100999882329,0.005389000005379785,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05442190000030678,0.05690056999977969,0.06324790000508074,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.834650299999339,0.8521440720003011,0.8891445000044769,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    hashset = set()\n    result = []\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashset:\n            result.append((temp, num))\n        hashset.add(num)\n    return result']",1000,0.004476099995372351,0.004694171999944956,0.006112500006565824,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    hashset = set()\n    result = []\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashset:\n            result.append((temp, num))\n        hashset.add(num)\n    return result']",10000,0.05613240000093356,0.057803772000042955,0.06344629999512108,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    hashset = set()\n    result = []\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashset:\n            result.append((temp, num))\n        hashset.add(num)\n    return result']",100000,0.8708709999991697,0.8853828769997198,0.9042235999950208,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in temp_dict:\n            counter += temp_dict[complement]\n        temp_dict[num] = temp_dict.get(num, 0) + 1\n    return counter']",1000,0.0069011000014143065,0.00716898900034721,0.0077562000005855225,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in temp_dict:\n            counter += temp_dict[complement]\n        temp_dict[num] = temp_dict.get(num, 0) + 1\n    return counter']",10000,0.0727815999998711,0.0751014479999867,0.07783570000174223,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in temp_dict:\n            counter += temp_dict[complement]\n        temp_dict[num] = temp_dict.get(num, 0) + 1\n    return counter']",100000,1.1418266000036965,1.1612659500002338,1.1896851000055904,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    dcounts = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in dcounts:\n            pairs += dcounts[arg2 - num]\n        if num in dcounts:\n            dcounts[num] += 1\n        else:\n            dcounts[num] = 1\n    return pairs']",1000,0.00599789999978384,0.006334219000054872,0.0069488000008277595,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    dcounts = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in dcounts:\n            pairs += dcounts[arg2 - num]\n        if num in dcounts:\n            dcounts[num] += 1\n        else:\n            dcounts[num] = 1\n    return pairs']",10000,0.06672570000228006,0.06833129399950849,0.07078679999540327,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    dcounts = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in dcounts:\n            pairs += dcounts[arg2 - num]\n        if num in dcounts:\n            dcounts[num] += 1\n        else:\n            dcounts[num] = 1\n    return pairs']",100000,1.0803451999963727,1.097205777999552,1.1290729000029387,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    elements_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_dict:\n            count += elements_dict[complement]\n        if num in elements_dict:\n            elements_dict[num] += 1\n        else:\n            elements_dict[num] = 1\n    return count']",1000,0.006170399996335618,0.006531305999742471,0.0077129999990575016,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    elements_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_dict:\n            count += elements_dict[complement]\n        if num in elements_dict:\n            elements_dict[num] += 1\n        else:\n            elements_dict[num] = 1\n    return count']",10000,0.06814679999661166,0.070122776000062,0.07519509999838192,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    elements_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_dict:\n            count += elements_dict[complement]\n        if num in elements_dict:\n            elements_dict[num] += 1\n        else:\n            elements_dict[num] = 1\n    return count']",100000,1.08031640000263,1.1009981590004463,1.1394215000036638,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    counter = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            counter += num_dict[comp]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",1000,0.006783500000892673,0.007127830999888829,0.008687900000950322,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    counter = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            counter += num_dict[comp]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",10000,0.07310310000320897,0.07496442499970726,0.07807300000422401,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    counter = 0\n    for num in arg1:\n        comp = arg2 - num\n        if comp in num_dict:\n            counter += num_dict[comp]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",100000,1.140491899997869,1.159975079999931,1.1930334999997285,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_map:\n            counter += hash_map[compliment]\n        if i in hash_map:\n            hash_map[i] += 1\n        else:\n            hash_map[i] = 1\n    return counter']",1000,0.006160400000226218,0.006526465000933968,0.008370200004719663,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_map:\n            counter += hash_map[compliment]\n        if i in hash_map:\n            hash_map[i] += 1\n        else:\n            hash_map[i] = 1\n    return counter']",10000,0.06807909999770345,0.06976672999968286,0.07388639999408042,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    counter = 0\n    hash_map = {}\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_map:\n            counter += hash_map[compliment]\n        if i in hash_map:\n            hash_map[i] += 1\n        else:\n            hash_map[i] = 1\n    return counter']",100000,1.079600200006098,1.0988553599996522,1.12141359999805,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    map_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_counts:\n            count += map_counts[complement]\n        map_counts[num] = map_counts.get(num, 0) + 1\n    return count']",1000,0.006718800003000069,0.007100214999882155,0.00837630000023637,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    map_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_counts:\n            count += map_counts[complement]\n        map_counts[num] = map_counts.get(num, 0) + 1\n    return count']",10000,0.07344770000054268,0.07521917300007772,0.08431980000023032,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    map_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in map_counts:\n            count += map_counts[complement]\n        map_counts[num] = map_counts.get(num, 0) + 1\n    return count']",100000,1.1411586999965948,1.1563334710002529,1.188061100001505,N/A
p4_sum_array_pairs,prompt_5,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for current in arg1:\n        pair = arg2 - current\n        if pair in seen:\n            count += seen[pair]\n        seen[current] = seen.get(current, 0) + 1\n    return count']",1000,0.006703099999867845,0.007160649000434205,0.009490900003584102,N/A
p4_sum_array_pairs,prompt_5,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for current in arg1:\n        pair = arg2 - current\n        if pair in seen:\n            count += seen[pair]\n        seen[current] = seen.get(current, 0) + 1\n    return count']",10000,0.07351410000410397,0.07502582000022812,0.0776354000045103,N/A
p4_sum_array_pairs,prompt_5,5,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    seen = {}\n    count = 0\n    for current in arg1:\n        pair = arg2 - current\n        if pair in seen:\n            count += seen[pair]\n        seen[current] = seen.get(current, 0) + 1\n    return count']",100000,1.136943000004976,1.1563049209999736,1.1749724999972386,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    counter = {}\n    totalPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            totalPairs += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return totalPairs']",1000,0.006822199997259304,0.007192022999806796,0.008694899996044114,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    counter = {}\n    totalPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            totalPairs += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return totalPairs']",10000,0.07326309999916703,0.07528806800000894,0.07904850000340957,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    counter = {}\n    totalPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            totalPairs += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return totalPairs']",100000,1.1413842999972985,1.1602245000002585,1.1881454000031226,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    pairs_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_freq:\n            pairs_count += element_freq[complement]\n        element_freq[i] = element_freq.get(i, 0) + 1\n    return pairs_count']",1000,0.006797900001402013,0.00713958000043931,0.009127899997110944,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    pairs_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_freq:\n            pairs_count += element_freq[complement]\n        element_freq[i] = element_freq.get(i, 0) + 1\n    return pairs_count']",10000,0.07276550000096904,0.0750633590004145,0.08302779999939958,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    pairs_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_freq:\n            pairs_count += element_freq[complement]\n        element_freq[i] = element_freq.get(i, 0) + 1\n    return pairs_count']",100000,1.1363487000053283,1.1578587200003676,1.1767229000033694,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            counter += 1\n        hash_map[num] = 1\n    return counter']",1000,0.005218399994191714,0.005531064999304363,0.008568899997044355,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            counter += 1\n        hash_map[num] = 1\n    return counter']",10000,0.05804640000133077,0.06041372700026841,0.06581449999794131,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            counter += 1\n        hash_map[num] = 1\n    return counter']",100000,0.9479920000012498,0.9650291119993927,0.9851567000005161,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for i in arg1:\n        diff = arg2 - i\n        if diff in hashmap:\n            pairs.append((i, diff))\n        else:\n            hashmap[i] = 1\n    return pairs']",1000,0.005250599999271799,0.00549490599973069,0.006415600000764243,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for i in arg1:\n        diff = arg2 - i\n        if diff in hashmap:\n            pairs.append((i, diff))\n        else:\n            hashmap[i] = 1\n    return pairs']",10000,0.05825589999585645,0.059533944999639064,0.06578650000301423,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs = []\n    for i in arg1:\n        diff = arg2 - i\n        if diff in hashmap:\n            pairs.append((i, diff))\n        else:\n            hashmap[i] = 1\n    return pairs']",100000,0.9577930000014021,0.986688811999702,1.0222915999984252,N/A
p4_sum_array_pairs,prompt_5,10,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    result = 0\n    for item in counter:\n        result += counter[arg2 - item]\n    result = result // 2\n    return result']",1000,0.009860699996352196,0.010396312000084435,0.012090800002624746,N/A
p4_sum_array_pairs,prompt_5,10,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    result = 0\n    for item in counter:\n        result += counter[arg2 - item]\n    result = result // 2\n    return result']",10000,0.10236580000491813,0.10514323699957458,0.11238089999824297,N/A
p4_sum_array_pairs,prompt_5,10,"['from collections import Counter\n\ndef funcImp(arg1, arg2):\n    counter = Counter(arg1)\n    result = 0\n    for item in counter:\n        result += counter[arg2 - item]\n    result = result // 2\n    return result']",100000,1.395017299997562,1.4203270939998764,1.4557294999976875,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.006140599994978402,0.006483193999811192,0.007165400005760603,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.06780269999580923,0.06946043000010832,0.07259839999460382,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.080740399993374,1.099712059000085,1.1212884999986272,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    counts = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            counter += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return counter']",1000,0.006775000001653098,0.007087512000071001,0.007566500004031695,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    counts = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            counter += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return counter']",10000,0.07370870000158902,0.07511257099940849,0.07916390000173124,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    counts = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            counter += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return counter']",100000,1.141275100002531,1.1574086059999535,1.1866465999992215,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map:\n            count += map[diff]\n        map[num] = map.get(num, 0) + 1\n    return count']",1000,0.006847899996500928,0.007227350999964983,0.010102199994435068,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map:\n            count += map[diff]\n        map[num] = map.get(num, 0) + 1\n    return count']",10000,0.07339520000095945,0.07497370300006878,0.08076499999879161,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in map:\n            count += map[diff]\n        map[num] = map.get(num, 0) + 1\n    return count']",100000,1.1362587999974494,1.1588129510000726,1.178723799996078,N/A
p4_sum_array_pairs,prompt_5,14,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hash_table = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        counterpart = arg2 - i\n        if counterpart in hash_table:\n            pair_count += hash_table[counterpart]\n        hash_table[i] += 1\n    return pair_count']",1000,0.010290899997926317,0.0107252659999358,0.015611000002536457,N/A
p4_sum_array_pairs,prompt_5,14,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hash_table = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        counterpart = arg2 - i\n        if counterpart in hash_table:\n            pair_count += hash_table[counterpart]\n        hash_table[i] += 1\n    return pair_count']",10000,0.10523700000339886,0.1069341940000595,0.11509130000195,N/A
p4_sum_array_pairs,prompt_5,14,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    hash_table = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        counterpart = arg2 - i\n        if counterpart in hash_table:\n            pair_count += hash_table[counterpart]\n        hash_table[i] += 1\n    return pair_count']",100000,1.4763368999992963,1.495520238000172,1.523171300003014,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    res = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            res += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return res']",1000,0.006734100003086496,0.007152045000329963,0.010059100000944454,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    res = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            res += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return res']",10000,0.07422129999758909,0.07525872799982608,0.07656589999533026,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    res = 0\n    seen = {}\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            res += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return res']",100000,1.1408072000049287,1.1583048910001525,1.1869049000015366,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    nums_dict = {}\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            num_pairs += nums_dict[complement]\n        nums_dict[num] = nums_dict.get(num, 0) + 1\n    return num_pairs']",1000,0.006753900001058355,0.007108499000387383,0.007624700003361795,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    nums_dict = {}\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            num_pairs += nums_dict[complement]\n        nums_dict[num] = nums_dict.get(num, 0) + 1\n    return num_pairs']",10000,0.07375630000024103,0.07561924199952046,0.08345989999361336,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    nums_dict = {}\n    num_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            num_pairs += nums_dict[complement]\n        nums_dict[num] = nums_dict.get(num, 0) + 1\n    return num_pairs']",100000,1.1454136999964248,1.1611974040003405,1.1863894000052824,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        diff = arg2 - number\n        if diff in seen:\n            count += seen[diff]\n        if number not in seen:\n            seen[number] = 0\n        seen[number] += 1\n    return count']",1000,0.008950700001150835,0.009454532000381733,0.013162399998691399,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        diff = arg2 - number\n        if diff in seen:\n            count += seen[diff]\n        if number not in seen:\n            seen[number] = 0\n        seen[number] += 1\n    return count']",10000,0.09448540000448702,0.09663258800006588,0.10615690000122413,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        diff = arg2 - number\n        if diff in seen:\n            count += seen[diff]\n        if number not in seen:\n            seen[number] = 0\n        seen[number] += 1\n    return count']",100000,1.3594564000013634,1.3773580219996076,1.3969588999971165,N/A
p4_sum_array_pairs,prompt_5,18,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> Tuple[int, int]:\n    complement_nums = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_nums:\n            return (complement, num)\n        else:\n            complement_nums.add(num)\n    return ()']",1000,0.000906600005691871,0.000979144999946584,0.0012596000015037134,N/A
p4_sum_array_pairs,prompt_5,18,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> Tuple[int, int]:\n    complement_nums = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_nums:\n            return (complement, num)\n        else:\n            complement_nums.add(num)\n    return ()']",10000,0.0026906000057351775,0.0028601130002061837,0.003336099995067343,N/A
p4_sum_array_pairs,prompt_5,18,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> Tuple[int, int]:\n    complement_nums = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_nums:\n            return (complement, num)\n        else:\n            complement_nums.add(num)\n    return ()']",100000,0.009534600001643412,0.010073663999210112,0.010644799993315246,N/A
p4_sum_array_pairs,prompt_5,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if num in hash_map:\n            counter += hash_map[num]\n        diff = arg2 - num\n        hash_map[diff] = hash_map.get(diff, 0) + 1\n    return counter']",1000,0.006715000003168825,0.006975058999887551,0.007394200001726858,N/A
p4_sum_array_pairs,prompt_5,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if num in hash_map:\n            counter += hash_map[num]\n        diff = arg2 - num\n        hash_map[diff] = hash_map.get(diff, 0) + 1\n    return counter']",10000,0.0723297000004095,0.07399122100039676,0.07666710000194144,N/A
p4_sum_array_pairs,prompt_5,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    counter = 0\n    for num in arg1:\n        if num in hash_map:\n            counter += hash_map[num]\n        diff = arg2 - num\n        hash_map[diff] = hash_map.get(diff, 0) + 1\n    return counter']",100000,1.162883500001044,1.1866899020001438,1.2127216000008048,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.0067662000001291744,0.007224354999925709,0.010405100001662504,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.07238090000464581,0.07444684999973106,0.079912900000636,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.13396549999743,1.1581860410000082,1.2015001000036136,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in d:\n            counter += 1\n        else:\n            d[num] = 1\n    return counter']",1000,0.0052639999994426034,0.005567934000719105,0.006545200005348306,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in d:\n            counter += 1\n        else:\n            d[num] = 1\n    return counter']",10000,0.057819599998765625,0.059312684999604244,0.06306989999575308,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in d:\n            counter += 1\n        else:\n            d[num] = 1\n    return counter']",100000,0.9412179999999353,0.9615460439999879,1.0150694000039948,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for number in arg1:\n        if arg2 - number in num_dict:\n            count += num_dict[arg2 - number]\n        num_dict[number] = num_dict.get(number, 0) + 1\n    return count']",1000,0.006539599999086931,0.006961247000290314,0.010042699999758042,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for number in arg1:\n        if arg2 - number in num_dict:\n            count += num_dict[arg2 - number]\n        num_dict[number] = num_dict.get(number, 0) + 1\n    return count']",10000,0.07054259999858914,0.07331842699968547,0.07996879999700468,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for number in arg1:\n        if arg2 - number in num_dict:\n            count += num_dict[arg2 - number]\n        num_dict[number] = num_dict.get(number, 0) + 1\n    return count']",100000,1.1225638999967487,1.1574907009995514,1.1978155999968294,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            result.append((difference, num))\n        else:\n            hash_map[num] = num\n    return result']",1000,0.005282800004351884,0.005547062000405276,0.006357199999911245,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            result.append((difference, num))\n        else:\n            hash_map[num] = num\n    return result']",10000,0.057693499999004416,0.06009587699998519,0.06642399999691406,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    result = []\n    for num in arg1:\n        difference = arg2 - num\n        if difference in hash_map:\n            result.append((difference, num))\n        else:\n            hash_map[num] = num\n    return result']",100000,0.9488997000007657,0.9693344600001729,0.9961483999941265,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    num_pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in dict_count:\n            num_pairs += dict_count[diff]\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return num_pairs']",1000,0.0068326999971759506,0.007371229000127642,0.011970100000326056,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    num_pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in dict_count:\n            num_pairs += dict_count[diff]\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return num_pairs']",10000,0.07238060000236146,0.0751988770000753,0.08771669999987353,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    num_pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in dict_count:\n            num_pairs += dict_count[diff]\n        dict_count[i] = dict_count.get(i, 0) + 1\n    return num_pairs']",100000,1.1443713000044227,1.1679398810001294,1.2024721999987378,N/A
p4_sum_array_pairs,prompt_5,25,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_map = {}\n    result = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            result.append((num, complement))\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        else:\n            hash_map[num] = hash_map.get(num, 0) + 1\n    return result']",1000,0.006825099997513462,0.007245201000332599,0.009895900002447888,N/A
p4_sum_array_pairs,prompt_5,25,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_map = {}\n    result = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            result.append((num, complement))\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        else:\n            hash_map[num] = hash_map.get(num, 0) + 1\n    return result']",10000,0.07362509999802569,0.07628386599979421,0.08548680000239983,N/A
p4_sum_array_pairs,prompt_5,25,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hash_map = {}\n    result = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            result.append((num, complement))\n            hash_map[complement] -= 1\n            if hash_map[complement] == 0:\n                del hash_map[complement]\n        else:\n            hash_map[num] = hash_map.get(num, 0) + 1\n    return result']",100000,1.165099999998347,1.2030656309998449,1.2934553000013693,N/A
p4_sum_array_pairs,prompt_5,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.006502399999590125,0.006949386000051163,0.014009600003191736,N/A
p4_sum_array_pairs,prompt_5,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.0703776000009384,0.07374730499970611,0.08254049999959534,N/A
p4_sum_array_pairs,prompt_5,26,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.1337971999964793,1.155120709000257,1.1846793000004254,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for integer in arg1:\n        complement = arg2 - integer\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[integer] = counts.get(integer, 0) + 1\n    return pairs_count']",1000,0.0067306999990250915,0.0071573880001233195,0.009111399995163083,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for integer in arg1:\n        complement = arg2 - integer\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[integer] = counts.get(integer, 0) + 1\n    return pairs_count']",10000,0.07304609999846434,0.07533278100010649,0.08680579999781912,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for integer in arg1:\n        complement = arg2 - integer\n        if complement in counts:\n            pairs_count += counts[complement]\n        counts[integer] = counts.get(integer, 0) + 1\n    return pairs_count']",100000,1.136138599998958,1.1637916680001945,1.228090800002974,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    nums = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            counter += nums[complement]\n        nums[num] = nums.get(num, 0) + 1\n    return counter']",1000,0.0069635999971069396,0.007182647000008729,0.007905300000857096,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    nums = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            counter += nums[complement]\n        nums[num] = nums.get(num, 0) + 1\n    return counter']",10000,0.0723534999997355,0.0750859220005077,0.08121769999706885,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    nums = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            counter += nums[complement]\n        nums[num] = nums.get(num, 0) + 1\n    return counter']",100000,1.1365546999950311,1.1686250900001323,1.2023513999956776,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    counter = 0\n    bucket = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in bucket:\n            counter += bucket[difference]\n        bucket[num] = bucket.get(num, 0) + 1\n    return counter']",1000,0.0067339000015635975,0.00718271600024309,0.008932400000048801,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    counter = 0\n    bucket = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in bucket:\n            counter += bucket[difference]\n        bucket[num] = bucket.get(num, 0) + 1\n    return counter']",10000,0.07281190000503557,0.07596265599946492,0.0889919999972335,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    counter = 0\n    bucket = {}\n    for num in arg1:\n        difference = arg2 - num\n        if difference in bucket:\n            counter += bucket[difference]\n        bucket[num] = bucket.get(num, 0) + 1\n    return counter']",100000,1.1460313999996288,1.1685863369999425,1.1974594999992405,N/A
p4_sum_array_pairs,prompt_5,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",1000,0.00683049999497598,0.007359561000630493,0.009942199998477008,N/A
p4_sum_array_pairs,prompt_5,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",10000,0.07275849999859929,0.07554624799966404,0.08422889999928884,N/A
p4_sum_array_pairs,prompt_5,30,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",100000,1.1338618000008864,1.1671170960000745,1.2014102000030107,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            counter += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",1000,0.006784600001992658,0.007317012999628787,0.011088999999628868,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            counter += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",10000,0.07225359999574721,0.07511604000043008,0.08603500000026543,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    pairs = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            counter += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return counter']",100000,1.135317499996745,1.1638476550002088,1.2217109999983222,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_count = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in frequency_count:\n            pair_count += frequency_count[arg2 - i]\n        frequency_count[i] = frequency_count.get(i, 0) + 1\n    return pair_count']",1000,0.006570800003828481,0.00691796200000681,0.007324599995627068,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_count = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in frequency_count:\n            pair_count += frequency_count[arg2 - i]\n        frequency_count[i] = frequency_count.get(i, 0) + 1\n    return pair_count']",10000,0.07079639999574283,0.07330504799974732,0.08208269999886397,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_count = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in frequency_count:\n            pair_count += frequency_count[arg2 - i]\n        frequency_count[i] = frequency_count.get(i, 0) + 1\n    return pair_count']",100000,1.137840800001868,1.1587772100001894,1.1878149999974994,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    dictionary = {}\n    pairs_count = 0\n    for index, num in enumerate(arg1):\n        difference = arg2 - num\n        if difference in dictionary:\n            pairs_count += 1\n        dictionary[num] = index\n    return pairs_count']",1000,0.006167799998365808,0.0064726939996035075,0.007741499997791834,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    dictionary = {}\n    pairs_count = 0\n    for index, num in enumerate(arg1):\n        difference = arg2 - num\n        if difference in dictionary:\n            pairs_count += 1\n        dictionary[num] = index\n    return pairs_count']",10000,0.06701949999842327,0.06964584899964393,0.0805605999994441,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    dictionary = {}\n    pairs_count = 0\n    for index, num in enumerate(arg1):\n        difference = arg2 - num\n        if difference in dictionary:\n            pairs_count += 1\n        dictionary[num] = index\n    return pairs_count']",100000,1.1122339999928954,1.1430280430001585,1.1722446999992826,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairsCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            pairsCount += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairsCount']",1000,0.006744300000718795,0.007093758000482921,0.009361399999761488,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairsCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            pairsCount += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairsCount']",10000,0.07241490000160411,0.07514068299984501,0.08102480000525247,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairsCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashTable:\n            pairsCount += hashTable[complement]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairsCount']",100000,1.1406835000016144,1.1684470490000967,1.2139846999998554,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    elements = {}\n    counter = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            counter += 1\n        elements[num] = True\n    return counter']",1000,0.005188399998587556,0.005504496000066865,0.008964900000137277,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    elements = {}\n    counter = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            counter += 1\n        elements[num] = True\n    return counter']",10000,0.05733699999836972,0.05999958699991112,0.06662940000387607,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    elements = {}\n    counter = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in elements:\n            counter += 1\n        elements[num] = True\n    return counter']",100000,0.9522139000036987,0.9808263510000689,1.021993600006681,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pairs_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pairs_count']",1000,0.006987699998717289,0.007349827999933041,0.012519800002337433,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pairs_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pairs_count']",10000,0.0720348999966518,0.07625092399983259,0.08612439999706112,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pairs_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pairs_count']",100000,1.1234067999976105,1.1630887980001716,1.2254141000012169,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    count_of_pairs = 0\n    hashmap = {}\n    for num in arg1:\n        if num in hashmap:\n            count_of_pairs += hashmap[num]\n        hashmap[arg2 - num] = hashmap.get(arg2 - num, 0) + 1\n    return count_of_pairs']",1000,0.007590499997604638,0.008044140999627416,0.008615699996880721,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    count_of_pairs = 0\n    hashmap = {}\n    for num in arg1:\n        if num in hashmap:\n            count_of_pairs += hashmap[num]\n        hashmap[arg2 - num] = hashmap.get(arg2 - num, 0) + 1\n    return count_of_pairs']",10000,0.08045529999799328,0.08310395399916161,0.08723289999761619,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    count_of_pairs = 0\n    hashmap = {}\n    for num in arg1:\n        if num in hashmap:\n            count_of_pairs += hashmap[num]\n        hashmap[arg2 - num] = hashmap.get(arg2 - num, 0) + 1\n    return count_of_pairs']",100000,1.246428600003128,1.2905070330001036,1.3257782000000589,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    count = 0\n    hashed_values = {}\n    for num in arg1:\n        diff_pair = arg2 - num\n        if diff_pair in hashed_values:\n            count += hashed_values[diff_pair]\n        if num in hashed_values:\n            hashed_values[num] += 1\n        else:\n            hashed_values[num] = 1\n    return count']",1000,0.006363300002703909,0.006527499000512762,0.009109499995247461,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    count = 0\n    hashed_values = {}\n    for num in arg1:\n        diff_pair = arg2 - num\n        if diff_pair in hashed_values:\n            count += hashed_values[diff_pair]\n        if num in hashed_values:\n            hashed_values[num] += 1\n        else:\n            hashed_values[num] = 1\n    return count']",10000,0.06723399999464164,0.07036578400038707,0.0787549000015133,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    count = 0\n    hashed_values = {}\n    for num in arg1:\n        diff_pair = arg2 - num\n        if diff_pair in hashed_values:\n            count += hashed_values[diff_pair]\n        if num in hashed_values:\n            hashed_values[num] += 1\n        else:\n            hashed_values[num] = 1\n    return count']",100000,1.0882323000041652,1.1119641590003448,1.1764723999949638,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counter = 0\n    hashMap = {}\n    for i in arg1:\n        complement = arg2 - i\n        if complement in hashMap:\n            counter += hashMap[complement]\n        hashMap[i] = hashMap.get(i, 0) + 1\n    return counter']",1000,0.006726299994625151,0.007181566999206552,0.008889999997336417,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counter = 0\n    hashMap = {}\n    for i in arg1:\n        complement = arg2 - i\n        if complement in hashMap:\n            counter += hashMap[complement]\n        hashMap[i] = hashMap.get(i, 0) + 1\n    return counter']",10000,0.07248509999772068,0.07590928099998565,0.08823860000120476,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counter = 0\n    hashMap = {}\n    for i in arg1:\n        complement = arg2 - i\n        if complement in hashMap:\n            counter += hashMap[complement]\n        hashMap[i] = hashMap.get(i, 0) + 1\n    return counter']",100000,1.1314732000028016,1.1630876569997781,1.1868927999967127,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    table = dict()\n    result = 0\n    for num in arg1:\n        pair_num = arg2 - num\n        if pair_num in table:\n            result += table[pair_num]\n        table[num] = table.get(num, 0) + 1\n    return result']",1000,0.00677430000359891,0.007133198999799788,0.008285399999294896,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    table = dict()\n    result = 0\n    for num in arg1:\n        pair_num = arg2 - num\n        if pair_num in table:\n            result += table[pair_num]\n        table[num] = table.get(num, 0) + 1\n    return result']",10000,0.0723922000033781,0.07538492300009239,0.0884476999999606,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    table = dict()\n    result = 0\n    for num in arg1:\n        pair_num = arg2 - num\n        if pair_num in table:\n            result += table[pair_num]\n        table[num] = table.get(num, 0) + 1\n    return result']",100000,1.1427207999950042,1.1686107420002372,1.1992700999981025,N/A
p4_sum_array_pairs,prompt_5,41,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",1000,0.006721199999446981,0.0070426769999903625,0.008430400004726835,N/A
p4_sum_array_pairs,prompt_5,41,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",10000,0.07267690000298899,0.0758022150000761,0.09078259999660077,N/A
p4_sum_array_pairs,prompt_5,41,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",100000,1.1454975999949966,1.1694439770000462,1.2060225999957765,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        if arg2 - num in dictionary:\n            count += dictionary[arg2 - num]\n        dictionary[num] = dictionary.get(num, 0) + 1\n    return count']",1000,0.006528600002638996,0.006917763999736053,0.008636099999421276,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        if arg2 - num in dictionary:\n            count += dictionary[arg2 - num]\n        dictionary[num] = dictionary.get(num, 0) + 1\n    return count']",10000,0.07043479999992996,0.07360645099994144,0.08312599999771919,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        if arg2 - num in dictionary:\n            count += dictionary[arg2 - num]\n        dictionary[num] = dictionary.get(num, 0) + 1\n    return count']",100000,1.121528000003309,1.1511013269997783,1.1833652999994229,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0067446999964886345,0.007108219000001554,0.008556500004488043,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.072699600001215,0.07673869600017497,0.09687649999978021,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1478279000002658,1.1712786230000347,1.210233199999493,N/A
p4_sum_array_pairs,prompt_5,44,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006741800003510434,0.007208622000107425,0.010154099996725563,N/A
p4_sum_array_pairs,prompt_5,44,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07275529999606078,0.07539817600030801,0.08223559999896679,N/A
p4_sum_array_pairs,prompt_5,44,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1396464000063133,1.1687450530003116,1.1977411999978358,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for number in arg1:\n        if arg2 - number in frequency_map:\n            count += frequency_map[arg2 - number]\n        frequency_map[number] = frequency_map.get(number, 0) + 1\n    return count']",1000,0.0065271999992546625,0.006847210999985691,0.007622299999638926,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for number in arg1:\n        if arg2 - number in frequency_map:\n            count += frequency_map[arg2 - number]\n        frequency_map[number] = frequency_map.get(number, 0) + 1\n    return count']",10000,0.07046969999646535,0.0732224899996072,0.08217249999870546,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for number in arg1:\n        if arg2 - number in frequency_map:\n            count += frequency_map[arg2 - number]\n        frequency_map[number] = frequency_map.get(number, 0) + 1\n    return count']",100000,1.1114378999991459,1.150749047999707,1.1954859999968903,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairCount = 0\n    for element in arg1:\n        residual = arg2 - element\n        if residual in hashTable:\n            pairCount += hashTable[residual]\n        hashTable[element] = hashTable.get(element, 0) + 1\n    return pairCount']",1000,0.006776100002753083,0.007098965000041062,0.008970000002591405,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairCount = 0\n    for element in arg1:\n        residual = arg2 - element\n        if residual in hashTable:\n            pairCount += hashTable[residual]\n        hashTable[element] = hashTable.get(element, 0) + 1\n    return pairCount']",10000,0.0726827999969828,0.07586828700026672,0.08118049999757204,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairCount = 0\n    for element in arg1:\n        residual = arg2 - element\n        if residual in hashTable:\n            pairCount += hashTable[residual]\n        hashTable[element] = hashTable.get(element, 0) + 1\n    return pairCount']",100000,1.144806399999652,1.165865604000137,1.2030974000008428,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    diffs = set()\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if num in diffs:\n            pair_count += 1\n        else:\n            diffs.add(diff)\n    return pair_count']",1000,0.00453929999639513,0.004933117000327911,0.007544500003859866,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    diffs = set()\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if num in diffs:\n            pair_count += 1\n        else:\n            diffs.add(diff)\n    return pair_count']",10000,0.06121960000018589,0.0638890709997213,0.07057069999427767,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    diffs = set()\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if num in diffs:\n            pair_count += 1\n        else:\n            diffs.add(diff)\n    return pair_count']",100000,0.9239964000007603,0.9473637000000599,1.0057193000029656,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",1000,0.006764699995983392,0.007098259999838774,0.008478599993395619,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",10000,0.0723680000010063,0.0749130390000937,0.08002670000132639,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[number] = hash_map.get(number, 0) + 1\n    return pair_count']",100000,1.1431349999984377,1.1680303060004371,1.2069874000007985,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    ht = {}\n    pairs_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in ht:\n            pairs_count += ht[difference]\n        if i in ht:\n            ht[i] += 1\n        else:\n            ht[i] = 1\n    return pairs_count']",1000,0.006135899995570071,0.006588004999430268,0.008380400002351962,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    ht = {}\n    pairs_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in ht:\n            pairs_count += ht[difference]\n        if i in ht:\n            ht[i] += 1\n        else:\n            ht[i] = 1\n    return pairs_count']",10000,0.06706599999597529,0.07006514199958475,0.07632509999530157,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    ht = {}\n    pairs_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in ht:\n            pairs_count += ht[difference]\n        if i in ht:\n            ht[i] += 1\n        else:\n            ht[i] = 1\n    return pairs_count']",100000,1.0860787999990862,1.1275871120000374,1.3133702000050107,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for i in arg1:\n        difference = arg2 - i\n        if difference in dict:\n            count += dict[difference]\n        dict[i] = dict.get(i, 0) + 1\n    return count']",1000,0.0067775999996229075,0.007214975999668241,0.007780200001434423,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for i in arg1:\n        difference = arg2 - i\n        if difference in dict:\n            count += dict[difference]\n        dict[i] = dict.get(i, 0) + 1\n    return count']",10000,0.07376899999508169,0.07616392199983238,0.09551920000376413,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    count = 0\n    dict = {}\n    for i in arg1:\n        difference = arg2 - i\n        if difference in dict:\n            count += dict[difference]\n        dict[i] = dict.get(i, 0) + 1\n    return count']",100000,1.1428776000029757,1.1943491650005307,1.3332898000007845,N/A
p4_sum_array_pairs,prompt_5,51,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    lookup = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += lookup[arg2 - num]\n        lookup[num] += 1\n    return pairs']",1000,0.013993200002005324,0.014707359000240103,0.015398399998957757,N/A
p4_sum_array_pairs,prompt_5,51,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    lookup = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += lookup[arg2 - num]\n        lookup[num] += 1\n    return pairs']",10000,0.137093500001356,0.14039585399994395,0.17108610000286717,N/A
p4_sum_array_pairs,prompt_5,51,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    lookup = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += lookup[arg2 - num]\n        lookup[num] += 1\n    return pairs']",100000,2.2236827000015182,2.301371760999973,2.443856300000334,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.006973600000492297,0.007268801000027452,0.012072999998054001,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07336450000002515,0.07556851900029869,0.09116180000273744,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counter:\n            pair_count += counter[complement]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.1296519000025,1.1914170800003194,1.356481899994833,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += seen_numbers[complement]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",1000,0.006755499998689629,0.0071102450005128045,0.007849300003726967,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += seen_numbers[complement]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",10000,0.07311240000126418,0.07543456199942739,0.09789839999575634,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += seen_numbers[complement]\n        seen_numbers[num] = seen_numbers.get(num, 0) + 1\n    return pair_count']",100000,1.1317928999997093,1.180669681000072,1.3413609000053839,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in my_dict:\n            count += 1\n        else:\n            my_dict[num] = None\n    return count']",1000,0.005223000000114553,0.005469437999781803,0.005775700003141537,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in my_dict:\n            count += 1\n        else:\n            my_dict[num] = None\n    return count']",10000,0.057889200004865415,0.05959055199949944,0.07380679999914719,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    my_dict = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in my_dict:\n            count += 1\n        else:\n            my_dict[num] = None\n    return count']",100000,0.9404185999956098,0.9789294010002777,1.0749561999982689,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs.append((num, complement))\n        else:\n            complements[num] = True\n    return pairs']",1000,0.005396599997766316,0.00551235299979453,0.00579749999451451,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs.append((num, complement))\n        else:\n            complements[num] = True\n    return pairs']",10000,0.05916810000053374,0.06008670300027006,0.07710470000165515,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    complements = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs.append((num, complement))\n        else:\n            complements[num] = True\n    return pairs']",100000,0.9511519999941811,0.9909100129998842,1.124389799995697,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in dict_counts:\n            pair_count += dict_counts[complement]\n        dict_counts[i] = dict_counts.get(i, 0) + 1\n    return pair_count']",1000,0.007003300001088064,0.0071414509998430735,0.007415000000037253,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in dict_counts:\n            pair_count += dict_counts[complement]\n        dict_counts[i] = dict_counts.get(i, 0) + 1\n    return pair_count']",10000,0.07477729999664007,0.07618643200061342,0.09649389999685809,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in dict_counts:\n            pair_count += dict_counts[complement]\n        dict_counts[i] = dict_counts.get(i, 0) + 1\n    return pair_count']",100000,1.146598899998935,1.1781589179996808,1.2372761000005994,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006335899997793604,0.006555299999963609,0.0096246000030078,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06936770000174874,0.07038427299929026,0.08841579999716487,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = dict()\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.0911276000042562,1.1265787350000027,1.2115698999987217,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_found = []\n    for elem in arg1:\n        complement = arg2 - elem\n        if dict_counts.get(complement, 0) > 0:\n            pairs_found.append((elem, complement))\n            dict_counts[complement] -= 1\n        else:\n            dict_counts[elem] = dict_counts.get(elem, 0) + 1\n    return pairs_found']",1000,0.007546900000306778,0.007715196999706677,0.008075899997493252,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_found = []\n    for elem in arg1:\n        complement = arg2 - elem\n        if dict_counts.get(complement, 0) > 0:\n            pairs_found.append((elem, complement))\n            dict_counts[complement] -= 1\n        else:\n            dict_counts[elem] = dict_counts.get(elem, 0) + 1\n    return pairs_found']",10000,0.07989209999504965,0.08149186700007703,0.0963938999993843,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    dict_counts = {}\n    pairs_found = []\n    for elem in arg1:\n        complement = arg2 - elem\n        if dict_counts.get(complement, 0) > 0:\n            pairs_found.append((elem, complement))\n            dict_counts[complement] -= 1\n        else:\n            dict_counts[elem] = dict_counts.get(elem, 0) + 1\n    return pairs_found']",100000,1.224596100000781,1.2751051900004677,1.3964862000066205,N/A
p4_sum_array_pairs,prompt_5,59,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = Counter(arg1)\n    twice_count = 0\n    for num in arg1:\n        twice_count += count_map.get(arg2 - num, 0)\n        if arg2 - num == num:\n            twice_count -= 1\n    return twice_count // 2']",1000,0.009272299997974187,0.009447726000071271,0.010397599995485507,N/A
p4_sum_array_pairs,prompt_5,59,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = Counter(arg1)\n    twice_count = 0\n    for num in arg1:\n        twice_count += count_map.get(arg2 - num, 0)\n        if arg2 - num == num:\n            twice_count -= 1\n    return twice_count // 2']",10000,0.09610090000205673,0.09872707600006833,0.11187790000258246,N/A
p4_sum_array_pairs,prompt_5,59,"['from typing import List\nfrom collections import Counter\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_map = Counter(arg1)\n    twice_count = 0\n    for num in arg1:\n        twice_count += count_map.get(arg2 - num, 0)\n        if arg2 - num == num:\n            twice_count -= 1\n    return twice_count // 2']",100000,1.348978799993347,1.3832639449999988,1.468042799999239,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in seen_dict:\n            count += 1\n        else:\n            seen_dict[num] = 1\n    return count']",1000,0.005322400000295602,0.005463852000029874,0.0056894999943324365,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in seen_dict:\n            count += 1\n        else:\n            seen_dict[num] = 1\n    return count']",10000,0.058085899996513035,0.059436573000130014,0.06554719999985537,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_dict = {}\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in seen_dict:\n            count += 1\n        else:\n            seen_dict[num] = 1\n    return count']",100000,0.9305348999987473,0.9490360740003961,0.9729366000028676,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_set = set()\n    for current_num in arg1:\n        required_val = arg2 - current_num\n        if required_val in num_set:\n            pair_count += 1\n        else:\n            num_set.add(current_num)\n    return pair_count']",1000,0.004529099998762831,0.00471409300029336,0.005383400006394368,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_set = set()\n    for current_num in arg1:\n        required_val = arg2 - current_num\n        if required_val in num_set:\n            pair_count += 1\n        else:\n            num_set.add(current_num)\n    return pair_count']",10000,0.055705099999613594,0.057193746999982975,0.06107709999923827,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    num_set = set()\n    for current_num in arg1:\n        required_val = arg2 - current_num\n        if required_val in num_set:\n            pair_count += 1\n        else:\n            num_set.add(current_num)\n    return pair_count']",100000,0.8401010000015958,0.8522552290000022,0.8646347999965656,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    dict_elements = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_elements:\n            count_pairs += dict_elements[complement]\n        dict_elements[num] = dict_elements.get(num, 0) + 1\n    return count_pairs']",1000,0.0067478999990271404,0.007102486999792745,0.007681399998546112,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    dict_elements = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_elements:\n            count_pairs += dict_elements[complement]\n        dict_elements[num] = dict_elements.get(num, 0) + 1\n    return count_pairs']",10000,0.07359290000022156,0.07518690699987929,0.08093820000067353,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    dict_elements = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_elements:\n            count_pairs += dict_elements[complement]\n        dict_elements[num] = dict_elements.get(num, 0) + 1\n    return count_pairs']",100000,1.128197400001227,1.1532124239992845,1.194778299999598,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    number_dict = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in number_dict:\n            pairs_count += number_dict[complement]\n        number_dict[number] = number_dict.get(number, 0) + 1\n    return pairs_count']",1000,0.00700199999846518,0.0071891899996990105,0.008582300004491117,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    number_dict = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in number_dict:\n            pairs_count += number_dict[complement]\n        number_dict[number] = number_dict.get(number, 0) + 1\n    return pairs_count']",10000,0.07344159999775002,0.0755077620002703,0.08488070000021253,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    number_dict = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in number_dict:\n            pairs_count += number_dict[complement]\n        number_dict[number] = number_dict.get(number, 0) + 1\n    return pairs_count']",100000,1.1388294999997015,1.1584525970002142,1.190863999996509,N/A
p4_sum_array_pairs,prompt_5,64,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    dict = {}\n    res = []\n    for num in arg1:\n        target = arg2 - num\n        if target in dict:\n            res.append((target, num))\n        else:\n            dict[num] = 1\n    return res']",1000,0.005331300002580974,0.005516700000371202,0.0058645000026444905,N/A
p4_sum_array_pairs,prompt_5,64,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    dict = {}\n    res = []\n    for num in arg1:\n        target = arg2 - num\n        if target in dict:\n            res.append((target, num))\n        else:\n            dict[num] = 1\n    return res']",10000,0.05806119999760995,0.05970211699990614,0.06508880000183126,N/A
p4_sum_array_pairs,prompt_5,64,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    dict = {}\n    res = []\n    for num in arg1:\n        target = arg2 - num\n        if target in dict:\n            res.append((target, num))\n        else:\n            dict[num] = 1\n    return res']",100000,0.9507542999999714,0.9739485359996616,0.9940612999998848,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in pair_dict:\n            pair_count += pair_dict[complement]\n        pair_dict[arg1[i]] = pair_dict.get(arg1[i], 0) + 1\n    return pair_count']",1000,0.008064599998760968,0.008471777000158909,0.009065300000656862,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in pair_dict:\n            pair_count += pair_dict[complement]\n        pair_dict[arg1[i]] = pair_dict.get(arg1[i], 0) + 1\n    return pair_count']",10000,0.08650149999448331,0.08911590300005628,0.10160180000093533,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pair_count = 0\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in pair_dict:\n            pair_count += pair_dict[complement]\n        pair_dict[arg1[i]] = pair_dict.get(arg1[i], 0) + 1\n    return pair_count']",100000,1.2710033999974257,1.2874904409996817,1.3147033999994164,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006776199996238574,0.007172541999971145,0.00772099999448983,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07352759999776026,0.07530365699989489,0.08095820000016829,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.138701999996556,1.1563538250002603,1.1802642000038759,N/A
p4_sum_array_pairs,prompt_5,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",1000,0.00672130000020843,0.007066416999878129,0.0074617999998736195,N/A
p4_sum_array_pairs,prompt_5,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",10000,0.0734701999972458,0.07509104800003115,0.08013780000328552,N/A
p4_sum_array_pairs,prompt_5,67,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] = counts.get(num, 0) + 1\n    return pair_count']",100000,1.1192517000017688,1.1486283860001276,1.1658051000049454,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    pairs = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            count += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return count']",1000,0.006729000000632368,0.0070652110002993145,0.008422900005825795,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    pairs = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            count += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return count']",10000,0.07202949999918928,0.07358470300023327,0.07996879999700468,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    pairs = {}\n    count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in pairs:\n            count += pairs[difference]\n        pairs[num] = pairs.get(num, 0) + 1\n    return count']",100000,1.121948899999552,1.1525726479994773,1.1745655999984592,N/A
p4_sum_array_pairs,prompt_5,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dictionary = {}\n    counter = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in dictionary:\n            counter += dictionary[complement]\n        dictionary[element] = dictionary.get(element, 0) + 1\n    return counter']",1000,0.006752900000719819,0.007104441999981646,0.00881919999665115,N/A
p4_sum_array_pairs,prompt_5,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dictionary = {}\n    counter = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in dictionary:\n            counter += dictionary[complement]\n        dictionary[element] = dictionary.get(element, 0) + 1\n    return counter']",10000,0.07342040000366978,0.07514018499983649,0.08119820000138134,N/A
p4_sum_array_pairs,prompt_5,69,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    dictionary = {}\n    counter = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in dictionary:\n            counter += dictionary[complement]\n        dictionary[element] = dictionary.get(element, 0) + 1\n    return counter']",100000,1.1342585000020335,1.1536673719999089,1.1715467999965767,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1: list, arg2: int) -> int:\n    int_dict = {}\n    pair_counter = 0\n    for integer in arg1:\n        difference = arg2 - integer\n        if difference in int_dict:\n            pair_counter += int_dict[difference]\n        if integer in int_dict:\n            int_dict[integer] += 1\n        else:\n            int_dict[integer] = 1\n    return pair_counter']",1000,0.006206599995493889,0.00654301500049769,0.00759920000564307,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1: list, arg2: int) -> int:\n    int_dict = {}\n    pair_counter = 0\n    for integer in arg1:\n        difference = arg2 - integer\n        if difference in int_dict:\n            pair_counter += int_dict[difference]\n        if integer in int_dict:\n            int_dict[integer] += 1\n        else:\n            int_dict[integer] = 1\n    return pair_counter']",10000,0.06795010000496404,0.06985879200030468,0.07249289999890607,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1: list, arg2: int) -> int:\n    int_dict = {}\n    pair_counter = 0\n    for integer in arg1:\n        difference = arg2 - integer\n        if difference in int_dict:\n            pair_counter += int_dict[difference]\n        if integer in int_dict:\n            int_dict[integer] += 1\n        else:\n            int_dict[integer] = 1\n    return pair_counter']",100000,1.0848010999980033,1.1012990179999178,1.1263458999965223,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    counter = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            counter += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",1000,0.006786000005376991,0.007058120000510826,0.007813500000338536,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    counter = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            counter += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",10000,0.07348510000156239,0.07497745500055317,0.07721379999566125,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    counter = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            counter += num_dict[complement]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return counter']",100000,1.1334912000020267,1.155108072999501,1.1847300000008545,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((num, complement))\n        else:\n            hash_map[num] = None\n    return pairs']",1000,0.005237999997916631,0.005499445000386913,0.006233400003111456,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((num, complement))\n        else:\n            hash_map[num] = None\n    return pairs']",10000,0.05806989999837242,0.05950705300005211,0.06181749999814201,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs.append((num, complement))\n        else:\n            hash_map[num] = None\n    return pairs']",100000,0.9535477999961586,0.9779711879999377,1.0221927000020514,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    counter = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_numbers:\n            counter += seen_numbers[complement]\n        if number in seen_numbers:\n            seen_numbers[number] += 1\n        else:\n            seen_numbers[number] = 1\n    return counter']",1000,0.006144500002847053,0.006446292999680736,0.009068500003195368,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    counter = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_numbers:\n            counter += seen_numbers[complement]\n        if number in seen_numbers:\n            seen_numbers[number] += 1\n        else:\n            seen_numbers[number] = 1\n    return counter']",10000,0.06675279999763006,0.0687527469998895,0.07788309999887133,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    seen_numbers = {}\n    counter = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_numbers:\n            counter += seen_numbers[complement]\n        if number in seen_numbers:\n            seen_numbers[number] += 1\n        else:\n            seen_numbers[number] = 1\n    return counter']",100000,1.0672092999957385,1.0903960090001783,1.1298652999976184,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    result = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            result.append((num, arg2 - num))\n        else:\n            num_dict[num] = 1\n    return result']",1000,0.004927499998302665,0.005183026000158861,0.005585999999311753,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    result = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            result.append((num, arg2 - num))\n        else:\n            num_dict[num] = 1\n    return result']",10000,0.05472790000203531,0.056023282000169275,0.06416159999935189,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    result = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            result.append((num, arg2 - num))\n        else:\n            num_dict[num] = 1\n    return result']",100000,0.9182637999983854,0.9506415089999791,0.9724060000007739,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    complement_tracker = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_tracker:\n            counter += 1\n        complement_tracker[num] = 1\n    return counter\npass']",1000,0.0052426000038394704,0.005489077999882284,0.005888699997740332,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    complement_tracker = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_tracker:\n            counter += 1\n        complement_tracker[num] = 1\n    return counter\npass']",10000,0.057575200000428595,0.05894841200075462,0.06316940000397153,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    complement_tracker = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_tracker:\n            counter += 1\n        complement_tracker[num] = 1\n    return counter\npass']",100000,0.9515492999998969,0.9662128609997308,0.9884438000008231,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",1000,0.006140099998447113,0.00666581200028304,0.008938400002080016,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",10000,0.06840179999562679,0.07047110199986491,0.07957900000474183,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",100000,1.070096299998113,1.0949982880004245,1.1331071999957203,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    counter = {}\n    pairsCount = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in counter:\n            pairsCount += counter[compliment]\n        counter[num] = counter.get(num, 0) + 1\n    return pairsCount']",1000,0.006797599999117665,0.0071163420005177615,0.007688899997447152,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    counter = {}\n    pairsCount = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in counter:\n            pairsCount += counter[compliment]\n        counter[num] = counter.get(num, 0) + 1\n    return pairsCount']",10000,0.07312579999415902,0.07471416000007594,0.08038730000407668,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    counter = {}\n    pairsCount = 0\n    for num in arg1:\n        compliment = arg2 - num\n        if compliment in counter:\n            pairsCount += counter[compliment]\n        counter[num] = counter.get(num, 0) + 1\n    return pairsCount']",100000,1.1336879000009503,1.1528921610002727,1.1912522000056924,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    number_map = {}\n    total_pairs = 0\n    for number in arg1:\n        pair = arg2 - number\n        if pair in number_map:\n            total_pairs += number_map[pair]\n        number_map[number] = number_map.get(number, 0) + 1\n    return total_pairs']",1000,0.00682240000605816,0.007145084000003407,0.009128099998633843,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    number_map = {}\n    total_pairs = 0\n    for number in arg1:\n        pair = arg2 - number\n        if pair in number_map:\n            total_pairs += number_map[pair]\n        number_map[number] = number_map.get(number, 0) + 1\n    return total_pairs']",10000,0.07363859999895794,0.07588740599996527,0.0821317999943858,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    number_map = {}\n    total_pairs = 0\n    for number in arg1:\n        pair = arg2 - number\n        if pair in number_map:\n            total_pairs += number_map[pair]\n        number_map[number] = number_map.get(number, 0) + 1\n    return total_pairs']",100000,1.1361851999972714,1.1781792830002087,1.7476143000021693,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    counter = 0\n    dict_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_map:\n            counter += dict_map[complement]\n        dict_map[num] = dict_map.get(num, 0) + 1\n    return counter']",1000,0.006734100003086496,0.007216710000066086,0.009248999995179474,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    counter = 0\n    dict_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_map:\n            counter += dict_map[complement]\n        dict_map[num] = dict_map.get(num, 0) + 1\n    return counter']",10000,0.07270489999791607,0.07551858499988157,0.08878670000558486,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    counter = 0\n    dict_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dict_map:\n            counter += dict_map[complement]\n        dict_map[num] = dict_map.get(num, 0) + 1\n    return counter']",100000,1.1294266000040807,1.1589088430002448,1.2024287000022014,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arr, target_sum):\n    elements_dict = {}\n    counter = 0\n    for elem in arr:\n        diff = target_sum - elem\n        if diff in elements_dict:\n            counter += elements_dict[diff]\n        elements_dict[elem] = elements_dict.get(elem, 0) + 1\n    return counter']",1000,0.0067589999962365255,0.007226407999987714,0.014612099999794737,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arr, target_sum):\n    elements_dict = {}\n    counter = 0\n    for elem in arr:\n        diff = target_sum - elem\n        if diff in elements_dict:\n            counter += elements_dict[diff]\n        elements_dict[elem] = elements_dict.get(elem, 0) + 1\n    return counter']",10000,0.07241929999872809,0.07533646300013061,0.08257499999308493,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arr, target_sum):\n    elements_dict = {}\n    counter = 0\n    for elem in arr:\n        diff = target_sum - elem\n        if diff in elements_dict:\n            counter += elements_dict[diff]\n        elements_dict[elem] = elements_dict.get(elem, 0) + 1\n    return counter']",100000,1.1294460999997682,1.1593580629999634,1.199566200004483,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in num_dict:\n            count += num_dict[diff]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",1000,0.00671419999707723,0.007172344999780762,0.010762300000351388,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in num_dict:\n            count += num_dict[diff]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",10000,0.07249429999501444,0.07565376299993659,0.08715679999295389,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in num_dict:\n            count += num_dict[diff]\n        num_dict[num] = num_dict.get(num, 0) + 1\n    return count']",100000,1.139993199998571,1.1614237429999776,1.1944717999940622,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in countDict:\n            pairCount += countDict[complement]\n        if num in countDict:\n            countDict[num] += 1\n        else:\n            countDict[num] = 1\n    return pairCount']",1000,0.006137000003946014,0.006582005999589456,0.009214400000928435,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in countDict:\n            pairCount += countDict[complement]\n        if num in countDict:\n            countDict[num] += 1\n        else:\n            countDict[num] = 1\n    return pairCount']",10000,0.06793119999929331,0.0700573059997987,0.08303719999821624,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    countDict = {}\n    pairCount = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in countDict:\n            pairCount += countDict[complement]\n        if num in countDict:\n            countDict[num] += 1\n        else:\n            countDict[num] = 1\n    return pairCount']",100000,1.0852997000038158,1.1070560649997787,1.168494900004589,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs_count']",1000,0.006731999994372018,0.007157170999635127,0.009972199994081166,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs_count']",10000,0.0725051000044914,0.07571030499966583,0.08758300000044983,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs_count']",100000,1.133550099999411,1.1617295449996163,1.1950044999975944,N/A
p4_sum_array_pairs,prompt_5,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006724799997755326,0.007243510000334936,0.01116829999955371,N/A
p4_sum_array_pairs,prompt_5,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07283840000309283,0.07599992499999644,0.09089049999602139,N/A
p4_sum_array_pairs,prompt_5,84,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1382319999975152,1.1681448470001488,1.2409557999999379,N/A
p4_sum_array_pairs,prompt_5,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += freq.get(complement, 0)\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.007471600001736078,0.007868140999780735,0.008831300001475029,N/A
p4_sum_array_pairs,prompt_5,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += freq.get(complement, 0)\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07956040000135545,0.08265762300034112,0.09657350000634324,N/A
p4_sum_array_pairs,prompt_5,85,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += freq.get(complement, 0)\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.2155291000017314,1.2425047859999905,1.3028043000012985,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    freq_dict = dict()\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in freq_dict:\n            pair_count += freq_dict[difference]\n        freq_dict[num] = freq_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006813699998019729,0.0071873840001353525,0.010946900001727045,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    freq_dict = dict()\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in freq_dict:\n            pair_count += freq_dict[difference]\n        freq_dict[num] = freq_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07219800000166288,0.0750108310001815,0.08302410000032978,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    freq_dict = dict()\n    pair_count = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in freq_dict:\n            pair_count += freq_dict[difference]\n        freq_dict[num] = freq_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1323062000010395,1.1585041330000967,1.1878289000014775,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen_dict:\n            pair_count += seen_dict[diff]\n        seen_dict[num] = seen_dict.get(num, 0) + 1\n    return pair_count']",1000,0.006739999997080304,0.007201167000021087,0.010174900002311915,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen_dict:\n            pair_count += seen_dict[diff]\n        seen_dict[num] = seen_dict.get(num, 0) + 1\n    return pair_count']",10000,0.07286210000165738,0.07593470199994044,0.08560900000156835,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen_dict:\n            pair_count += seen_dict[diff]\n        seen_dict[num] = seen_dict.get(num, 0) + 1\n    return pair_count']",100000,1.1246160000009695,1.1649488309997833,1.2058474000004935,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pair_count += count_dict[diff]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.0060904999991180375,0.006515922999824397,0.011628200001723599,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pair_count += count_dict[diff]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.06693789999553701,0.06967183100008696,0.08020969999779481,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_dict:\n            pair_count += count_dict[diff]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.074973399998271,1.1022701090002374,1.131737499999872,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for n in arg1:\n        difference = arg2 - n\n        if difference in count_dict:\n            pair_count += count_dict[difference]\n        count_dict[n] = count_dict.get(n, 0) + 1\n    return pair_count']",1000,0.006726899999193847,0.0070940200000040934,0.01149269999586977,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for n in arg1:\n        difference = arg2 - n\n        if difference in count_dict:\n            pair_count += count_dict[difference]\n        count_dict[n] = count_dict.get(n, 0) + 1\n    return pair_count']",10000,0.07225139999354724,0.07482489099951635,0.08300119999330491,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for n in arg1:\n        difference = arg2 - n\n        if difference in count_dict:\n            pair_count += count_dict[difference]\n        count_dict[n] = count_dict.get(n, 0) + 1\n    return pair_count']",100000,1.1373912999988534,1.163347634000238,1.191835900004662,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1: list[int], arg2: int) -> int:\n    hash = {}\n    pairs = 0\n    for elem in arg1:\n        diff = arg2 - elem\n        if diff in hash:\n            pairs += hash[diff]\n        hash[elem] = hash.get(elem, 0) + 1\n    return pairs']",1000,0.006752599998435471,0.007264311999824713,0.010192399997322354,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1: list[int], arg2: int) -> int:\n    hash = {}\n    pairs = 0\n    for elem in arg1:\n        diff = arg2 - elem\n        if diff in hash:\n            pairs += hash[diff]\n        hash[elem] = hash.get(elem, 0) + 1\n    return pairs']",10000,0.07299300000158837,0.07615637900002184,0.08245590000296943,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1: list[int], arg2: int) -> int:\n    hash = {}\n    pairs = 0\n    for elem in arg1:\n        diff = arg2 - elem\n        if diff in hash:\n            pairs += hash[diff]\n        hash[elem] = hash.get(elem, 0) + 1\n    return pairs']",100000,1.1390420999960043,1.1632261739998648,1.2315024999988964,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    """"""\n    A function to count pairs with given sum\n\n    Args:\n    arg1 : list   : a list of integers\n    arg2 : integer: sum\n\n    Returns:\n    integer - number of pairs\n    """"""\n    visited = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            count += 1\n        else:\n            visited.add(num)\n    return count']",1000,0.004490700004680548,0.0048413810000784,0.008844099997077137,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    """"""\n    A function to count pairs with given sum\n\n    Args:\n    arg1 : list   : a list of integers\n    arg2 : integer: sum\n\n    Returns:\n    integer - number of pairs\n    """"""\n    visited = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            count += 1\n        else:\n            visited.add(num)\n    return count']",10000,0.054863199999090284,0.057958777000239936,0.06690399999934016,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    """"""\n    A function to count pairs with given sum\n\n    Args:\n    arg1 : list   : a list of integers\n    arg2 : integer: sum\n\n    Returns:\n    integer - number of pairs\n    """"""\n    visited = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            count += 1\n        else:\n            visited.add(num)\n    return count']",100000,0.8393528000015067,0.8577242549994843,0.8822978000025614,N/A
p4_sum_array_pairs,prompt_5,92,"[""def funcImp(arg1, arg2):\n    if not (isinstance(arg1, list) and isinstance(arg2, int)):\n        raise ValueError('arg1 must be a list and arg2 must be an integer.')\n    if any((not isinstance(i, int) for i in arg1)):\n        raise ValueError('All elements in arg1 list must be integers.')\n    count = 0\n    hash_table = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_table:\n            count += hash_table[complement]\n        if elem in hash_table:\n            hash_table[elem] += 1\n        else:\n            hash_table[elem] = 1\n    return count""]",1000,0.008970800001407042,0.009436931000382174,0.01141460000508232,N/A
p4_sum_array_pairs,prompt_5,92,"[""def funcImp(arg1, arg2):\n    if not (isinstance(arg1, list) and isinstance(arg2, int)):\n        raise ValueError('arg1 must be a list and arg2 must be an integer.')\n    if any((not isinstance(i, int) for i in arg1)):\n        raise ValueError('All elements in arg1 list must be integers.')\n    count = 0\n    hash_table = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_table:\n            count += hash_table[complement]\n        if elem in hash_table:\n            hash_table[elem] += 1\n        else:\n            hash_table[elem] = 1\n    return count""]",10000,0.09395319999748608,0.09797748400022101,0.10749550000036834,N/A
p4_sum_array_pairs,prompt_5,92,"[""def funcImp(arg1, arg2):\n    if not (isinstance(arg1, list) and isinstance(arg2, int)):\n        raise ValueError('arg1 must be a list and arg2 must be an integer.')\n    if any((not isinstance(i, int) for i in arg1)):\n        raise ValueError('All elements in arg1 list must be integers.')\n    count = 0\n    hash_table = dict()\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in hash_table:\n            count += hash_table[complement]\n        if elem in hash_table:\n            hash_table[elem] += 1\n        else:\n            hash_table[elem] = 1\n    return count""]",100000,1.3618296999993618,1.389793802000131,1.421526799997082,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    pair_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in dict_nums:\n            pair_count += dict_nums[counterpart]\n        dict_nums[num] = dict_nums.get(num, 0) + 1\n    return pair_count']",1000,0.006809400001657195,0.007152134999996633,0.008185300001059659,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    pair_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in dict_nums:\n            pair_count += dict_nums[counterpart]\n        dict_nums[num] = dict_nums.get(num, 0) + 1\n    return pair_count']",10000,0.07270789999893168,0.07606656999982078,0.08622769999783486,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    dict_nums = {}\n    pair_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in dict_nums:\n            pair_count += dict_nums[counterpart]\n        dict_nums[num] = dict_nums.get(num, 0) + 1\n    return pair_count']",100000,1.1473027000029106,1.1653084009995656,1.190575099994021,N/A
p4_sum_array_pairs,prompt_5,94,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",1000,0.006826299999374896,0.007458359000156634,0.0161692999972729,N/A
p4_sum_array_pairs,prompt_5,94,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",10000,0.07253839999611955,0.07611015199967369,0.08193529999698512,N/A
p4_sum_array_pairs,prompt_5,94,"['def funcImp(arg1, arg2):\n    seen = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in seen:\n            pairs_count += seen[diff]\n        seen[num] = seen.get(num, 0) + 1\n    return pairs_count']",100000,1.134122199997364,1.158937900000601,1.204345199999807,N/A
p4_sum_array_pairs,prompt_5,95,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    seen_numbers = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += 1\n            seen_numbers[complement] -= 1\n        else:\n            seen_numbers[num] += 1\n    return pair_count']",1000,0.010276000000885688,0.010904319000474061,0.01421239999763202,N/A
p4_sum_array_pairs,prompt_5,95,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    seen_numbers = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += 1\n            seen_numbers[complement] -= 1\n        else:\n            seen_numbers[num] += 1\n    return pair_count']",10000,0.1032204000002821,0.10814772200028529,0.11757260000013048,N/A
p4_sum_array_pairs,prompt_5,95,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    seen_numbers = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            pair_count += 1\n            seen_numbers[complement] -= 1\n        else:\n            seen_numbers[num] += 1\n    return pair_count']",100000,1.4237257999993744,1.4566306320000877,1.521893099998124,N/A
p4_sum_array_pairs,prompt_5,96,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    sum_pairs_dict = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in sum_pairs_dict:\n            counter += sum_pairs_dict[difference]\n        sum_pairs_dict[num] = sum_pairs_dict.get(num, 0) + 1\n    return counter']",1000,0.0067963999972562306,0.007185983000163106,0.009182500005408656,N/A
p4_sum_array_pairs,prompt_5,96,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    sum_pairs_dict = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in sum_pairs_dict:\n            counter += sum_pairs_dict[difference]\n        sum_pairs_dict[num] = sum_pairs_dict.get(num, 0) + 1\n    return counter']",10000,0.07274390000384301,0.07510219599986158,0.08471940000163158,N/A
p4_sum_array_pairs,prompt_5,96,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    sum_pairs_dict = {}\n    counter = 0\n    for num in arg1:\n        difference = arg2 - num\n        if difference in sum_pairs_dict:\n            counter += sum_pairs_dict[difference]\n        sum_pairs_dict[num] = sum_pairs_dict.get(num, 0) + 1\n    return counter']",100000,1.1392550000018673,1.1652026680000562,1.1915299000029336,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    element_diff_freq = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_diff_freq:\n            pair_count += element_diff_freq[complement]\n        element_diff_freq[i] = element_diff_freq.get(i, 0) + 1\n    return pair_count']",1000,0.006862300004286226,0.007244117999871378,0.00961000000097556,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    element_diff_freq = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_diff_freq:\n            pair_count += element_diff_freq[complement]\n        element_diff_freq[i] = element_diff_freq.get(i, 0) + 1\n    return pair_count']",10000,0.07288640000479063,0.07575581799996144,0.08649049999803538,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    element_diff_freq = {}\n    pair_count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in element_diff_freq:\n            pair_count += element_diff_freq[complement]\n        element_diff_freq[i] = element_diff_freq.get(i, 0) + 1\n    return pair_count']",100000,1.137076299994078,1.1599921349997748,1.1914690999983577,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    numDict = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numDict:\n            pairs += numDict[complement]\n        if num in numDict:\n            numDict[num] += 1\n        else:\n            numDict[num] = 1\n    return pairs']",1000,0.006136200005130377,0.006489732000190997,0.009148700002697296,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    numDict = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numDict:\n            pairs += numDict[complement]\n        if num in numDict:\n            numDict[num] += 1\n        else:\n            numDict[num] = 1\n    return pairs']",10000,0.06687719999899855,0.06971257899975171,0.07569890000013402,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    numDict = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numDict:\n            pairs += numDict[complement]\n        if num in numDict:\n            numDict[num] += 1\n        else:\n            numDict[num] = 1\n    return pairs']",100000,1.086760799997137,1.1105335640002887,1.1443352999995113,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    maps = dict()\n    pairs = list()\n    for i, num in enumerate(arg1):\n        complement = arg2 - num\n        if complement in maps:\n            pairs.append((complement, num))\n        else:\n            maps[num] = i\n    return pairs']",1000,0.006129000001237728,0.006435217000034754,0.007555399999546353,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    maps = dict()\n    pairs = list()\n    for i, num in enumerate(arg1):\n        complement = arg2 - num\n        if complement in maps:\n            pairs.append((complement, num))\n        else:\n            maps[num] = i\n    return pairs']",10000,0.06680169999890495,0.0696448270001565,0.07665740000084043,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    maps = dict()\n    pairs = list()\n    for i, num in enumerate(arg1):\n        complement = arg2 - num\n        if complement in maps:\n            pairs.append((complement, num))\n        else:\n            maps[num] = i\n    return pairs']",100000,1.0826175999973202,1.1277219490001154,1.1725568000038038,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            counter += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",1000,0.006762500001059379,0.007178901999868686,0.00824760000250535,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            counter += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",10000,0.07235870000295108,0.07499954300023091,0.0827553999988595,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    seen = {}\n    counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            counter += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return counter']",100000,1.1293356999958633,1.1615187809993222,1.195057099997939,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    pairs = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in dict_map:\n            pairs += dict_map[temp]\n        dict_map[arg1[i]] = dict_map.get(arg1[i], 0) + 1\n    return pairs']",1000,0.008078200000454672,0.00861689600002137,0.010600000001431908,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    pairs = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in dict_map:\n            pairs += dict_map[temp]\n        dict_map[arg1[i]] = dict_map.get(arg1[i], 0) + 1\n    return pairs']",10000,0.08546050000586547,0.08903108599974076,0.10272139999869978,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    dict_map = {}\n    pairs = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in dict_map:\n            pairs += dict_map[temp]\n        dict_map[arg1[i]] = dict_map.get(arg1[i], 0) + 1\n    return pairs']",100000,1.2695855999991181,1.2937207880005734,1.320119000003615,N/A
p4_sum_array_pairs,prompt_6,2,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.0066507000010460615,0.006949695000002976,0.008098600002995227,N/A
p4_sum_array_pairs,prompt_6,2,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07068249999429099,0.07388960300020699,0.0856677000047057,N/A
p4_sum_array_pairs,prompt_6,2,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.119251299998723,1.1461727039993275,1.1714821999994456,N/A
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006261900001845788,0.006554970999713987,0.008301599998958409,N/A
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06698299999698065,0.06934050200034107,0.07684169999993173,N/A
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0837977000046521,1.1051619329999811,1.1345471999957226,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",1000,0.006753500005288515,0.007197266999937711,0.012046099996950943,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",10000,0.07259489999705693,0.07588381299974571,0.08575679999921704,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pair_count']",100000,1.140713799999503,1.1612829680004506,1.200682800001232,N/A
p4_sum_array_pairs,prompt_6,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in pair_dict:\n            pair_count += pair_dict[arg2 - num]\n        pair_dict[num] += 1\n    return pair_count']",1000,0.010082100001454819,0.01069566300007864,0.016138999999384396,N/A
p4_sum_array_pairs,prompt_6,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in pair_dict:\n            pair_count += pair_dict[arg2 - num]\n        pair_dict[num] += 1\n    return pair_count']",10000,0.10206710000056773,0.10696862000026158,0.12644369999907212,N/A
p4_sum_array_pairs,prompt_6,5,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    pair_dict = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in pair_dict:\n            pair_count += pair_dict[arg2 - num]\n        pair_dict[num] += 1\n    return pair_count']",100000,1.452418900000339,1.489645769000199,1.5458525999929407,N/A
p4_sum_array_pairs,prompt_6,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    encountered_elements = {}\n    pairs_count = 0\n    for element in arg1:\n        complementary = arg2 - element\n        if complementary in encountered_elements:\n            pairs_count += encountered_elements[complementary]\n        if element in encountered_elements:\n            encountered_elements[element] += 1\n        else:\n            encountered_elements[element] = 1\n    return pairs_count']",1000,0.006147499996586703,0.006497444000269752,0.007282900005520787,N/A
p4_sum_array_pairs,prompt_6,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    encountered_elements = {}\n    pairs_count = 0\n    for element in arg1:\n        complementary = arg2 - element\n        if complementary in encountered_elements:\n            pairs_count += encountered_elements[complementary]\n        if element in encountered_elements:\n            encountered_elements[element] += 1\n        else:\n            encountered_elements[element] = 1\n    return pairs_count']",10000,0.0670590000008815,0.07007192900047812,0.08116980000340845,N/A
p4_sum_array_pairs,prompt_6,6,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    encountered_elements = {}\n    pairs_count = 0\n    for element in arg1:\n        complementary = arg2 - element\n        if complementary in encountered_elements:\n            pairs_count += encountered_elements[complementary]\n        if element in encountered_elements:\n            encountered_elements[element] += 1\n        else:\n            encountered_elements[element] = 1\n    return pairs_count']",100000,1.0789453000033973,1.110720845000178,1.1345600999993621,N/A
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n    seen_numbers = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            count += 1\n        seen_numbers.add(num)\n    return count']",1000,0.004444499994860962,0.004729215000334079,0.0063159999990602955,N/A
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n    seen_numbers = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            count += 1\n        seen_numbers.add(num)\n    return count']",10000,0.05481119999603834,0.058394565999624316,0.08230709999770625,N/A
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n    seen_numbers = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_numbers:\n            count += 1\n        seen_numbers.add(num)\n    return count']",100000,0.8509252000003471,0.8731445530000929,0.8958072000023094,N/A
p4_sum_array_pairs,prompt_6,8,"[""def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    if len(arg1) == 0:\n        raise Exception('Input list is empty')\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count""]",1000,0.006535900000017136,0.006972625999915181,0.010009199999331031,N/A
p4_sum_array_pairs,prompt_6,8,"[""def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    if len(arg1) == 0:\n        raise Exception('Input list is empty')\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count""]",10000,0.07089070000074571,0.07388437399968098,0.08215259999997215,N/A
p4_sum_array_pairs,prompt_6,8,"[""def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    if len(arg1) == 0:\n        raise Exception('Input list is empty')\n    for num in arg1:\n        if arg2 - num in freq:\n            count += freq[arg2 - num]\n        freq[num] = freq.get(num, 0) + 1\n    return count""]",100000,1.1094840000005206,1.1291093720001664,1.1566467999946326,N/A
p4_sum_array_pairs,prompt_6,9,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        diff = arg2 - i\n        if count_dict[diff]:\n            pair_count += count_dict[diff]\n        count_dict[i] += 1\n    return pair_count']",1000,0.014011899998877198,0.0145491329998913,0.016956200001004618,N/A
p4_sum_array_pairs,prompt_6,9,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        diff = arg2 - i\n        if count_dict[diff]:\n            pair_count += count_dict[diff]\n        count_dict[i] += 1\n    return pair_count']",10000,0.13835899999685353,0.14273683500003245,0.14971100000548176,N/A
p4_sum_array_pairs,prompt_6,9,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count_dict = defaultdict(int)\n    pair_count = 0\n    for i in arg1:\n        diff = arg2 - i\n        if count_dict[diff]:\n            pair_count += count_dict[diff]\n        count_dict[i] += 1\n    return pair_count']",100000,2.2062730999969062,2.264902762999918,2.2963081000052625,N/A
p4_sum_array_pairs,prompt_6,10,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hashMap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairs.append((num, arg2 - num))\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs']",1000,0.006581200002983678,0.006913370999900508,0.00735539999732282,N/A
p4_sum_array_pairs,prompt_6,10,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hashMap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairs.append((num, arg2 - num))\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs']",10000,0.07196229999681236,0.07363539699981629,0.07644240000081481,N/A
p4_sum_array_pairs,prompt_6,10,"['from typing import List, Tuple\n\ndef funcImp(arg1: List[int], arg2: int) -> List[Tuple[int, int]]:\n    hashMap = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in hashMap:\n            pairs.append((num, arg2 - num))\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs']",100000,1.138962700002594,1.159450756999795,1.1909597999983816,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    count_table = {}\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += count_table.get(complement, 0)\n        count_table[num] = count_table.get(num, 0) + 1\n    return count_pairs']",1000,0.0074844000046141446,0.007882657999871298,0.009869900000921916,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    count_table = {}\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += count_table.get(complement, 0)\n        count_table[num] = count_table.get(num, 0) + 1\n    return count_pairs']",10000,0.08081149999634363,0.08252392899958068,0.08823309999570483,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    count_table = {}\n    for num in arg1:\n        complement = arg2 - num\n        count_pairs += count_table.get(complement, 0)\n        count_table[num] = count_table.get(num, 0) + 1\n    return count_pairs']",100000,1.2098208000097657,1.230284732000655,1.2769360000093002,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006123300001490861,0.006449418000265723,0.0075748000090243295,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06658470000547823,0.06871468600045773,0.07481010000628885,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.0702416999993147,1.0921094080002514,1.1382272000046214,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_numbers = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            pair_count += 1\n        else:\n            seen_numbers.add(num)\n    return pair_count']",1000,0.004422900005010888,0.004635600000183331,0.0050537000061012805,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_numbers = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            pair_count += 1\n        else:\n            seen_numbers.add(num)\n    return pair_count']",10000,0.05433389999961946,0.05585968399958802,0.06328200000280049,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_numbers = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            pair_count += 1\n        else:\n            seen_numbers.add(num)\n    return pair_count']",100000,0.8288980000070296,0.8432459939995897,0.8768604999931995,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",1000,0.004490499995881692,0.004701343000342604,0.005872800000361167,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",10000,0.05535619999864139,0.05671437200027867,0.06075109999801498,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)']",100000,0.915243700001156,0.9391704629994638,0.9610237000015331,N/A
p4_sum_array_pairs,prompt_6,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in my_dict:\n            pair_count += my_dict[arg2 - i]\n        if i in my_dict:\n            my_dict[i] += 1\n        else:\n            my_dict[i] = 1\n    return pair_count']",1000,0.006054699988453649,0.006420774999132846,0.010200199991231784,N/A
p4_sum_array_pairs,prompt_6,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in my_dict:\n            pair_count += my_dict[arg2 - i]\n        if i in my_dict:\n            my_dict[i] += 1\n        else:\n            my_dict[i] = 1\n    return pair_count']",10000,0.06682700000237674,0.0681856660003541,0.07127559999935329,N/A
p4_sum_array_pairs,prompt_6,15,"['def funcImp(arg1: list, arg2: int) -> int:\n    my_dict = {}\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in my_dict:\n            pair_count += my_dict[arg2 - i]\n        if i in my_dict:\n            my_dict[i] += 1\n        else:\n            my_dict[i] = 1\n    return pair_count']",100000,1.0824068000074476,1.0987303820002126,1.1186943000066094,N/A
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006848499993793666,0.007118019999325043,0.0076246999960858375,N/A
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07323019999603275,0.07484266000043135,0.08076389999769162,N/A
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.1370456000004197,1.1561317739996593,1.1729670000058832,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006026000002748333,0.006326454999216366,0.007106099990778603,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.06639029999496415,0.06799329399946145,0.07272729999385774,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.0758143999992171,1.0926046210000642,1.1284554000012577,N/A
p4_sum_array_pairs,prompt_6,18,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count_pairs += hashmap[arg2 - num]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count_pairs']",1000,0.008784100005868822,0.009178937000979204,0.009862400009296834,N/A
p4_sum_array_pairs,prompt_6,18,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count_pairs += hashmap[arg2 - num]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count_pairs']",10000,0.09290710001369007,0.09437011600006372,0.09876039999653585,N/A
p4_sum_array_pairs,prompt_6,18,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count_pairs = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            count_pairs += hashmap[arg2 - num]\n        if num not in hashmap:\n            hashmap[num] = 0\n        hashmap[num] += 1\n    return count_pairs']",100000,1.3383601999958046,1.3547209999991174,1.3788980999961495,N/A
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.007689199992455542,0.00798933199926978,0.01011270000890363,N/A
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.08121560000290629,0.08350555700060795,0.08622530000866391,N/A
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1930991999979597,1.2247356810001657,1.2739004000031855,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            pair_count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return pair_count']",1000,0.006103699997765943,0.006401175000355579,0.0072589000046718866,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            pair_count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return pair_count']",10000,0.06665500000235625,0.06822684299942922,0.0785219999961555,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            pair_count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return pair_count']",100000,1.063150299989502,1.087378291999339,1.112569100005203,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    pairs_count = 0\n    elements_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in elements_dict:\n            pairs_count += 1\n        else:\n            elements_dict[elem] = 1\n    return pairs_count']",1000,0.005186399997910485,0.005449779000628041,0.005808199988678098,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    pairs_count = 0\n    elements_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in elements_dict:\n            pairs_count += 1\n        else:\n            elements_dict[elem] = 1\n    return pairs_count']",10000,0.05757689999882132,0.05912418600040837,0.06434139999328181,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    pairs_count = 0\n    elements_dict = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in elements_dict:\n            pairs_count += 1\n        else:\n            elements_dict[elem] = 1\n    return pairs_count']",100000,0.9297029000008479,0.9466991089997464,0.9771166999998968,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    pairs = 0\n    lookup = dict()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            pairs += lookup[diff]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs']",1000,0.006190000000060536,0.0064673730012145825,0.00798590001068078,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    pairs = 0\n    lookup = dict()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            pairs += lookup[diff]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs']",10000,0.06741560000227764,0.06938142800048809,0.07330799999181181,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    pairs = 0\n    lookup = dict()\n    for num in arg1:\n        diff = arg2 - num\n        if diff in lookup:\n            pairs += lookup[diff]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs']",100000,1.0680472000094596,1.095974577000161,1.1196035000029951,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    count = 0\n    for num in arg1:\n        rem = arg2 - num\n        if rem in hash_map:\n            count += hash_map[rem]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",1000,0.006787699996493757,0.007090889000537572,0.0075006999977631494,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    count = 0\n    for num in arg1:\n        rem = arg2 - num\n        if rem in hash_map:\n            count += hash_map[rem]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",10000,0.07340449999901466,0.07481131300097331,0.076771899999585,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    count = 0\n    for num in arg1:\n        rem = arg2 - num\n        if rem in hash_map:\n            count += hash_map[rem]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return count']",100000,1.1346702999871923,1.1547923949993857,1.1821198999969056,N/A
p4_sum_array_pairs,prompt_6,24,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in hashTable:\n            pairs += hashTable[arg2 - num]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairs']",1000,0.006548200006363913,0.006846050999884028,0.007801599989761598,N/A
p4_sum_array_pairs,prompt_6,24,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in hashTable:\n            pairs += hashTable[arg2 - num]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairs']",10000,0.07074710000597406,0.0728513929991459,0.08325159999367315,N/A
p4_sum_array_pairs,prompt_6,24,"['def funcImp(arg1, arg2):\n    hashTable = {}\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in hashTable:\n            pairs += hashTable[arg2 - num]\n        hashTable[num] = hashTable.get(num, 0) + 1\n    return pairs']",100000,1.1213709000003291,1.140915088000038,1.1659573999932036,N/A
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    count = 0\n    map = defaultdict(int)\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if map[complement]:\n            count += map[complement]\n        map[arg1[i]] += 1\n    return count\npass']",1000,0.015121800010092556,0.01576646299974527,0.017182499999762513,N/A
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    count = 0\n    map = defaultdict(int)\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if map[complement]:\n            count += map[complement]\n        map[arg1[i]] += 1\n    return count\npass']",10000,0.15103500000259373,0.15464834900034474,0.16561949999595527,N/A
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    from collections import defaultdict\n    count = 0\n    map = defaultdict(int)\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if map[complement]:\n            count += map[complement]\n        map[arg1[i]] += 1\n    return count\npass']",100000,2.3072645000065677,2.345096567000728,2.411615000004531,N/A
p4_sum_array_pairs,prompt_6,26,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    found_vals = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in found_vals:\n            pair_count += found_vals[complement]\n        if num in found_vals:\n            found_vals[num] += 1\n        else:\n            found_vals[num] = 1\n    return pair_count']",1000,0.006143200007500127,0.006472083999542519,0.010697400008211844,N/A
p4_sum_array_pairs,prompt_6,26,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    found_vals = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in found_vals:\n            pair_count += found_vals[complement]\n        if num in found_vals:\n            found_vals[num] += 1\n        else:\n            found_vals[num] = 1\n    return pair_count']",10000,0.06713359999412205,0.06892991100045037,0.07860140000411775,N/A
p4_sum_array_pairs,prompt_6,26,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    found_vals = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in found_vals:\n            pair_count += found_vals[complement]\n        if num in found_vals:\n            found_vals[num] += 1\n        else:\n            found_vals[num] = 1\n    return pair_count']",100000,1.0690302000002703,1.0862601599992194,1.107877999995253,N/A
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for i in arg1:\n        remaining = arg2 - i\n        if remaining in hash_table:\n            count += hash_table[remaining]\n        if i not in hash_table:\n            hash_table[i] = 0\n        hash_table[i] += 1\n    return count']",1000,0.00882290001027286,0.009333766000927425,0.010347000003093854,N/A
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for i in arg1:\n        remaining = arg2 - i\n        if remaining in hash_table:\n            count += hash_table[remaining]\n        if i not in hash_table:\n            hash_table[i] = 0\n        hash_table[i] += 1\n    return count']",10000,0.0928931999951601,0.09529689700051676,0.10037010000087321,N/A
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for i in arg1:\n        remaining = arg2 - i\n        if remaining in hash_table:\n            count += hash_table[remaining]\n        if i not in hash_table:\n            hash_table[i] = 0\n        hash_table[i] += 1\n    return count']",100000,1.3298770999972476,1.3528798029999598,1.385963399996399,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if num in seen:\n            count += seen[num]\n        if complement not in seen:\n            seen[complement] = 0\n        seen[complement] += 1\n    return count']",1000,0.00886900001205504,0.009315801000775536,0.010227899998426437,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if num in seen:\n            count += seen[num]\n        if complement not in seen:\n            seen[complement] = 0\n        seen[complement] += 1\n    return count']",10000,0.09337930000037886,0.09546614499922726,0.10134670000115875,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if num in seen:\n            count += seen[num]\n        if complement not in seen:\n            seen[complement] = 0\n        seen[complement] += 1\n    return count']",100000,1.38399919999938,1.4026865230005934,1.431432199999108,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    cnt = 0\n    m = dict()\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in m:\n            cnt += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return cnt']",1000,0.007993900013389066,0.008412025000725408,0.010462899997946806,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    cnt = 0\n    m = dict()\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in m:\n            cnt += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return cnt']",10000,0.0845573999977205,0.08664815000011003,0.09086789999855682,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    cnt = 0\n    m = dict()\n    for i in range(len(arg1)):\n        if arg2 - arg1[i] in m:\n            cnt += m[arg2 - arg1[i]]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return cnt']",100000,1.2501029999984894,1.2717933950001317,1.3082507000071928,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for item in arg1:\n        pair_count += freq_count.get(arg2 - item, 0)\n        freq_count[item] = freq_count.get(item, 0) + 1\n    return pair_count']",1000,0.007486000002245419,0.00783368199990946,0.00875100000121165,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for item in arg1:\n        pair_count += freq_count.get(arg2 - item, 0)\n        freq_count[item] = freq_count.get(item, 0) + 1\n    return pair_count']",10000,0.07986070000333712,0.08141099299959023,0.08727940000244416,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    freq_count = {}\n    pair_count = 0\n    for item in arg1:\n        pair_count += freq_count.get(arg2 - item, 0)\n        freq_count[item] = freq_count.get(item, 0) + 1\n    return pair_count']",100000,1.2144703999947524,1.2355036160004966,1.2631605000060517,N/A
p4_sum_array_pairs,prompt_6,31,"['from collections import Counter\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = Counter(arg1)\n    pairs_count = 0\n    for num in list(hash_map.keys()):\n        complement = arg2 - num\n        if complement in hash_map:\n            if num == complement:\n                pairs_count += hash_map[complement] * (hash_map[complement] - 1) // 2\n            else:\n                pairs_count += hash_map[num] * hash_map[complement]\n            del hash_map[complement]\n            if num in hash_map:\n                del hash_map[num]\n    return pairs_count']",1000,0.006818699999712408,0.007129282999230781,0.00787839999247808,N/A
p4_sum_array_pairs,prompt_6,31,"['from collections import Counter\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = Counter(arg1)\n    pairs_count = 0\n    for num in list(hash_map.keys()):\n        complement = arg2 - num\n        if complement in hash_map:\n            if num == complement:\n                pairs_count += hash_map[complement] * (hash_map[complement] - 1) // 2\n            else:\n                pairs_count += hash_map[num] * hash_map[complement]\n            del hash_map[complement]\n            if num in hash_map:\n                del hash_map[num]\n    return pairs_count']",10000,0.07467760000145063,0.07634077000024263,0.08127070000045933,N/A
p4_sum_array_pairs,prompt_6,31,"['from collections import Counter\nfrom typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_map = Counter(arg1)\n    pairs_count = 0\n    for num in list(hash_map.keys()):\n        complement = arg2 - num\n        if complement in hash_map:\n            if num == complement:\n                pairs_count += hash_map[complement] * (hash_map[complement] - 1) // 2\n            else:\n                pairs_count += hash_map[num] * hash_map[complement]\n            del hash_map[complement]\n            if num in hash_map:\n                del hash_map[num]\n    return pairs_count']",100000,1.2522622999968007,1.2915976650011727,1.3438100000057602,N/A
p4_sum_array_pairs,prompt_6,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    hash_table = {}\n    for i in arg1:\n        if arg2 - i in hash_table:\n            counter += hash_table[arg2 - i]\n        hash_table[i] = hash_table.get(i, 0) + 1\n    return counter']",1000,0.006529600010253489,0.006815372999553802,0.007144100003642961,N/A
p4_sum_array_pairs,prompt_6,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    hash_table = {}\n    for i in arg1:\n        if arg2 - i in hash_table:\n            counter += hash_table[arg2 - i]\n        hash_table[i] = hash_table.get(i, 0) + 1\n    return counter']",10000,0.07071550001273863,0.0724526500000502,0.0757212000025902,N/A
p4_sum_array_pairs,prompt_6,32,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = 0\n    hash_table = {}\n    for i in arg1:\n        if arg2 - i in hash_table:\n            counter += hash_table[arg2 - i]\n        hash_table[i] = hash_table.get(i, 0) + 1\n    return counter']",100000,1.1085060000041267,1.1275080229998276,1.1528743999951985,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in d:\n            counter += 1\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return counter']",1000,0.00618489999033045,0.006411194000684191,0.00756810000166297,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in d:\n            counter += 1\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return counter']",10000,0.06722470000386238,0.0685638010004186,0.0756822999974247,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    d = {}\n    counter = 0\n    for i in arg1:\n        temp = arg2 - i\n        if temp in d:\n            counter += 1\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return counter']",100000,1.058710199999041,1.078924679999327,1.1085795999970287,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pairs.append((num, arg2 - num))\n        num_dict[num] = num\n    return pairs']",1000,0.005013399990275502,0.0052270109998062255,0.005589199994574301,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pairs.append((num, arg2 - num))\n        num_dict[num] = num\n    return pairs']",10000,0.05528319999575615,0.057101914999366274,0.0688603000016883,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    pairs = []\n    for num in arg1:\n        if arg2 - num in num_dict:\n            pairs.append((num, arg2 - num))\n        num_dict[num] = num\n    return pairs']",100000,0.9321105999988504,0.9558189719998336,0.9741740000026766,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    left_pointer = 0\n    right_pointer = len(arg1) - 1\n    count = 0\n    while left_pointer <= right_pointer:\n        current_sum = arg1[left_pointer] + arg1[right_pointer]\n        if current_sum == arg2:\n            count += 1\n            left_pointer += 1\n            right_pointer -= 1\n        elif current_sum < arg2:\n            left_pointer += 1\n        else:\n            right_pointer -= 1\n    return count']",1000,0.004170600004727021,0.004358799000474391,0.005469900002935901,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    left_pointer = 0\n    right_pointer = len(arg1) - 1\n    count = 0\n    while left_pointer <= right_pointer:\n        current_sum = arg1[left_pointer] + arg1[right_pointer]\n        if current_sum == arg2:\n            count += 1\n            left_pointer += 1\n            right_pointer -= 1\n        elif current_sum < arg2:\n            left_pointer += 1\n        else:\n            right_pointer -= 1\n    return count']",10000,0.044098700003814884,0.04554422999935923,0.04952190000039991,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    left_pointer = 0\n    right_pointer = len(arg1) - 1\n    count = 0\n    while left_pointer <= right_pointer:\n        current_sum = arg1[left_pointer] + arg1[right_pointer]\n        if current_sum == arg2:\n            count += 1\n            left_pointer += 1\n            right_pointer -= 1\n        elif current_sum < arg2:\n            left_pointer += 1\n        else:\n            right_pointer -= 1\n    return count']",100000,0.5327873999922303,0.551256177999021,0.5837040999904275,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in map:\n            count += map[complement]\n        if arg1[i] in map:\n            map[arg1[i]] += 1\n        else:\n            map[arg1[i]] = 1\n    return count']",1000,0.007262599989189766,0.007590878999908454,0.008141099999193102,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in map:\n            count += map[complement]\n        if arg1[i] in map:\n            map[arg1[i]] += 1\n        else:\n            map[arg1[i]] = 1\n    return count']",10000,0.07800379999389406,0.08082222699958948,0.09214100000099279,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for i in range(len(arg1)):\n        complement = arg2 - arg1[i]\n        if complement in map:\n            count += map[complement]\n        if arg1[i] in map:\n            map[arg1[i]] += 1\n        else:\n            map[arg1[i]] = 1\n    return count']",100000,1.1999533000052907,1.2343766950003918,1.2948634999920614,N/A
p4_sum_array_pairs,prompt_6,37,"[""def funcImp(arg1, arg2):\n    if arg1 == []:\n        return 'The list is empty.'\n    try:\n        arg2 = int(arg2)\n    except ValueError:\n        return 'The target sum is non-numeric.'\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_dict:\n            count_pairs += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs""]",1000,0.005196400001295842,0.005598899000615347,0.008039099993766285,N/A
p4_sum_array_pairs,prompt_6,37,"[""def funcImp(arg1, arg2):\n    if arg1 == []:\n        return 'The list is empty.'\n    try:\n        arg2 = int(arg2)\n    except ValueError:\n        return 'The target sum is non-numeric.'\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_dict:\n            count_pairs += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs""]",10000,0.05808889999752864,0.060822374000708807,0.06780299999809358,N/A
p4_sum_array_pairs,prompt_6,37,"[""def funcImp(arg1, arg2):\n    if arg1 == []:\n        return 'The list is empty.'\n    try:\n        arg2 = int(arg2)\n    except ValueError:\n        return 'The target sum is non-numeric.'\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_dict:\n            count_pairs += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs""]",100000,0.9360254999919562,0.9600726060003217,0.991194500005804,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    dic = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in dic:\n            pairs_count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return pairs_count']",1000,0.006559500005096197,0.006894709000043804,0.008657200000016019,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    dic = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in dic:\n            pairs_count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return pairs_count']",10000,0.07024110000929795,0.0737559999997029,0.08312710000609513,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    dic = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in dic:\n            pairs_count += dic[arg2 - num]\n        dic[num] = dic.get(num, 0) + 1\n    return pairs_count']",100000,1.1299634000024525,1.1531962320001912,1.2149305000057211,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    count = {k: 0 for k in arg1}\n    pairs = 0\n    for i in arg1:\n        count[i] += 1\n    for i in count.keys():\n        remainder = arg2 - i\n        if remainder in count:\n            pairs += count[remainder]\n    return pairs // 2']",1000,0.009045800004969351,0.009557144000718837,0.011717700006556697,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    count = {k: 0 for k in arg1}\n    pairs = 0\n    for i in arg1:\n        count[i] += 1\n    for i in count.keys():\n        remainder = arg2 - i\n        if remainder in count:\n            pairs += count[remainder]\n    return pairs // 2']",10000,0.09924310000496916,0.10374293500077329,0.11852570000337437,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    count = {k: 0 for k in arg1}\n    pairs = 0\n    for i in arg1:\n        count[i] += 1\n    for i in count.keys():\n        remainder = arg2 - i\n        if remainder in count:\n            pairs += count[remainder]\n    return pairs // 2']",100000,1.4369616000039969,1.4728910029998223,1.50890580000123,N/A
p4_sum_array_pairs,prompt_6,40,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in data:\n            count += data[complement]\n        data[i] = data.get(i, 0) + 1\n    return count']",1000,0.006739999997080304,0.00714014200028032,0.009712899991427548,N/A
p4_sum_array_pairs,prompt_6,40,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in data:\n            count += data[complement]\n        data[i] = data.get(i, 0) + 1\n    return count']",10000,0.07250860000203829,0.07556022499949905,0.08195890000206418,N/A
p4_sum_array_pairs,prompt_6,40,"['def funcImp(arg1, arg2):\n    data = dict()\n    count = 0\n    for i in arg1:\n        complement = arg2 - i\n        if complement in data:\n            count += data[complement]\n        data[i] = data.get(i, 0) + 1\n    return count']",100000,1.1275056000013137,1.1626123289996757,1.2151035999995656,N/A
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006833299994468689,0.007217219999438385,0.009399100003065541,N/A
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07238409999990836,0.07526854399999137,0.08312789999763481,N/A
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.136280100006843,1.1631976870002108,1.2236947000055807,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",1000,0.0059800999879371375,0.006367960999923526,0.0075785000080941245,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",10000,0.06561859999783337,0.06830419999969309,0.07474630000069737,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in hashmap:\n            pairs_count += hashmap[arg2 - num]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",100000,1.0753297000046587,1.103641229998466,1.139165700005833,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    elementsCount = {}\n    pairsCount = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elementsCount:\n            pairsCount += elementsCount[complement]\n        if number in elementsCount:\n            elementsCount[number] += 1\n        else:\n            elementsCount[number] = 1\n    return pairsCount']",1000,0.006249300000490621,0.006721495999372564,0.009104099997784942,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    elementsCount = {}\n    pairsCount = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elementsCount:\n            pairsCount += elementsCount[complement]\n        if number in elementsCount:\n            elementsCount[number] += 1\n        else:\n            elementsCount[number] = 1\n    return pairsCount']",10000,0.06709130000672303,0.06994567300076597,0.07725299999583513,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    elementsCount = {}\n    pairsCount = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elementsCount:\n            pairsCount += elementsCount[complement]\n        if number in elementsCount:\n            elementsCount[number] += 1\n        else:\n            elementsCount[number] = 1\n    return pairsCount']",100000,1.0820964000013191,1.1065062380001474,1.133555400010664,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashmap:\n            count += hashmap[temp]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.006757499999366701,0.007403542000392917,0.011271700001088902,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashmap:\n            count += hashmap[temp]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.07221929999650456,0.07556056300032651,0.08569140000327025,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        temp = arg2 - num\n        if temp in hashmap:\n            count += hashmap[temp]\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.1296789000043646,1.1625061539997115,1.1914655000000494,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            pairs_count += hashMap[complement]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs_count']",1000,0.006738899988704361,0.007125810998404631,0.008229899991420098,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            pairs_count += hashMap[complement]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs_count']",10000,0.0722684000065783,0.0750470750000386,0.08392109999840613,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    hashMap = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            pairs_count += hashMap[complement]\n        hashMap[num] = hashMap.get(num, 0) + 1\n    return pairs_count']",100000,1.1358943000086583,1.1641177819999575,1.1915573999867775,N/A
p4_sum_array_pairs,prompt_6,46,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_table = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += hash_table.get(complement, 0)\n        hash_table[number] = hash_table.get(number, 0) + 1\n    return pairs_count']",1000,0.007436300002154894,0.007917243000265443,0.012435600001481362,N/A
p4_sum_array_pairs,prompt_6,46,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_table = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += hash_table.get(complement, 0)\n        hash_table[number] = hash_table.get(number, 0) + 1\n    return pairs_count']",10000,0.07968830000027083,0.0834945250004239,0.09464890000526793,N/A
p4_sum_array_pairs,prompt_6,46,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    hash_table = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        pairs_count += hash_table.get(complement, 0)\n        hash_table[number] = hash_table.get(number, 0) + 1\n    return pairs_count']",100000,1.222676399993361,1.2454823300008138,1.2698417999927187,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num not in num_counts:\n            num_counts[num] = 0\n        num_counts[num] += 1\n    return count']",1000,0.008884299997589551,0.009349474000773626,0.01059779999195598,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num not in num_counts:\n            num_counts[num] = 0\n        num_counts[num] += 1\n    return count']",10000,0.09253510000417009,0.09659868799950345,0.10530830000061542,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num not in num_counts:\n            num_counts[num] = 0\n        num_counts[num] += 1\n    return count']",100000,1.3463350999954855,1.3778965749997587,1.4232519999932265,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    numbers = {}\n    for num in arg1:\n        if arg2 - num in numbers:\n            count += numbers[arg2 - num]\n        numbers[num] = numbers.get(num, 0) + 1\n    return count']",1000,0.006565000003320165,0.00699579599997378,0.009628700005123392,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    numbers = {}\n    for num in arg1:\n        if arg2 - num in numbers:\n            count += numbers[arg2 - num]\n        numbers[num] = numbers.get(num, 0) + 1\n    return count']",10000,0.07100480000372045,0.07446013699882315,0.08404419998987578,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    numbers = {}\n    for num in arg1:\n        if arg2 - num in numbers:\n            count += numbers[arg2 - num]\n        numbers[num] = numbers.get(num, 0) + 1\n    return count']",100000,1.1206506000016816,1.1525434890002362,1.211376499995822,N/A
p4_sum_array_pairs,prompt_6,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006008099997416139,0.006719331999920542,0.013298899997607805,N/A
p4_sum_array_pairs,prompt_6,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06581810000352561,0.06930830500015872,0.09173569999984466,N/A
p4_sum_array_pairs,prompt_6,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if arg2 - num in hash_map:\n            count += hash_map[arg2 - num]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0852293999923859,1.1066754170003696,1.1306847000087146,N/A
p4_sum_array_pairs,prompt_6,50,"['def funcImp(arg1, arg2):\n    map_values = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map_values:\n            count += map_values[temp]\n        if num in map_values:\n            map_values[num] += 1\n        else:\n            map_values[num] = 1\n    return count']",1000,0.006114000003435649,0.006487869000120554,0.01038820001122076,N/A
p4_sum_array_pairs,prompt_6,50,"['def funcImp(arg1, arg2):\n    map_values = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map_values:\n            count += map_values[temp]\n        if num in map_values:\n            map_values[num] += 1\n        else:\n            map_values[num] = 1\n    return count']",10000,0.06717720000597183,0.06957947999835597,0.07467099999485072,N/A
p4_sum_array_pairs,prompt_6,50,"['def funcImp(arg1, arg2):\n    map_values = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in map_values:\n            count += map_values[temp]\n        if num in map_values:\n            map_values[num] += 1\n        else:\n            map_values[num] = 1\n    return count']",100000,1.0748770000063814,1.0991456849993846,1.1227366000093753,N/A
p4_sum_array_pairs,prompt_6,51,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        remain = arg2 - num\n        if remain in counter:\n            pair_count += counter[remain]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",1000,0.006718899996485561,0.0073403540007711855,0.012006599994492717,N/A
p4_sum_array_pairs,prompt_6,51,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        remain = arg2 - num\n        if remain in counter:\n            pair_count += counter[remain]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",10000,0.07208220000029542,0.07545125299875508,0.08442139999533538,N/A
p4_sum_array_pairs,prompt_6,51,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        remain = arg2 - num\n        if remain in counter:\n            pair_count += counter[remain]\n        counter[num] = counter.get(num, 0) + 1\n    return pair_count']",100000,1.1416434999991907,1.1665903260007326,1.2048278000002028,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)\narg1 = [1, 3, 2, 2]\narg2 = 4\npass']",1000,0.004499500006204471,0.004886176001018611,0.007335499991313554,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)\narg1 = [1, 3, 2, 2]\narg2 = 4\npass']",10000,0.05608500000380445,0.0588444430004165,0.06599139999889303,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 0\n    seen = set()\n    output = set()\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((min(num, target), max(num, target)))\n    return len(output)\narg1 = [1, 3, 2, 2]\narg2 = 4\npass']",100000,0.9319145000044955,0.9480720990010013,0.9629038000130095,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006098099998780526,0.0065165590011747555,0.008194199996069074,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06719309999607503,0.07019865899943398,0.07759000000078231,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.0741094999975758,1.1032597170006193,1.1255791000003228,N/A
p4_sum_array_pairs,prompt_6,54,"['def funcImp(arg1, arg2):\n    seenNumbers = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seenNumbers:\n            count += 1\n        seenNumbers.add(number)\n    return count']",1000,0.004434200003743172,0.00458346699932008,0.006717900003422983,N/A
p4_sum_array_pairs,prompt_6,54,"['def funcImp(arg1, arg2):\n    seenNumbers = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seenNumbers:\n            count += 1\n        seenNumbers.add(number)\n    return count']",10000,0.052714899997226894,0.05527798600087408,0.0632876000017859,N/A
p4_sum_array_pairs,prompt_6,54,"['def funcImp(arg1, arg2):\n    seenNumbers = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seenNumbers:\n            count += 1\n        seenNumbers.add(number)\n    return count']",100000,0.8297511999990093,0.8558711069994024,0.9338440999999875,N/A
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    map = dict()\n    count = 0\n    for i in arg1:\n        j = arg2 - i\n        if j in map:\n            count += map[j]\n        else:\n            map[i] = map.get(i, 0) + 1\n    return count']",1000,0.0067632999998750165,0.007147014998918166,0.008741899990127422,N/A
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    map = dict()\n    count = 0\n    for i in arg1:\n        j = arg2 - i\n        if j in map:\n            count += map[j]\n        else:\n            map[i] = map.get(i, 0) + 1\n    return count']",10000,0.07201390000409447,0.0756162670001504,0.08864250000624452,N/A
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    map = dict()\n    count = 0\n    for i in arg1:\n        j = arg2 - i\n        if j in map:\n            count += map[j]\n        else:\n            map[i] = map.get(i, 0) + 1\n    return count']",100000,1.1176436999958241,1.1385202720003145,1.1707975000026636,N/A
p4_sum_array_pairs,prompt_6,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",1000,0.006787800011807121,0.007103061999659985,0.009746499999891967,N/A
p4_sum_array_pairs,prompt_6,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",10000,0.07292469999811146,0.07601388200026121,0.08421939999971073,N/A
p4_sum_array_pairs,prompt_6,56,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs += hash_map[complement]\n        hash_map[num] = hash_map.get(num, 0) + 1\n    return pairs']",100000,1.131169400003273,1.159132090001076,1.2003289999993285,N/A
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",1000,0.008178200005204417,0.00871822099928977,0.014518399999360554,N/A
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",10000,0.0853285000048345,0.08811615599988727,0.09315430000424385,N/A
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    count = 0\n    m = dict()\n    for i in range(0, len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in m:\n            count += m[temp]\n        m[arg1[i]] = m.get(arg1[i], 0) + 1\n    return count']",100000,1.2716292000113754,1.2953216420000535,1.325243600003887,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in counter:\n            pair_count += counter[arg2 - i]\n        if i in counter:\n            counter[i] += 1\n        else:\n            counter[i] = 1\n    return pair_count']",1000,0.006023199995979667,0.00643193700016127,0.007348200000706129,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in counter:\n            pair_count += counter[arg2 - i]\n        if i in counter:\n            counter[i] += 1\n        else:\n            counter[i] = 1\n    return pair_count']",10000,0.06599019998975564,0.06943256600075984,0.08111999998800457,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    counter = dict()\n    pair_count = 0\n    for i in arg1:\n        if arg2 - i in counter:\n            pair_count += counter[arg2 - i]\n        if i in counter:\n            counter[i] += 1\n        else:\n            counter[i] = 1\n    return pair_count']",100000,1.0762429000023985,1.1015505990004748,1.1302105000067968,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    s = set()\n    for i in arg1:\n        temp = arg2 - i\n        if temp in s:\n            count += 1\n        s.add(i)\n    return count']",1000,0.004589699994539842,0.004784886001143605,0.005665100004989654,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    s = set()\n    for i in arg1:\n        temp = arg2 - i\n        if temp in s:\n            count += 1\n        s.add(i)\n    return count']",10000,0.054038399990531616,0.05789481800049543,0.06586099999549333,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    s = set()\n    for i in arg1:\n        temp = arg2 - i\n        if temp in s:\n            count += 1\n        s.add(i)\n    return count']",100000,0.8544494000088889,0.8729417480004485,0.910690099990461,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return count']",1000,0.007191400000010617,0.007592199999926379,0.008974999989732169,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return count']",10000,0.07792930000869092,0.08056895099958637,0.08795289999397937,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for i in range(len(arg1)):\n        temp = arg2 - arg1[i]\n        if temp in hash_map:\n            count += hash_map[temp]\n        if arg1[i] in hash_map:\n            hash_map[arg1[i]] += 1\n        else:\n            hash_map[arg1[i]] = 1\n    return count']",100000,1.204236999998102,1.2292001509999682,1.2606368999986444,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    for num in arg1:\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    pair_count = 0\n    for num in element_counts:\n        complement = arg2 - num\n        if complement in element_counts:\n            if num == complement:\n                pair_count += element_counts[complement] * (element_counts[complement] - 1) / 2\n            else:\n                pair_count += element_counts[num] * element_counts[complement]\n                element_counts[complement] = 0\n    return int(pair_count)']",1000,0.006964200001675636,0.007449082999228267,0.009389500002725981,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    for num in arg1:\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    pair_count = 0\n    for num in element_counts:\n        complement = arg2 - num\n        if complement in element_counts:\n            if num == complement:\n                pair_count += element_counts[complement] * (element_counts[complement] - 1) / 2\n            else:\n                pair_count += element_counts[num] * element_counts[complement]\n                element_counts[complement] = 0\n    return int(pair_count)']",10000,0.07738229999085888,0.0815002639994782,0.10811660000763368,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    for num in arg1:\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    pair_count = 0\n    for num in element_counts:\n        complement = arg2 - num\n        if complement in element_counts:\n            if num == complement:\n                pair_count += element_counts[complement] * (element_counts[complement] - 1) / 2\n            else:\n                pair_count += element_counts[num] * element_counts[complement]\n                element_counts[complement] = 0\n    return int(pair_count)']",100000,1.2146959000092465,1.2404938910006604,1.2719304000056582,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004504099997575395,0.0047503490002418405,0.005382599993026815,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05536050000227988,0.05832396100086044,0.0701641999912681,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8569324999989476,0.873529741000384,0.9032793000078527,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    encountered_numbers = {}\n    for number in arg1:\n        required_num = arg2 - number\n        if required_num in encountered_numbers:\n            pair_count += encountered_numbers[required_num]\n        encountered_numbers[number] = encountered_numbers.get(number, 0) + 1\n    return pair_count']",1000,0.006738500000210479,0.0071389939998334736,0.008152199996402487,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    encountered_numbers = {}\n    for number in arg1:\n        required_num = arg2 - number\n        if required_num in encountered_numbers:\n            pair_count += encountered_numbers[required_num]\n        encountered_numbers[number] = encountered_numbers.get(number, 0) + 1\n    return pair_count']",10000,0.07252479999442585,0.07523449800020898,0.08211020000453573,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    encountered_numbers = {}\n    for number in arg1:\n        required_num = arg2 - number\n        if required_num in encountered_numbers:\n            pair_count += encountered_numbers[required_num]\n        encountered_numbers[number] = encountered_numbers.get(number, 0) + 1\n    return pair_count']",100000,1.14104609999049,1.1642050460005704,1.2096380000002682,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            pair_count += counter[arg2 - num]\n        if num in counter:\n            counter[num] += 1\n        else:\n            counter[num] = 1\n    return pair_count']",1000,0.006040599997504614,0.0064132680001785045,0.008334300000569783,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            pair_count += counter[arg2 - num]\n        if num in counter:\n            counter[num] += 1\n        else:\n            counter[num] = 1\n    return pair_count']",10000,0.0659075000003213,0.06860316699952819,0.07367479999084026,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    counter = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counter:\n            pair_count += counter[arg2 - num]\n        if num in counter:\n            counter[num] += 1\n        else:\n            counter[num] = 1\n    return pair_count']",100000,1.0780088999890722,1.1036868040000263,1.1356762000068557,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    if not arg1 or len(arg1) < 2:\n        return pairs\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pairs += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",1000,0.00677910000376869,0.007168957001122181,0.008861199996317737,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    if not arg1 or len(arg1) < 2:\n        return pairs\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pairs += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",10000,0.07231299999693874,0.07524605000013253,0.08068119999370538,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    seen_nums = {}\n    pairs = 0\n    if not arg1 or len(arg1) < 2:\n        return pairs\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_nums:\n            pairs += seen_nums[complement]\n        seen_nums[num] = seen_nums.get(num, 0) + 1\n    return pairs']",100000,1.1185034000081941,1.1424523770004453,1.1808084999938728,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arr, sum):\n    map = {}\n    for num in arr:\n        if sum - num in map:\n            return True\n        map[num] = map.get(num, 0) + 1\n    return False\npass']",1000,0.0012504000042099506,0.0012977400013187434,0.001768900008755736,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arr, sum):\n    map = {}\n    for num in arr:\n        if sum - num in map:\n            return True\n        map[num] = map.get(num, 0) + 1\n    return False\npass']",10000,0.0039038000104483217,0.00403833000047598,0.004909600000246428,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arr, sum):\n    map = {}\n    for num in arr:\n        if sum - num in map:\n            return True\n        map[num] = map.get(num, 0) + 1\n    return False\npass']",100000,0.01286410000466276,0.013377462000498781,0.014678499996080063,N/A
p4_sum_array_pairs,prompt_6,67,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    count = 0\n    left = 0\n    right = len(arg1) - 1\n    while left < right:\n        if arg1[left] + arg1[right] == arg2:\n            count += 1\n            left += 1\n            right -= 1\n        elif arg1[left] + arg1[right] < arg2:\n            left += 1\n        else:\n            right -= 1\n    return count']",1000,0.0054044000135036185,0.005722335000755265,0.007970799997565337,N/A
p4_sum_array_pairs,prompt_6,67,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    count = 0\n    left = 0\n    right = len(arg1) - 1\n    while left < right:\n        if arg1[left] + arg1[right] == arg2:\n            count += 1\n            left += 1\n            right -= 1\n        elif arg1[left] + arg1[right] < arg2:\n            left += 1\n        else:\n            right -= 1\n    return count']",10000,0.057013400000869296,0.058182963999424825,0.06819540000287816,N/A
p4_sum_array_pairs,prompt_6,67,"['def funcImp(arg1, arg2):\n    arg1.sort()\n    count = 0\n    left = 0\n    right = len(arg1) - 1\n    while left < right:\n        if arg1[left] + arg1[right] == arg2:\n            count += 1\n            left += 1\n            right -= 1\n        elif arg1[left] + arg1[right] < arg2:\n            left += 1\n        else:\n            right -= 1\n    return count']",100000,0.6639009999926202,0.6786629029999313,0.7207507999992231,N/A
p4_sum_array_pairs,prompt_6,68,"['def funcImp(arg1, arg2):\n    count_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",1000,0.006719599987263791,0.007071580000774702,0.008190000007743947,N/A
p4_sum_array_pairs,prompt_6,68,"['def funcImp(arg1, arg2):\n    count_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",10000,0.07235509999736678,0.0742070109998167,0.07846560000325553,N/A
p4_sum_array_pairs,prompt_6,68,"['def funcImp(arg1, arg2):\n    count_dict = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return count']",100000,1.1309139999939362,1.1490654320000613,1.1741399000020465,N/A
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count_map = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_map:\n            pairs_count += count_map[diff]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pairs_count']",1000,0.006762899996829219,0.007133604998962255,0.009105500008445233,N/A
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count_map = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_map:\n            pairs_count += count_map[diff]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pairs_count']",10000,0.07277929999690969,0.07499565400124993,0.07902530000137631,N/A
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count_map = dict()\n    pairs_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in count_map:\n            pairs_count += count_map[diff]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pairs_count']",100000,1.1343924999964656,1.1572932460006269,1.1961846000049263,N/A
p4_sum_array_pairs,prompt_6,70,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pairs_counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_counter += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_counter']",1000,0.006158100004540756,0.0065092449999065135,0.009317400006693788,N/A
p4_sum_array_pairs,prompt_6,70,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pairs_counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_counter += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_counter']",10000,0.06781409999530297,0.0695598889995017,0.0744014999945648,N/A
p4_sum_array_pairs,prompt_6,70,"['def funcImp(arg1, arg2):\n    hash_map = dict()\n    pairs_counter = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pairs_counter += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pairs_counter']",100000,1.0757536000019172,1.1015699249999307,1.156026099997689,N/A
p4_sum_array_pairs,prompt_6,71,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    pairs_count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in freq:\n            pairs_count += freq[remaining]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return pairs_count']",1000,0.006147799998871051,0.0064370259997667744,0.00727319999714382,N/A
p4_sum_array_pairs,prompt_6,71,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    pairs_count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in freq:\n            pairs_count += freq[remaining]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return pairs_count']",10000,0.06726189999608323,0.06907714799919631,0.07731209999474231,N/A
p4_sum_array_pairs,prompt_6,71,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    freq = {}\n    pairs_count = 0\n    for num in arg1:\n        remaining = arg2 - num\n        if remaining in freq:\n            pairs_count += freq[remaining]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return pairs_count']",100000,1.0705388999922434,1.0904311699986282,1.1308644999953685,N/A
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    counters = dict()\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in counters:\n            count += counters[remainder]\n        counters[num] = counters.get(num, 0) + 1\n    return count']",1000,0.006699199991999194,0.006950259000441292,0.008575899992138147,N/A
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    counters = dict()\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in counters:\n            count += counters[remainder]\n        counters[num] = counters.get(num, 0) + 1\n    return count']",10000,0.07214189998921938,0.07411900999955832,0.0861536000011256,N/A
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    counters = dict()\n    count = 0\n    for num in arg1:\n        remainder = arg2 - num\n        if remainder in counters:\n            count += counters[remainder]\n        counters[num] = counters.get(num, 0) + 1\n    return count']",100000,1.1240280999918468,1.1446671869988494,1.2133324000024004,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    counter_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counter_map:\n            pair_count += 1\n        counter_map[number] = counter_map.get(number, 0) + 1\n    return pair_count']",1000,0.006717299998854287,0.007086636000021827,0.00851400000101421,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    counter_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counter_map:\n            pair_count += 1\n        counter_map[number] = counter_map.get(number, 0) + 1\n    return pair_count']",10000,0.07189849999849685,0.07355779999968945,0.07753480000246782,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    counter_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counter_map:\n            pair_count += 1\n        counter_map[number] = counter_map.get(number, 0) + 1\n    return pair_count']",100000,1.1067677999963053,1.1303171760000987,1.1628308000072138,N/A
p4_sum_array_pairs,prompt_6,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006150900007924065,0.006433071999490494,0.007534499993198551,N/A
p4_sum_array_pairs,prompt_6,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.067476500000339,0.06950735300037195,0.07976049999706447,N/A
p4_sum_array_pairs,prompt_6,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.0747572999971453,1.089402258999762,1.1161069000081625,N/A
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in pair_dict:\n            pairs += pair_dict[diff]\n        if i in pair_dict:\n            pair_dict[i] += 1\n        else:\n            pair_dict[i] = 1\n    return pairs']",1000,0.0061876999970991164,0.00647996800034889,0.007562200000393204,N/A
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in pair_dict:\n            pairs += pair_dict[diff]\n        if i in pair_dict:\n            pair_dict[i] += 1\n        else:\n            pair_dict[i] = 1\n    return pairs']",10000,0.0672333999973489,0.06906453399991733,0.07422930000757333,N/A
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    pair_dict = {}\n    pairs = 0\n    for i in arg1:\n        diff = arg2 - i\n        if diff in pair_dict:\n            pairs += pair_dict[diff]\n        if i in pair_dict:\n            pair_dict[i] += 1\n        else:\n            pair_dict[i] = 1\n    return pairs']",100000,1.0741075999976601,1.097072561000241,1.1646741000004113,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",1000,0.006756300004781224,0.00721465299880947,0.008753500005695969,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",10000,0.07307420000142884,0.07521267999938573,0.08348460000706837,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        temp = arg2 - num\n        if temp in freq:\n            count += freq[temp]\n        freq[num] = freq.get(num, 0) + 1\n    return count']",100000,1.128524700005073,1.1505816190001497,1.173203000013018,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    num_counts = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return count']",1000,0.006799399998271838,0.007194906000368064,0.009088599996175617,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    num_counts = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return count']",10000,0.07278699999733362,0.07456500200045411,0.07911430000967812,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    num_counts = dict()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        num_counts[num] = num_counts.get(num, 0) + 1\n    return count']",100000,1.126640899994527,1.1444413250003709,1.1659514000057243,N/A
p4_sum_array_pairs,prompt_6,78,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = 0\n    previous_numbers = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in previous_numbers:\n            cnt += previous_numbers[arg2 - num]\n        previous_numbers[num] += 1\n    return cnt']",1000,0.010026300005847588,0.010417868999938946,0.011390300001949072,N/A
p4_sum_array_pairs,prompt_6,78,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = 0\n    previous_numbers = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in previous_numbers:\n            cnt += previous_numbers[arg2 - num]\n        previous_numbers[num] += 1\n    return cnt']",10000,0.10165450000204146,0.1051266119997308,0.1161458999995375,N/A
p4_sum_array_pairs,prompt_6,78,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    cnt = 0\n    previous_numbers = defaultdict(int)\n    for num in arg1:\n        if arg2 - num in previous_numbers:\n            cnt += previous_numbers[arg2 - num]\n        previous_numbers[num] += 1\n    return cnt']",100000,1.4550974000012502,1.4797293100006936,1.5049039000004996,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in hash_map:\n            count += hash_map[pair]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006133500006399117,0.006528694000735413,0.007796899997629225,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in hash_map:\n            count += hash_map[pair]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06750040000770241,0.06961545500002103,0.09132559999125078,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        pair = arg2 - num\n        if pair in hash_map:\n            count += hash_map[pair]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.0773428000102285,1.10166552900002,1.1207798999967054,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",1000,0.0067965000052936375,0.007142177000205265,0.008065700007136911,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",10000,0.07367499999236315,0.0749241990003793,0.07734319999872241,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pairs_count += count_dict[complement]\n        count_dict[num] = count_dict.get(num, 0) + 1\n    return pairs_count']",100000,1.1462216000072658,1.1600193790004414,1.1919752999965567,N/A
p4_sum_array_pairs,prompt_6,81,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    k = arg2\n    freq_map = {}\n    counter = 0\n    for num in arg1:\n        if k - num in freq_map:\n            counter += freq_map[k - num]\n        if num not in freq_map:\n            freq_map[num] = 1\n        else:\n            freq_map[num] += 1\n    return counter']",1000,0.006022500005201437,0.006388015000702581,0.006842400005552918,N/A
p4_sum_array_pairs,prompt_6,81,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    k = arg2\n    freq_map = {}\n    counter = 0\n    for num in arg1:\n        if k - num in freq_map:\n            counter += freq_map[k - num]\n        if num not in freq_map:\n            freq_map[num] = 1\n        else:\n            freq_map[num] += 1\n    return counter']",10000,0.06718240000191145,0.06902962099993601,0.07230699999490753,N/A
p4_sum_array_pairs,prompt_6,81,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    k = arg2\n    freq_map = {}\n    counter = 0\n    for num in arg1:\n        if k - num in freq_map:\n            counter += freq_map[k - num]\n        if num not in freq_map:\n            freq_map[num] = 1\n        else:\n            freq_map[num] += 1\n    return counter']",100000,1.078176800001529,1.098800518000062,1.1178479999944102,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in lookup:\n            pairs_count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs_count']",1000,0.006041800006642006,0.006316365000529913,0.006859299988718703,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in lookup:\n            pairs_count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs_count']",10000,0.0668154000013601,0.0680144070001552,0.06969370000297204,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    lookup = {}\n    pairs_count = 0\n    for num in arg1:\n        if arg2 - num in lookup:\n            pairs_count += lookup[arg2 - num]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return pairs_count']",100000,1.0828594000049634,1.0973852219992841,1.120721900006174,N/A
p4_sum_array_pairs,prompt_6,83,"[""def funcImp(arg1, arg2):\n    if type(arg1) != list or type(arg2) != int:\n        return 'Invalid input. The first input has to be a list, the second input has to be an integer.'\n    if len(arg1) == 0:\n        return 'Empty list. No pairs to sum.'\n    count = 0\n    hash_set = set()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_set:\n            count += 1\n        else:\n            hash_set.add(i)\n    return count""]",1000,0.004423199992743321,0.00465451700045378,0.0052651000005425885,N/A
p4_sum_array_pairs,prompt_6,83,"[""def funcImp(arg1, arg2):\n    if type(arg1) != list or type(arg2) != int:\n        return 'Invalid input. The first input has to be a list, the second input has to be an integer.'\n    if len(arg1) == 0:\n        return 'Empty list. No pairs to sum.'\n    count = 0\n    hash_set = set()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_set:\n            count += 1\n        else:\n            hash_set.add(i)\n    return count""]",10000,0.05428070000198204,0.056335235000442484,0.06098190000921022,N/A
p4_sum_array_pairs,prompt_6,83,"[""def funcImp(arg1, arg2):\n    if type(arg1) != list or type(arg2) != int:\n        return 'Invalid input. The first input has to be a list, the second input has to be an integer.'\n    if len(arg1) == 0:\n        return 'Empty list. No pairs to sum.'\n    count = 0\n    hash_set = set()\n    for i in arg1:\n        compliment = arg2 - i\n        if compliment in hash_set:\n            count += 1\n        else:\n            hash_set.add(i)\n    return count""]",100000,0.8278762999980245,0.8443032790000143,0.8588223000115249,N/A
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    numbers = dict()\n    pairs = list()\n    for num in arg1:\n        matching = arg2 - num\n        if matching in numbers:\n            pairs.append((matching, num))\n        else:\n            numbers[num] = True\n    return pairs']",1000,0.0051781999936793,0.005427442999935011,0.005677299996023066,N/A
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    numbers = dict()\n    pairs = list()\n    for num in arg1:\n        matching = arg2 - num\n        if matching in numbers:\n            pairs.append((matching, num))\n        else:\n            numbers[num] = True\n    return pairs']",10000,0.057377399993129075,0.05874525600054767,0.06713460000173654,N/A
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    numbers = dict()\n    pairs = list()\n    for num in arg1:\n        matching = arg2 - num\n        if matching in numbers:\n            pairs.append((matching, num))\n        else:\n            numbers[num] = True\n    return pairs']",100000,0.9416465999966022,0.9733839140002964,1.0070904000021983,N/A
p4_sum_array_pairs,prompt_6,85,"[""def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 'Not Enough Entries'\n    seen = dict()\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 1\n        else:\n            output += seen[target]\n            seen[num] = 1\n    return output""]",1000,0.005202200001804158,0.005482393999700435,0.006302399997366592,N/A
p4_sum_array_pairs,prompt_6,85,"[""def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 'Not Enough Entries'\n    seen = dict()\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 1\n        else:\n            output += seen[target]\n            seen[num] = 1\n    return output""]",10000,0.05715769999369513,0.057967320000898326,0.06057689999579452,N/A
p4_sum_array_pairs,prompt_6,85,"[""def funcImp(arg1, arg2):\n    if len(arg1) < 2:\n        return 'Not Enough Entries'\n    seen = dict()\n    output = 0\n    for num in arg1:\n        target = arg2 - num\n        if target not in seen:\n            seen[num] = 1\n        else:\n            output += seen[target]\n            seen[num] = 1\n    return output""]",100000,0.9448578000010457,0.9651514669996686,0.9839003999950364,N/A
p4_sum_array_pairs,prompt_6,86,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    encountered = defaultdict(int)\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in encountered:\n            count += encountered[diff]\n        encountered[ele] += 1\n    return count']",1000,0.010005600008298643,0.010527421001606854,0.012190200010081753,N/A
p4_sum_array_pairs,prompt_6,86,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    encountered = defaultdict(int)\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in encountered:\n            count += encountered[diff]\n        encountered[ele] += 1\n    return count']",10000,0.1059975999960443,0.10870724699969286,0.1155424999888055,N/A
p4_sum_array_pairs,prompt_6,86,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    encountered = defaultdict(int)\n    for ele in arg1:\n        diff = arg2 - ele\n        if diff in encountered:\n            count += encountered[diff]\n        encountered[ele] += 1\n    return count']",100000,1.4513824000023305,1.4738677280004777,1.4980998999963049,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count:\n            pair_count += dict_count[arg2 - num]\n        if num in dict_count:\n            dict_count[num] += 1\n        else:\n            dict_count[num] = 1\n    return pair_count']",1000,0.006023699999786913,0.006294552999606822,0.00686199999472592,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count:\n            pair_count += dict_count[arg2 - num]\n        if num in dict_count:\n            dict_count[num] += 1\n        else:\n            dict_count[num] = 1\n    return pair_count']",10000,0.0663800999900559,0.06756431399961002,0.0712397999886889,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    dict_count = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in dict_count:\n            pair_count += dict_count[arg2 - num]\n        if num in dict_count:\n            dict_count[num] += 1\n        else:\n            dict_count[num] = 1\n    return pair_count']",100000,1.0577969000005396,1.084484611000662,1.111891900000046,N/A
p4_sum_array_pairs,prompt_6,88,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += counter[arg2 - num]\n        counter[num] += 1\n    return pairs']",1000,0.013821400003507733,0.014291374999593244,0.017077900003641844,N/A
p4_sum_array_pairs,prompt_6,88,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += counter[arg2 - num]\n        counter[num] += 1\n    return pairs']",10000,0.13841250000405125,0.14168285800100422,0.15003180000348948,N/A
p4_sum_array_pairs,prompt_6,88,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counter = defaultdict(int)\n    pairs = 0\n    for num in arg1:\n        pairs += counter[arg2 - num]\n        counter[num] += 1\n    return pairs']",100000,2.218082900013542,2.25342329699939,2.295115099987015,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    complements = dict()\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs_count += complements[complement]\n        if num not in complements:\n            complements[num] = 0\n        complements[num] += 1\n    return pairs_count']",1000,0.008846099997754209,0.009282057000236819,0.011694999993778765,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    complements = dict()\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs_count += complements[complement]\n        if num not in complements:\n            complements[num] = 0\n        complements[num] += 1\n    return pairs_count']",10000,0.09330770000815392,0.09549697699854733,0.09846419999666978,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    complements = dict()\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            pairs_count += complements[complement]\n        if num not in complements:\n            complements[num] = 0\n        complements[num] += 1\n    return pairs_count']",100000,1.3367938000010327,1.3678482360015913,1.4131856000021799,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    dict_counter = {}\n    pair_count = 0\n    for num in arg1:\n        counter_part = arg2 - num\n        if dict_counter.get(counter_part, 0) > 0:\n            pair_count += 1\n            dict_counter[counter_part] -= 1\n        else:\n            dict_counter[num] = dict_counter.get(num, 0) + 1\n    return pair_count']",1000,0.007428499986417592,0.007748482000461081,0.008405999993556179,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    dict_counter = {}\n    pair_count = 0\n    for num in arg1:\n        counter_part = arg2 - num\n        if dict_counter.get(counter_part, 0) > 0:\n            pair_count += 1\n            dict_counter[counter_part] -= 1\n        else:\n            dict_counter[num] = dict_counter.get(num, 0) + 1\n    return pair_count']",10000,0.0779255999950692,0.08023807599995053,0.08554539999749977,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    dict_counter = {}\n    pair_count = 0\n    for num in arg1:\n        counter_part = arg2 - num\n        if dict_counter.get(counter_part, 0) > 0:\n            pair_count += 1\n            dict_counter[counter_part] -= 1\n        else:\n            dict_counter[num] = dict_counter.get(num, 0) + 1\n    return pair_count']",100000,1.1864561999973375,1.202726595000422,1.2305857000028482,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in hashmap:\n            pairs_count += hashmap[counterpart]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",1000,0.006168499996419996,0.006488555999094387,0.007314999995287508,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in hashmap:\n            pairs_count += hashmap[counterpart]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",10000,0.06820049999805633,0.07002547800075262,0.07518260000506416,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    pairs_count = 0\n    for num in arg1:\n        counterpart = arg2 - num\n        if counterpart in hashmap:\n            pairs_count += hashmap[counterpart]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return pairs_count']",100000,1.0716414000053192,1.0938182419991063,1.1168343000026653,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[number] = count_dict.get(number, 0) + 1\n    return pair_count']",1000,0.006798500005970709,0.007111175000318326,0.007607599996845238,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[number] = count_dict.get(number, 0) + 1\n    return pair_count']",10000,0.07237399999576155,0.07429879500021343,0.07738859999517445,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        count_dict[number] = count_dict.get(number, 0) + 1\n    return pair_count']",100000,1.1209187999920687,1.1385067109994997,1.1627305000001797,N/A
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1: list, arg2: int) -> int:\n    count_pairs = 0\n    nums_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            count_pairs += nums_dict[complement]\n        elif num not in nums_dict:\n            nums_dict[num] = 0\n        nums_dict[num] += 1\n    return count_pairs']",1000,0,0,0,	 exception: 218371
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1: list, arg2: int) -> int:\n    count_pairs = 0\n    nums_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            count_pairs += nums_dict[complement]\n        elif num not in nums_dict:\n            nums_dict[num] = 0\n        nums_dict[num] += 1\n    return count_pairs']",10000,0,0,0,	 exception: 218371
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1: list, arg2: int) -> int:\n    count_pairs = 0\n    nums_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums_dict:\n            count_pairs += nums_dict[complement]\n        elif num not in nums_dict:\n            nums_dict[num] = 0\n        nums_dict[num] += 1\n    return count_pairs']",100000,0,0,0,	 exception: 218371
p4_sum_array_pairs,prompt_6,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    mem = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",1000,0.00673899998946581,0.007062750000768574,0.0076898999977856874,N/A
p4_sum_array_pairs,prompt_6,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    mem = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",10000,0.07261060000746511,0.07441353799993522,0.07830150000518188,N/A
p4_sum_array_pairs,prompt_6,94,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    count = 0\n    mem = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in mem:\n            count += mem[complement]\n        mem[elem] = mem.get(elem, 0) + 1\n    return count']",100000,1.1281316999957198,1.1475902679996215,1.1756454999995185,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    pair_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in temp_dict:\n            pair_count += temp_dict[difference]\n        if i in temp_dict:\n            temp_dict[i] += 1\n        else:\n            temp_dict[i] = 1\n    return pair_count']",1000,0.006158100004540756,0.0064154020004207266,0.007154799997806549,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    pair_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in temp_dict:\n            pair_count += temp_dict[difference]\n        if i in temp_dict:\n            temp_dict[i] += 1\n        else:\n            temp_dict[i] = 1\n    return pair_count']",10000,0.06711380000342615,0.06888046699939877,0.07478129999071825,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    temp_dict = {}\n    pair_count = 0\n    for i in arg1:\n        difference = arg2 - i\n        if difference in temp_dict:\n            pair_count += temp_dict[difference]\n        if i in temp_dict:\n            temp_dict[i] += 1\n        else:\n            temp_dict[i] = 1\n    return pair_count']",100000,1.068902099999832,1.0927877729998727,1.1358514000021387,N/A
p4_sum_array_pairs,prompt_6,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.00445670000044629,0.004746094000292942,0.006887199997436255,N/A
p4_sum_array_pairs,prompt_6,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05478940000466537,0.05740330999964499,0.06397849999484606,N/A
p4_sum_array_pairs,prompt_6,96,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8515520999935688,0.8725036399996315,0.9004026999900816,N/A
p4_sum_array_pairs,prompt_6,97,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    diffs = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in diffs:\n            count += diffs[diff]\n        if num in diffs:\n            diffs[num] += 1\n        else:\n            diffs[num] = 1\n    return count']",1000,0.006151100009446964,0.006655943000369007,0.011817200007499196,N/A
p4_sum_array_pairs,prompt_6,97,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    diffs = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in diffs:\n            count += diffs[diff]\n        if num in diffs:\n            diffs[num] += 1\n        else:\n            diffs[num] = 1\n    return count']",10000,0.06688779999967664,0.06943317100114654,0.0767043000087142,N/A
p4_sum_array_pairs,prompt_6,97,"['from typing import List\n\ndef funcImp(arg1: List[int], arg2: int) -> int:\n    diffs = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in diffs:\n            count += diffs[diff]\n        if num in diffs:\n            diffs[num] += 1\n        else:\n            diffs[num] = 1\n    return count']",100000,1.0795990000042366,1.1045122229996196,1.131011599994963,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return []\n    visited = set()\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            pairs.append((num, complement))\n        visited.add(num)\n    if not pairs:\n        return []\n    return pairs']",1000,0.004435599999851547,0.004701811999984784,0.006807500001741573,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return []\n    visited = set()\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            pairs.append((num, complement))\n        visited.add(num)\n    if not pairs:\n        return []\n    return pairs']",10000,0.05517570000665728,0.05815952899938566,0.0707401999970898,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return []\n    visited = set()\n    pairs = []\n    for num in arg1:\n        complement = arg2 - num\n        if complement in visited:\n            pairs.append((num, complement))\n        visited.add(num)\n    if not pairs:\n        return []\n    return pairs']",100000,0.8696632999926805,0.8927948319997813,0.9284173000050941,N/A
p4_sum_array_pairs,prompt_6,99,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    countPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            countPairs += 1\n        hashMap[num] = num\n    return countPairs']",1000,0.005182200009585358,0.005568965000420576,0.00723390000348445,N/A
p4_sum_array_pairs,prompt_6,99,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    countPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            countPairs += 1\n        hashMap[num] = num\n    return countPairs']",10000,0.057527099997969344,0.05987414100090973,0.06556770000315737,N/A
p4_sum_array_pairs,prompt_6,99,"['def funcImp(arg1, arg2):\n    hashMap = dict()\n    countPairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashMap:\n            countPairs += 1\n        hashMap[num] = num\n    return countPairs']",100000,0.9439780999964569,0.9693903709990264,1.0078489000006812,N/A
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",1000,0.00605899999209214,0.00633607700074208,0.006723700003931299,N/A
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",10000,0.06579359999159351,0.06811932599986903,0.07911219999368768,N/A
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    map = {}\n    for num in arg1:\n        if arg2 - num in map:\n            count += map[arg2 - num]\n        if num in map:\n            map[num] += 1\n        else:\n            map[num] = 1\n    return count']",100000,1.0773184999998193,1.1047426770001767,1.1421566999924835,N/A
