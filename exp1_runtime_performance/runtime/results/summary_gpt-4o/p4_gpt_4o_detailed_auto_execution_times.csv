problem,prompt_name,code_index,code_segment,Size,Min,Average,Max,Exception
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006175199989229441,0.006630823999876157,0.011310799978673458,N/A
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06874480005353689,0.0715547260013409,0.07924009999260306,N/A
p4_sum_array_pairs,prompt_1,1,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.117676499998197,1.1441284560004714,1.2871526998933405,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006235400098375976,0.006542114998446777,0.008446199935860932,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06931189994793385,0.07194827900617383,0.08568110002670437,N/A
p4_sum_array_pairs,prompt_1,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1252749999985099,1.1511519320029766,1.3212682999437675,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006228600046597421,0.006575235000345856,0.009831700008362532,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06853509997017682,0.07200564700295217,0.08936780004296452,N/A
p4_sum_array_pairs,prompt_1,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.119685599929653,1.1409754659992177,1.1894164000404999,N/A
p4_sum_array_pairs,prompt_1,4,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count_pairs += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count_pairs']",1000,0.006017999956384301,0.006748847994022072,0.014328400022350252,N/A
p4_sum_array_pairs,prompt_1,4,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count_pairs += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count_pairs']",10000,0.06842170003801584,0.07334201899939216,0.13857650000136346,N/A
p4_sum_array_pairs,prompt_1,4,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count_pairs += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count_pairs']",100000,1.11983290000353,1.1427372770081274,1.19487719994504,N/A
p4_sum_array_pairs,prompt_1,5,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.00620370008982718,0.0065212500013876705,0.009162100031971931,N/A
p4_sum_array_pairs,prompt_1,5,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06765149999409914,0.07118096200050786,0.08343830006197095,N/A
p4_sum_array_pairs,prompt_1,5,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1194888999452814,1.1433221420051995,1.2233165999641642,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",1000,0.006264699972234666,0.006493867002427578,0.008010599995031953,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",10000,0.06815899990033358,0.07099119500606321,0.08643890009261668,N/A
p4_sum_array_pairs,prompt_1,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",100000,1.123324100044556,1.1641480729996692,1.3782156000379473,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006150800036266446,0.0065554229961708186,0.009326100000180304,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06829500000458211,0.07241959199425764,0.09315249999053776,N/A
p4_sum_array_pairs,prompt_1,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1274563000770286,1.1460279409983196,1.4217877999180928,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",1000,0.004181199939921498,0.004670509001007303,0.007378699956461787,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",10000,0.05467529990710318,0.05756586500210688,0.06744619994424284,N/A
p4_sum_array_pairs,prompt_1,8,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",100000,0.869069300009869,0.8868460910080467,0.9299660000251606,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.006080999970436096,0.006889403999084606,0.013468300108797848,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06723270006477833,0.07126620100112632,0.10001940000802279,N/A
p4_sum_array_pairs,prompt_1,9,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1159595999633893,1.136078478997806,1.1895811000140384,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.00434560002759099,0.004589994999114424,0.0066374000161886215,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05287570005748421,0.05597507800441235,0.0623522000387311,N/A
p4_sum_array_pairs,prompt_1,10,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.866488799918443,0.888897739998065,0.9765155999921262,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.00612639996688813,0.006786730997264385,0.01189119997434318,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06840580003336072,0.07115346100530587,0.07781579997390509,N/A
p4_sum_array_pairs,prompt_1,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.122073300066404,1.1461031069967431,1.214298199978657,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006102900020778179,0.006523376000113785,0.01015340001322329,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06780190009158105,0.07159868100075982,0.08921270002610981,N/A
p4_sum_array_pairs,prompt_1,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1174338998971507,1.138176622003084,1.1917464999714866,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in complements:\n            count += complements[target]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.006060800049453974,0.006444018997717649,0.007593299960717559,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in complements:\n            count += complements[target]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06802920007612556,0.07032817700877786,0.07809560000896454,N/A
p4_sum_array_pairs,prompt_1,13,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in complements:\n            count += complements[target]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1134003000333905,1.1429472629993689,1.2320625999709591,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006208200007677078,0.006793880996992812,0.01059489999897778,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06760179996490479,0.07193884200183674,0.08758549997583032,N/A
p4_sum_array_pairs,prompt_1,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1282979999668896,1.1477440730051602,1.2934565000468865,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006246799952350557,0.006591554995393381,0.010500900098122656,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06768889992963523,0.07195741799543612,0.10985159990377724,N/A
p4_sum_array_pairs,prompt_1,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1166974999941885,1.139526192001067,1.2051274999976158,N/A
p4_sum_array_pairs,prompt_1,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006097599980421364,0.006571717000333592,0.008374199969694018,N/A
p4_sum_array_pairs,prompt_1,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06811450002714992,0.07095186400343664,0.09250680007971823,N/A
p4_sum_array_pairs,prompt_1,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1175437999190763,1.1413242420053575,1.2711918000131845,N/A
p4_sum_array_pairs,prompt_1,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006036299979314208,0.00649321099394001,0.008919599931687117,N/A
p4_sum_array_pairs,prompt_1,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.06805050000548363,0.07203367300215177,0.08992399997077882,N/A
p4_sum_array_pairs,prompt_1,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1195970999542624,1.1406963400030508,1.1974825999932364,N/A
p4_sum_array_pairs,prompt_1,18,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006192400003783405,0.006600084006786347,0.009022200014442205,N/A
p4_sum_array_pairs,prompt_1,18,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06791530002374202,0.07187296200194396,0.08197090006433427,N/A
p4_sum_array_pairs,prompt_1,18,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1186960999621078,1.138877234995598,1.225750599987805,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006063899956643581,0.006566433007828891,0.00940830004401505,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06747749994974583,0.07151022200472652,0.09120979998260736,N/A
p4_sum_array_pairs,prompt_1,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1164372999919578,1.1484764260030351,1.472626900067553,N/A
p4_sum_array_pairs,prompt_1,20,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006147199892438948,0.006691928994841874,0.012873300001956522,N/A
p4_sum_array_pairs,prompt_1,20,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06802730006165802,0.07115337500930764,0.08393790002446622,N/A
p4_sum_array_pairs,prompt_1,20,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1204782000277191,1.1373144549969583,1.1981647999491543,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006048599956557155,0.006640539004001767,0.01167230005376041,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06889290001709014,0.0714841319923289,0.07766129996161908,N/A
p4_sum_array_pairs,prompt_1,21,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1227144999429584,1.1529691820091101,1.3186281999805942,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0060715998988598585,0.006629079993581399,0.009946999954991043,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06775689998175949,0.0707679490011651,0.0806122999638319,N/A
p4_sum_array_pairs,prompt_1,22,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1141679999418557,1.1467230399989057,1.4230181999737397,N/A
p4_sum_array_pairs,prompt_1,23,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004606900038197637,0.004869334980612621,0.00820809998549521,N/A
p4_sum_array_pairs,prompt_1,23,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05644619988743216,0.05857254500384443,0.06753180001396686,N/A
p4_sum_array_pairs,prompt_1,23,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8860702000092715,0.9092992330004926,1.051637800061144,N/A
p4_sum_array_pairs,prompt_1,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",1000,0.006225900026038289,0.006434655002085492,0.00821250001899898,N/A
p4_sum_array_pairs,prompt_1,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",10000,0.06774789991322905,0.07064981399686075,0.077218999969773,N/A
p4_sum_array_pairs,prompt_1,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",100000,1.1228104999754578,1.1392537219962104,1.2208577999845147,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006027100025676191,0.0064698780060280115,0.00833720003720373,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06839449994731694,0.07125261600012892,0.07886969996616244,N/A
p4_sum_array_pairs,prompt_1,25,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1176689000567421,1.1399996609962546,1.2417971999384463,N/A
p4_sum_array_pairs,prompt_1,26,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006023499998264015,0.006509114004438743,0.0076627000235021114,N/A
p4_sum_array_pairs,prompt_1,26,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06862109992653131,0.07309313899721019,0.1510489999782294,N/A
p4_sum_array_pairs,prompt_1,26,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1234662999631837,1.1463172549929004,1.2599282000446692,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",1000,0.00615599995944649,0.006556684997631237,0.008051799959503114,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",10000,0.06828819995280355,0.07259257899830118,0.08917430008295923,N/A
p4_sum_array_pairs,prompt_1,27,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",100000,1.1214037000900134,1.143804897001246,1.2989423999097198,N/A
p4_sum_array_pairs,prompt_1,28,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = set()\n    for number in arg1:\n        if arg2 - number in lookup:\n            count += 1\n        lookup.add(number)\n    return count']",1000,0.004191100015304983,0.004507135997992009,0.005889399908483028,N/A
p4_sum_array_pairs,prompt_1,28,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = set()\n    for number in arg1:\n        if arg2 - number in lookup:\n            count += 1\n        lookup.add(number)\n    return count']",10000,0.05381579999811947,0.05748458300135098,0.10130680003203452,N/A
p4_sum_array_pairs,prompt_1,28,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = set()\n    for number in arg1:\n        if arg2 - number in lookup:\n            count += 1\n        lookup.add(number)\n    return count']",100000,0.8590451000491157,0.892719243997708,0.9947468000464141,N/A
p4_sum_array_pairs,prompt_1,29,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006349300034344196,0.006719217008212581,0.009716100059449673,N/A
p4_sum_array_pairs,prompt_1,29,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.0696307000471279,0.07298865600023419,0.08153580001089722,N/A
p4_sum_array_pairs,prompt_1,29,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.1687480999389663,1.1926168560038786,1.3002416999079287,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        target = arg2 - number\n        if target in complements:\n            complements[target] += 1\n        else:\n            complements[target] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006338899955153465,0.006607381996000186,0.00803759996779263,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        target = arg2 - number\n        if target in complements:\n            complements[target] += 1\n        else:\n            complements[target] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.07019310002215207,0.07344661399372854,0.08550589997321367,N/A
p4_sum_array_pairs,prompt_1,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        target = arg2 - number\n        if target in complements:\n            complements[target] += 1\n        else:\n            complements[target] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.173991300049238,1.19699989699875,1.2333805999951437,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006197799928486347,0.006627658996731043,0.009222300024703145,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.07039589993655682,0.07247247199527919,0.08188529999461025,N/A
p4_sum_array_pairs,prompt_1,31,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.1753974999301136,1.2001127180003095,1.341103499988094,N/A
p4_sum_array_pairs,prompt_1,32,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",1000,0.00601690006442368,0.007237469997489825,0.021812699967995286,N/A
p4_sum_array_pairs,prompt_1,32,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",10000,0.06785730004776269,0.0715839170012623,0.1031185999745503,N/A
p4_sum_array_pairs,prompt_1,32,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs']",100000,1.123523100046441,1.1381186049908865,1.1778456999454647,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006125000072643161,0.006635972999501974,0.011718799942173064,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06882309995125979,0.07089890600414947,0.07631699997000396,N/A
p4_sum_array_pairs,prompt_1,33,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.114395400043577,1.1340557409916072,1.19574780005496,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",1000,0.006056400015950203,0.006498424998717382,0.009970900020562112,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",10000,0.06841099995654076,0.07058220099774189,0.07707859994843602,N/A
p4_sum_array_pairs,prompt_1,34,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",100000,1.1173205999657512,1.1428723369946239,1.2208484000293538,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006236899993382394,0.006496832005213946,0.007845499902032316,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06828610005322844,0.07131169299245813,0.0793773999903351,N/A
p4_sum_array_pairs,prompt_1,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.122064600000158,1.14954387600068,1.296749799977988,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006236000102944672,0.00690756999887526,0.012526400038041174,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06827069993596524,0.07084881699527613,0.0782185000134632,N/A
p4_sum_array_pairs,prompt_1,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1247073999838904,1.1566585180023685,1.3061382999876514,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006145799998193979,0.006590901996241882,0.009588100016117096,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06796779995784163,0.07161986500141211,0.08288500003982335,N/A
p4_sum_array_pairs,prompt_1,37,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.12410000001546,1.1472502239968163,1.2221447000047192,N/A
p4_sum_array_pairs,prompt_1,38,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count']",1000,0.006245699943974614,0.006968894994352013,0.026543299900367856,N/A
p4_sum_array_pairs,prompt_1,38,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count']",10000,0.06938959995750338,0.07148774400004186,0.08097529993392527,N/A
p4_sum_array_pairs,prompt_1,38,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count']",100000,1.1248753999825567,1.1463073359942064,1.2218760000541806,N/A
p4_sum_array_pairs,prompt_1,39,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",1000,0.006304199923761189,0.006510333002079278,0.006985499989241362,N/A
p4_sum_array_pairs,prompt_1,39,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",10000,0.06915510003454983,0.07072186399251222,0.081947400001809,N/A
p4_sum_array_pairs,prompt_1,39,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",100000,1.124675799976103,1.1438590749981814,1.2191329000052065,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        target = arg2 - number\n        count_pairs += count_map.get(target, 0)\n        count_map[number] = count_map.get(number, 0) + 1\n    return count_pairs']",1000,0.007668200065381825,0.00801951100351289,0.011022699996829033,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        target = arg2 - number\n        count_pairs += count_map.get(target, 0)\n        count_map[number] = count_map.get(number, 0) + 1\n    return count_pairs']",10000,0.07909690006636083,0.08284092800342478,0.09028830006718636,N/A
p4_sum_array_pairs,prompt_1,40,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        target = arg2 - number\n        count_pairs += count_map.get(target, 0)\n        count_map[number] = count_map.get(number, 0) + 1\n    return count_pairs']",100000,1.2620523000368848,1.2880034249974415,1.3648223000345752,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.00632789998780936,0.006980382001493126,0.02563599997665733,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0689546000212431,0.07141417999286205,0.07816040003672242,N/A
p4_sum_array_pairs,prompt_1,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1257462999783456,1.1444597539957613,1.2027035999344662,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006048699957318604,0.0064631109975744035,0.008206400088965893,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06822000001557171,0.07123363398830407,0.0832794999005273,N/A
p4_sum_array_pairs,prompt_1,42,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.114261099952273,1.1412058339943179,1.1843889999436215,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            pair_count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pair_count']",1000,0.00606559996958822,0.006499491999857127,0.008127099950797856,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            pair_count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pair_count']",10000,0.06770599994342774,0.07080151800066233,0.07867449999321252,N/A
p4_sum_array_pairs,prompt_1,43,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            pair_count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pair_count']",100000,1.1178226000629365,1.1394011159974615,1.201007700059563,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in hashmap:\n            count += hashmap[target]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.0060541999991983175,0.006609297002432868,0.008869600016623735,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in hashmap:\n            count += hashmap[target]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.06970039999578148,0.07271882500266656,0.10617539996746927,N/A
p4_sum_array_pairs,prompt_1,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in hashmap:\n            count += hashmap[target]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.1149930999381468,1.1424879990029149,1.28949850006029,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006022799992933869,0.006516359999077395,0.00810709991492331,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06726369995158166,0.07109670900390483,0.07884810003452003,N/A
p4_sum_array_pairs,prompt_1,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1228996999561787,1.1494566289975774,1.2570797000080347,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006178200012072921,0.006664300005650148,0.013464599964208901,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06798590009566396,0.07305706000537611,0.15357869991566986,N/A
p4_sum_array_pairs,prompt_1,46,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1206403999822214,1.1413160680001602,1.2092282000230625,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006210400024428964,0.006520549992565065,0.008879499975591898,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06892460002563894,0.07087565699708648,0.07720729999709874,N/A
p4_sum_array_pairs,prompt_1,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1259052000241354,1.1448838330036961,1.2471364999655634,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006071300012990832,0.00671812299406156,0.011229499941691756,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06845040002372116,0.07070218699867838,0.07766429998446256,N/A
p4_sum_array_pairs,prompt_1,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1217476000310853,1.1428549410158302,1.20875160000287,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, 1]\ntarget_sum = 6\npass']",1000,0.0061425999738276005,0.006471439993474632,0.007992399972863495,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, 1]\ntarget_sum = 6\npass']",10000,0.06920060003176332,0.07109572899993509,0.07845360005740076,N/A
p4_sum_array_pairs,prompt_1,49,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, 1]\ntarget_sum = 6\npass']",100000,1.118791799992323,1.1445799329935107,1.2831124999793246,N/A
p4_sum_array_pairs,prompt_1,50,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pairs_count']",1000,0.006158499978482723,0.006588297003181651,0.009905299986712635,N/A
p4_sum_array_pairs,prompt_1,50,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pairs_count']",10000,0.06780920003075153,0.071287800995633,0.08310419996269047,N/A
p4_sum_array_pairs,prompt_1,50,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pairs_count']",100000,1.1111410999437794,1.1515940109966323,1.4819464000174776,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.0042143999598920345,0.0046012250008061525,0.006530000013299286,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.053972800029441714,0.056935610997024926,0.07041609997395426,N/A
p4_sum_array_pairs,prompt_1,51,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8652883999748155,0.8914000170002692,0.9806621000170708,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",1000,0.006033899961039424,0.006514615006744861,0.007732899975962937,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",10000,0.06855199998244643,0.07136603099526838,0.07953610003460199,N/A
p4_sum_array_pairs,prompt_1,52,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",100000,1.1231512000085786,1.1501234619959724,1.245135199977085,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006205699988640845,0.006599206001264974,0.010040899971500039,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06883830006700009,0.07114064599969425,0.09214680001605302,N/A
p4_sum_array_pairs,prompt_1,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1272440999746323,1.1471009870036506,1.3317154999822378,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006065199966542423,0.006607854997273534,0.010973300086334348,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06919830001424998,0.07182866100454703,0.08243029995355755,N/A
p4_sum_array_pairs,prompt_1,54,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1189286999870092,1.1399490580114071,1.241876699961722,N/A
p4_sum_array_pairs,prompt_1,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",1000,0.006889599957503378,0.007190216000890359,0.00976509996689856,N/A
p4_sum_array_pairs,prompt_1,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",10000,0.07365030003711581,0.07950077499612235,0.1786191000137478,N/A
p4_sum_array_pairs,prompt_1,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",100000,1.1848815999692306,1.2085604899993632,1.2938194000162184,N/A
p4_sum_array_pairs,prompt_1,56,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0068938999902457,0.007282087996136397,0.00928959995508194,N/A
p4_sum_array_pairs,prompt_1,56,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07504849997349083,0.07678505900199525,0.08376519999001175,N/A
p4_sum_array_pairs,prompt_1,56,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.1871772999875247,1.2123549149988684,1.304344900068827,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006369699956849217,0.006592382000526413,0.007745100068859756,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.07007559994235635,0.07337088699103334,0.09666030004154891,N/A
p4_sum_array_pairs,prompt_1,57,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.176829900010489,1.1999891319987364,1.3104458999587223,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006140900077298284,0.0064943120093084875,0.007800799910910428,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0680168999824673,0.07147157199680805,0.08337190002202988,N/A
p4_sum_array_pairs,prompt_1,58,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.123053399962373,1.1445214109972586,1.2180275999708101,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006210999912582338,0.006555863993708044,0.008589199976995587,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06886270001996309,0.0712307560048066,0.07942039996851236,N/A
p4_sum_array_pairs,prompt_1,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1137782000005245,1.138354186998913,1.254233399988152,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006112399976700544,0.006630612992448732,0.009936699992977083,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06860350002534688,0.07160865898826159,0.07852969993837178,N/A
p4_sum_array_pairs,prompt_1,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.119612899958156,1.1395033439982216,1.1999474000185728,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in freq:\n            count += freq[complementary]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006094600073993206,0.006625760996248573,0.008624100009910762,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in freq:\n            count += freq[complementary]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06757070007734,0.07111286200582981,0.08172669995110482,N/A
p4_sum_array_pairs,prompt_1,61,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complementary = arg2 - num\n        if complementary in freq:\n            count += freq[complementary]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.117824799963273,1.1546319289912936,1.299196599982679,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006280199973843992,0.006530268996721133,0.00832949997857213,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06864810001570731,0.07159047399414703,0.08996749995276332,N/A
p4_sum_array_pairs,prompt_1,62,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1169450000161305,1.1416053130012005,1.1860172000015154,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006250499980524182,0.006811482002958656,0.011154499952681363,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0680230000289157,0.07244311800342984,0.10714580002240837,N/A
p4_sum_array_pairs,prompt_1,63,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1180482000345364,1.1376092910009903,1.214854700025171,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.006126900087110698,0.006558356002205983,0.01069849997293204,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06812589999753982,0.07108160099829547,0.0829434999031946,N/A
p4_sum_array_pairs,prompt_1,64,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1203135000541806,1.1479801790078636,1.2755117999622598,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for value in arg1:\n        complement = arg2 - value\n        if complement in seen:\n            count += seen[complement]\n        if value in seen:\n            seen[value] += 1\n        else:\n            seen[value] = 1\n    return count']",1000,0.0061648000264540315,0.006546502998098731,0.009482500026933849,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for value in arg1:\n        complement = arg2 - value\n        if complement in seen:\n            count += seen[complement]\n        if value in seen:\n            seen[value] += 1\n        else:\n            seen[value] = 1\n    return count']",10000,0.06924949993845075,0.07141683300258592,0.08085750008467585,N/A
p4_sum_array_pairs,prompt_1,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for value in arg1:\n        complement = arg2 - value\n        if complement in seen:\n            count += seen[complement]\n        if value in seen:\n            seen[value] += 1\n        else:\n            seen[value] = 1\n    return count']",100000,1.1093044999288395,1.1535511050035712,1.6438628999749199,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006060699932277203,0.007725641990546137,0.049865700071677566,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06819949997588992,0.07139287900412455,0.08489759999793023,N/A
p4_sum_array_pairs,prompt_1,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1214477999601513,1.1468717519962228,1.378932600026019,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006050699972547591,0.006550799008691683,0.008369900053367019,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06838609999977052,0.07130120099987834,0.0808309999993071,N/A
p4_sum_array_pairs,prompt_1,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1191880000988021,1.1394559840043075,1.1970530999824405,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.004538999986834824,0.004773256002226845,0.006066099973395467,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.05694959999527782,0.05977813900099136,0.07157759997062385,N/A
p4_sum_array_pairs,prompt_1,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,0.8854463000316173,0.9056707269931212,0.9852664999198169,N/A
p4_sum_array_pairs,prompt_1,69,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",1000,0.006833599996753037,0.007206593998707831,0.00946450000628829,N/A
p4_sum_array_pairs,prompt_1,69,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",10000,0.07258720009122044,0.07707827899605035,0.10070109996013343,N/A
p4_sum_array_pairs,prompt_1,69,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",100000,1.179089599987492,1.204255295001203,1.3180306000867859,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006070500006899238,0.006512621996225789,0.009385299985297024,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06768710003234446,0.07057890700409189,0.08069840003736317,N/A
p4_sum_array_pairs,prompt_1,70,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.123731799889356,1.142357489001006,1.2404004000127316,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0061237000627443194,0.006561832998413592,0.009416199987754226,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06682360009290278,0.07071120600332506,0.09010350005701184,N/A
p4_sum_array_pairs,prompt_1,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1192896999418736,1.1490090919984504,1.299250700045377,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0060764000518247485,0.0066718309978023175,0.009374499903060496,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06741689995396882,0.07105634799809195,0.08059769996907562,N/A
p4_sum_array_pairs,prompt_1,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1236198000842705,1.1498923970048782,1.2803407000610605,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.0060418000211939216,0.006748033999465406,0.014494700008071959,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06777819991111755,0.07164404800045304,0.079527199966833,N/A
p4_sum_array_pairs,prompt_1,73,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.129025400034152,1.149676945998799,1.253387299948372,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006256700027734041,0.0065062280010897665,0.009216799982823431,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06909880007151514,0.07117306700325571,0.07848599995486438,N/A
p4_sum_array_pairs,prompt_1,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1093424001010135,1.1368188670044765,1.2925818000221625,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.006240300019271672,0.006524972000624985,0.009051900007762015,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.0687867000233382,0.07111514099524356,0.08408459997735918,N/A
p4_sum_array_pairs,prompt_1,75,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1198616001056507,1.1433167070057244,1.221906500053592,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",1000,0.005982900038361549,0.006554990997537971,0.009697299916297197,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",10000,0.06732339994050562,0.0712085340009071,0.08073839999269694,N/A
p4_sum_array_pairs,prompt_1,76,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",100000,1.117881500045769,1.138579745000461,1.3474353000055999,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.005985500058159232,0.006489993003197014,0.00801979994866997,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06785629992373288,0.07082292400184087,0.0807249000063166,N/A
p4_sum_array_pairs,prompt_1,77,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1233077000360936,1.144133498001611,1.2793333999579772,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",1000,0.006021699984557927,0.006568515002727509,0.010453600087203085,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",10000,0.06908219994511455,0.0712270890083164,0.08126510004512966,N/A
p4_sum_array_pairs,prompt_1,78,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",100000,1.1222281999653205,1.148604012997821,1.2135954999830574,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006196800037287176,0.006582872993312776,0.010719000012613833,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0698339999653399,0.0717396829975769,0.08094000001437962,N/A
p4_sum_array_pairs,prompt_1,79,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1233033000025898,1.1382076390075964,1.2139171999879181,N/A
p4_sum_array_pairs,prompt_1,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        elif number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006095399963669479,0.006659300001338124,0.013040499994531274,N/A
p4_sum_array_pairs,prompt_1,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        elif number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06908369995653629,0.07228690900374204,0.09347159997560084,N/A
p4_sum_array_pairs,prompt_1,80,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        elif number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.11807020008564,1.1538759990036487,1.3998774000210688,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006150300032459199,0.008053691006498411,0.020027199992910028,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06889190000947565,0.07147873799898662,0.08323280001059175,N/A
p4_sum_array_pairs,prompt_1,81,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1207206000108272,1.1365509209933224,1.183448399999179,N/A
p4_sum_array_pairs,prompt_1,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.006136000039987266,0.006580276001477614,0.007883199956268072,N/A
p4_sum_array_pairs,prompt_1,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06757220008876175,0.07156261201016605,0.08384850004222244,N/A
p4_sum_array_pairs,prompt_1,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1170343999983743,1.1435289260011632,1.276300200028345,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006092900061048567,0.006507631011772901,0.0076966999331489205,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06840460002422333,0.07163173799635843,0.08527879999019206,N/A
p4_sum_array_pairs,prompt_1,83,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.122425099951215,1.1458268140000292,1.2229895000346005,N/A
p4_sum_array_pairs,prompt_1,84,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.006210099905729294,0.00646360099548474,0.007823500083759427,N/A
p4_sum_array_pairs,prompt_1,84,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06846800004132092,0.0715714489936363,0.08276799996383488,N/A
p4_sum_array_pairs,prompt_1,84,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1196679000277072,1.1438560350041371,1.308783799991943,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006239600013941526,0.00707486700732261,0.01968449994456023,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.067700200015679,0.07116763900150545,0.08100760006345809,N/A
p4_sum_array_pairs,prompt_1,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1161047000205144,1.1412119840038941,1.2304241000674665,N/A
p4_sum_array_pairs,prompt_1,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0063032000325620174,0.006525547000346705,0.007143000024370849,N/A
p4_sum_array_pairs,prompt_1,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06924019998405129,0.07097392900148407,0.07960329996421933,N/A
p4_sum_array_pairs,prompt_1,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1117768000112846,1.1402974190027453,1.2414975999854505,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006042999913915992,0.006499930992722511,0.007477500010281801,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06806620000861585,0.07144427600200288,0.08375440002419055,N/A
p4_sum_array_pairs,prompt_1,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1260837999871,1.1465217319945804,1.311519099981524,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006280000088736415,0.006510214993031695,0.00781099998857826,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06855540000833571,0.07123383000842295,0.08607129997108132,N/A
p4_sum_array_pairs,prompt_1,88,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1257532999152318,1.1444796609971672,1.1914770000148565,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    arr = arg1\n    target_sum = arg2\n    seen = {}\n    count = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006214300054125488,0.0065965760115068404,0.012963399989530444,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    arr = arg1\n    target_sum = arg2\n    seen = {}\n    count = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06863710004836321,0.07100981900002808,0.07988489989656955,N/A
p4_sum_array_pairs,prompt_1,89,"['def funcImp(arg1, arg2):\n    arr = arg1\n    target_sum = arg2\n    seen = {}\n    count = 0\n    for num in arr:\n        complement = target_sum - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1219308000290766,1.1415273780038115,1.1912766000023112,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.006044200039468706,0.006553681001532823,0.00869979988783598,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06813999998848885,0.0714681360044051,0.09110279998276383,N/A
p4_sum_array_pairs,prompt_1,90,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1296035000123084,1.1468992260016966,1.2116974999662489,N/A
p4_sum_array_pairs,prompt_1,91,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0060946999583393335,0.006425846997881308,0.007753600017167628,N/A
p4_sum_array_pairs,prompt_1,91,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06917799997609109,0.07247571500018239,0.09600800008047372,N/A
p4_sum_array_pairs,prompt_1,91,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1227997000096366,1.143687508001458,1.2418533000163734,N/A
p4_sum_array_pairs,prompt_1,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.007578100077807903,0.008092429991811513,0.013017899938859046,N/A
p4_sum_array_pairs,prompt_1,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.08046279998961836,0.0841454519983381,0.09761970001272857,N/A
p4_sum_array_pairs,prompt_1,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += seen.get(complement, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2643170000519603,1.28309236000292,1.3150363999884576,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.0043005000334233046,0.004568719003582373,0.006492700078524649,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.053864700021222234,0.05730662400485016,0.11591329996008426,N/A
p4_sum_array_pairs,prompt_1,93,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8757198000093922,0.8983088140003384,1.1737325999420136,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0060186999617144465,0.006440283997217193,0.0077803999884054065,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0674944999627769,0.07105998698971235,0.08036390005145222,N/A
p4_sum_array_pairs,prompt_1,94,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1181450999574736,1.1562141480064019,1.339655900024809,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00612360006198287,0.006517547998810187,0.009478099993430078,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06809549999888986,0.07160864001023583,0.08170859992969781,N/A
p4_sum_array_pairs,prompt_1,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1167568999808282,1.1434805290016812,1.4046190000372007,N/A
p4_sum_array_pairs,prompt_1,96,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.00619610003195703,0.006510003004223108,0.008269999991171062,N/A
p4_sum_array_pairs,prompt_1,96,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06878370000049472,0.07109513400471769,0.08159059996251017,N/A
p4_sum_array_pairs,prompt_1,96,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1234358999645337,1.1536889900011011,1.1838926000054926,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006125600077211857,0.0066544780053664,0.009232599986717105,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.068471800070256,0.07114146099891513,0.08627939992584288,N/A
p4_sum_array_pairs,prompt_1,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1179196001030505,1.138614373996388,1.1864644000306726,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in element_count:\n            pair_count += element_count[target]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.00605830003041774,0.006417879994260147,0.008105100016109645,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in element_count:\n            pair_count += element_count[target]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06797109998296946,0.07133870100369677,0.08578809991013259,N/A
p4_sum_array_pairs,prompt_1,98,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in element_count:\n            pair_count += element_count[target]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.1221836999757215,1.1440203099953943,1.2254394999472424,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006053499993868172,0.006425605005351827,0.007442399975843728,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06833250005729496,0.07159631700487808,0.08168099995236844,N/A
p4_sum_array_pairs,prompt_1,99,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.120385400019586,1.1379923099989537,1.1713970000855625,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        if arg2 - num in nums:\n            count += nums[arg2 - num]\n        nums[num] = nums.get(num, 0) + 1\n    return count']",1000,0.006708299973979592,0.007001412002136931,0.009792300057597458,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        if arg2 - num in nums:\n            count += nums[arg2 - num]\n        nums[num] = nums.get(num, 0) + 1\n    return count']",10000,0.07294990005902946,0.0749967560020741,0.08691129996441305,N/A
p4_sum_array_pairs,prompt_1,100,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        if arg2 - num in nums:\n            count += nums[arg2 - num]\n        nums[num] = nums.get(num, 0) + 1\n    return count']",100000,1.165309000061825,1.1838147680088877,1.2470143999671564,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006132800015620887,0.006674483004026115,0.008612999925389886,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06816539994906634,0.07137814799556509,0.08384189999196678,N/A
p4_sum_array_pairs,prompt_2,1,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1202477000188082,1.1442215560050681,1.2505005000857636,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",1000,0.006915199919603765,0.007157901000464335,0.008365000016056001,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",10000,0.0745274000801146,0.07713553499779664,0.08846720005385578,N/A
p4_sum_array_pairs,prompt_2,2,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",100000,1.1730632000835612,1.196653817014303,1.242430999991484,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, 1]\nsum_value = 6\npass']",1000,0.006270900019444525,0.006577621001051739,0.010691700037568808,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, 1]\nsum_value = 6\npass']",10000,0.06852889992296696,0.07093719900236466,0.07866700005251914,N/A
p4_sum_array_pairs,prompt_2,3,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, 1]\nsum_value = 6\npass']",100000,1.1279305000789464,1.145813050995348,1.1982987000374123,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",1000,0.0060662999749183655,0.006611002997960896,0.00862869992852211,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",10000,0.06870790000539273,0.07127352099865675,0.07983940001577139,N/A
p4_sum_array_pairs,prompt_2,4,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return pair_count']",100000,1.1226129999849945,1.1435002029931638,1.1963501999853179,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if num in hash_map:\n            count += hash_map[num]\n        difference = arg2 - num\n        if difference in hash_map:\n            hash_map[difference] += 1\n        else:\n            hash_map[difference] = 1\n    return count']",1000,0.006144799990579486,0.006802927997196093,0.012851099949330091,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if num in hash_map:\n            count += hash_map[num]\n        difference = arg2 - num\n        if difference in hash_map:\n            hash_map[difference] += 1\n        else:\n            hash_map[difference] = 1\n    return count']",10000,0.07094199990388006,0.0729983030015137,0.08867510000709444,N/A
p4_sum_array_pairs,prompt_2,5,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        if num in hash_map:\n            count += hash_map[num]\n        difference = arg2 - num\n        if difference in hash_map:\n            hash_map[difference] += 1\n        else:\n            hash_map[difference] = 1\n    return count']",100000,1.1774521000916138,1.2168195510003716,1.6959379999898374,N/A
p4_sum_array_pairs,prompt_2,6,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",1000,0.006029199925251305,0.0066237430006731305,0.012779499986208975,N/A
p4_sum_array_pairs,prompt_2,6,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",10000,0.0670497000683099,0.07055246800067834,0.07869989995379001,N/A
p4_sum_array_pairs,prompt_2,6,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen_elements:\n            count += seen_elements[target]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",100000,1.1156456000171602,1.1350104460027068,1.2042699999874458,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00613240001257509,0.006588303996250033,0.013330199988558888,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06765959993936121,0.07049593599746004,0.0802541000302881,N/A
p4_sum_array_pairs,prompt_2,7,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1205025999806821,1.1399571529985406,1.2269737999886274,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals arg2.\n    \n    Args:\n        arg1: List of integers.\n        arg2: An integer, the target sum.\n        \n    Returns:\n        The number of pairs whose sum equals arg2.\n    """"""\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.0060257000150159,0.006604340004269033,0.012564899981953204,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals arg2.\n    \n    Args:\n        arg1: List of integers.\n        arg2: An integer, the target sum.\n        \n    Returns:\n        The number of pairs whose sum equals arg2.\n    """"""\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06800179998390377,0.0717277949966956,0.08530889998655766,N/A
p4_sum_array_pairs,prompt_2,8,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals arg2.\n    \n    Args:\n        arg1: List of integers.\n        arg2: An integer, the target sum.\n        \n    Returns:\n        The number of pairs whose sum equals arg2.\n    """"""\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1299419000279158,1.147781876004301,1.2044130999129266,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006214700057171285,0.006594047992257402,0.009061599965207279,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06912620004732162,0.07221145800198428,0.16500099992845207,N/A
p4_sum_array_pairs,prompt_2,9,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1195992999710143,1.150327651995467,1.3525729000102729,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006221799994818866,0.006550871995277703,0.008319700020365417,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.0671907999785617,0.07060068100225181,0.11340930010192096,N/A
p4_sum_array_pairs,prompt_2,10,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.123592699994333,1.1431027670006733,1.2442729000467807,N/A
p4_sum_array_pairs,prompt_2,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006029600044712424,0.006460611001821235,0.007341700023971498,N/A
p4_sum_array_pairs,prompt_2,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06921180000063032,0.07142278300016187,0.07830850000027567,N/A
p4_sum_array_pairs,prompt_2,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.112297400017269,1.1389401800069026,1.2491502000484616,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count_pairs']",1000,0.006242700037546456,0.0066490610002074395,0.013702200027182698,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count_pairs']",10000,0.06731509999372065,0.07087826599716208,0.08452480006963015,N/A
p4_sum_array_pairs,prompt_2,12,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count_pairs']",100000,1.1132750998949632,1.136112511998508,1.2204193000216037,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0059668999165296555,0.006372892999788746,0.00877249997574836,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06675700005143881,0.06946578000672161,0.07760349998716265,N/A
p4_sum_array_pairs,prompt_2,13,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        if arg2 - num in seen:\n            count += seen[arg2 - num]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1159086000407115,1.1386962819984183,1.1985988999949768,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006221999996341765,0.0064677129953634,0.007684199954383075,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06873940001241863,0.07175717200036161,0.07863720005843788,N/A
p4_sum_array_pairs,prompt_2,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1255434999475256,1.142755548999412,1.1848368999781087,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006155100069008768,0.0065557800082024185,0.010238900082185864,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06903030001558363,0.0709232240007259,0.07651549996808171,N/A
p4_sum_array_pairs,prompt_2,15,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.109592100023292,1.1371999720018358,1.1855083999689668,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006974999909289181,0.007474707001820207,0.009931799955666065,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07662200008053333,0.07947644699946978,0.09472289995756,N/A
p4_sum_array_pairs,prompt_2,16,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.227934299968183,1.2489041819935665,1.2851813999004662,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062077000038698316,0.006738452996360138,0.010681400075554848,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06760679988656193,0.07134641899727284,0.08348829997703433,N/A
p4_sum_array_pairs,prompt_2,17,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.11336710001342,1.1342296819994226,1.1999837999464944,N/A
p4_sum_array_pairs,prompt_2,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006076699937693775,0.006606629000743851,0.010308500030077994,N/A
p4_sum_array_pairs,prompt_2,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06869819993153214,0.07137764299986885,0.08198669995181262,N/A
p4_sum_array_pairs,prompt_2,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1234686999814585,1.144812151005026,1.1934772999957204,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006036399980075657,0.006557030002586544,0.00995350000448525,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.0679500000551343,0.07127148699131794,0.09004119993187487,N/A
p4_sum_array_pairs,prompt_2,19,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1185829000314698,1.1380742630036549,1.1742563999723643,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006066699977964163,0.006438855001470074,0.007428099983371794,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06728079996537417,0.07120143600157462,0.08258130005560815,N/A
p4_sum_array_pairs,prompt_2,20,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1187708000652492,1.142286676998483,1.225363599951379,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            pair_count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return pair_count']",1000,0.006052199983969331,0.006411833001766354,0.0073293999303132296,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            pair_count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return pair_count']",10000,0.06770540005527437,0.07093931000330485,0.08113960002083331,N/A
p4_sum_array_pairs,prompt_2,21,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            pair_count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return pair_count']",100000,1.1202634000219405,1.1383047109981999,1.1953369999537244,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    seen_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in seen_counts:\n            pair_count += seen_counts[complement]\n        if num in seen_counts:\n            seen_counts[num] += 1\n        else:\n            seen_counts[num] = 1\n    return pair_count']",1000,0.006166199920699,0.006575565999373794,0.012317100074142218,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    seen_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in seen_counts:\n            pair_count += seen_counts[complement]\n        if num in seen_counts:\n            seen_counts[num] += 1\n        else:\n            seen_counts[num] = 1\n    return pair_count']",10000,0.06858510000165552,0.0708892799995374,0.08381480001844466,N/A
p4_sum_array_pairs,prompt_2,22,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    seen_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in seen_counts:\n            pair_count += seen_counts[complement]\n        if num in seen_counts:\n            seen_counts[num] += 1\n        else:\n            seen_counts[num] = 1\n    return pair_count']",100000,1.1190803999779746,1.1433441420143935,1.2625708000268787,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006083299987949431,0.006487323000328615,0.008551200036890805,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06859110004734248,0.07239731300622225,0.14690060005523264,N/A
p4_sum_array_pairs,prompt_2,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1206951000494882,1.1516469020047224,1.6160677999723703,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062478999607264996,0.006714944996638224,0.014173500007018447,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06798289995640516,0.0707777369953692,0.07758699997793883,N/A
p4_sum_array_pairs,prompt_2,24,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1169356000609696,1.1397953600028996,1.301294600008987,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.005995800020173192,0.006433691002894193,0.008303500013425946,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06906280003022403,0.07305431899381802,0.10450190003030002,N/A
p4_sum_array_pairs,prompt_2,25,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1180401999736205,1.1435913540050386,1.3262671999400482,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006132700014859438,0.006550133996643126,0.008091600029729307,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06868210004176944,0.07093742201221176,0.0866337000625208,N/A
p4_sum_array_pairs,prompt_2,26,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1187246000627056,1.1377591699990444,1.1806866000406444,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006150800036266446,0.00661626000655815,0.009092099964618683,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06898600002750754,0.07175992899923585,0.08423530007712543,N/A
p4_sum_array_pairs,prompt_2,27,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1078654999146238,1.1412678150017745,1.243030700017698,N/A
p4_sum_array_pairs,prompt_2,28,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006231999956071377,0.006543223008047789,0.0074583999812603,N/A
p4_sum_array_pairs,prompt_2,28,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06774889992084354,0.07211558399256318,0.0943224000511691,N/A
p4_sum_array_pairs,prompt_2,28,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.118484399979934,1.1390547869971488,1.2360096999909729,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006175899994559586,0.0066185609973035756,0.009986800025217235,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06847070006188005,0.07086671799304894,0.07741479994729161,N/A
p4_sum_array_pairs,prompt_2,29,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1151747000403702,1.1384385880012997,1.1727734999731183,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062154000625014305,0.006524958005174994,0.008087700000032783,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06724799994844943,0.07133985300082714,0.08426889998372644,N/A
p4_sum_array_pairs,prompt_2,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1187075999332592,1.1410286670015193,1.2952744000358507,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006061399937607348,0.006434111992130056,0.00835459993686527,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06733479991089553,0.07145086800330319,0.08992319996468723,N/A
p4_sum_array_pairs,prompt_2,31,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1204911000095308,1.1400297690043226,1.2603515998926014,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",1000,0.006238600006327033,0.006656794998561964,0.013492699945345521,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",10000,0.06873519998043776,0.07258343699970282,0.15488569997251034,N/A
p4_sum_array_pairs,prompt_2,32,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",100000,1.1221483000554144,1.1428089250053746,1.3256936999969184,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006198300048708916,0.006570980002870783,0.00985999999102205,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06793280004058033,0.07013774499180726,0.07719870004802942,N/A
p4_sum_array_pairs,prompt_2,33,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1217188999289647,1.1430711989977862,1.193826699978672,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006221399991773069,0.006462225002469495,0.008779300027526915,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06870800000615418,0.0714644879999105,0.0813715000404045,N/A
p4_sum_array_pairs,prompt_2,34,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1200941000133753,1.1381893990118988,1.1837246000068262,N/A
p4_sum_array_pairs,prompt_2,35,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            pairs_count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return pairs_count']",1000,0.006134700030088425,0.0065475269989110525,0.008958399994298816,N/A
p4_sum_array_pairs,prompt_2,35,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            pairs_count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return pairs_count']",10000,0.06899960001464933,0.07154663801193237,0.07907790003810078,N/A
p4_sum_array_pairs,prompt_2,35,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            pairs_count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return pairs_count']",100000,1.1189833000535145,1.1446522390109022,1.261437900015153,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006232800078578293,0.006751988996984437,0.009210399934090674,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06830550008453429,0.07098579699057155,0.08024359995033592,N/A
p4_sum_array_pairs,prompt_2,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.121892699971795,1.1414870180014987,1.1766403999645263,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006161600002087653,0.006758310999721288,0.009306399966590106,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.06916740001179278,0.07448679200024344,0.10448179999366403,N/A
p4_sum_array_pairs,prompt_2,37,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.1752827999880537,1.2019787659985013,1.3284119999734685,N/A
p4_sum_array_pairs,prompt_2,38,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",1000,0.006020999979227781,0.006582269998034462,0.01016820000950247,N/A
p4_sum_array_pairs,prompt_2,38,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",10000,0.06849139998666942,0.07131605899310671,0.08469270006753504,N/A
p4_sum_array_pairs,prompt_2,38,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",100000,1.119628000073135,1.150804990993347,1.3236853999551386,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006075699930079281,0.0065906390058808025,0.01013130007777363,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06747699994593859,0.07078861799789593,0.08123869996052235,N/A
p4_sum_array_pairs,prompt_2,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1209484999999404,1.1422126949985978,1.3355682000983506,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006065500085242093,0.0064480919949710365,0.007698100060224533,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06829149997793138,0.0716191769996658,0.08362729998771101,N/A
p4_sum_array_pairs,prompt_2,40,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.121849299990572,1.1394870709918905,1.3072350999573246,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",1000,0.006243199924938381,0.006581546992529184,0.014402000000700355,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",10000,0.06880320003256202,0.07088984500500374,0.07444709993433207,N/A
p4_sum_array_pairs,prompt_2,41,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",100000,1.1200762999942526,1.140165063997265,1.1850750999292359,N/A
p4_sum_array_pairs,prompt_2,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006247499957680702,0.006471025000791997,0.007777599967084825,N/A
p4_sum_array_pairs,prompt_2,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06837889994494617,0.07132640899508261,0.08009699999820441,N/A
p4_sum_array_pairs,prompt_2,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1207196000032127,1.1441476219915785,1.2016848999774083,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00601669994648546,0.006427913008956239,0.00772210001014173,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06833100004587322,0.07270314699737356,0.14928749995306134,N/A
p4_sum_array_pairs,prompt_2,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1132056000642478,1.134475504005095,1.1907480000518262,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006097099976614118,0.006596512000542134,0.009490299969911575,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0684082000516355,0.07154600099893287,0.08082589996047318,N/A
p4_sum_array_pairs,prompt_2,44,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1085449000820518,1.1419474540010561,1.2845574000384659,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006217300076968968,0.006513664002995938,0.008721600053831935,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06751189997885376,0.07110075300675817,0.08703870000317693,N/A
p4_sum_array_pairs,prompt_2,45,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1197804999537766,1.143887803000398,1.2121308000059798,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.0060685999924317,0.006757071007741615,0.011689000064507127,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06875000009313226,0.07271309599746019,0.08384730003308505,N/A
p4_sum_array_pairs,prompt_2,46,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1241976999444887,1.1427580589964055,1.2237176999915391,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",1000,0.006056700018234551,0.006890558997401968,0.019441999960690737,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",10000,0.06830630009062588,0.07193620600621216,0.12566689995583147,N/A
p4_sum_array_pairs,prompt_2,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",100000,1.1173573000123724,1.141597768001957,1.2075728999916464,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006201099953614175,0.006552783005172386,0.008680199971422553,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.0670045999577269,0.07094093899708241,0.0778682999080047,N/A
p4_sum_array_pairs,prompt_2,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1257144999690354,1.1410346869973,1.197819699998945,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    element_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count_pairs']",1000,0.006115500000305474,0.006799465009244159,0.010982100036926568,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    element_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count_pairs']",10000,0.06777389999479055,0.07123325900174678,0.08051539992447942,N/A
p4_sum_array_pairs,prompt_2,49,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    element_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count_pairs']",100000,1.12070179998409,1.1427863950049504,1.2246692999033257,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006000500055961311,0.006553610003320501,0.0093191999476403,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06875370000489056,0.07233001899672672,0.09607089997734874,N/A
p4_sum_array_pairs,prompt_2,50,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1189063999336213,1.1401487679977436,1.1753824999323115,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006084799999371171,0.006480929005192593,0.008848800091072917,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06756740005221218,0.07112077400204725,0.08253650006372482,N/A
p4_sum_array_pairs,prompt_2,51,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in complements:\n            count += complements[target]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1176234000595286,1.1403148979961406,1.177314699976705,N/A
p4_sum_array_pairs,prompt_2,52,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in num_map:\n            pair_count += num_map[target]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",1000,0.006053200107999146,0.00649034000816755,0.008210100000724196,N/A
p4_sum_array_pairs,prompt_2,52,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in num_map:\n            pair_count += num_map[target]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",10000,0.0684645000146702,0.07134230299736373,0.08455479994881898,N/A
p4_sum_array_pairs,prompt_2,52,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in num_map:\n            pair_count += num_map[target]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",100000,1.1191413999767974,1.143871921005193,1.267092699999921,N/A
p4_sum_array_pairs,prompt_2,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006007399992085993,0.006507377993548289,0.009380899951793253,N/A
p4_sum_array_pairs,prompt_2,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06987039989326149,0.07184616699814797,0.09347329998854548,N/A
p4_sum_array_pairs,prompt_2,53,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1177767000626773,1.1581917149934453,1.5201287999516353,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006209000013768673,0.006455892999656499,0.00878139992710203,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06794700003229082,0.07176523300237023,0.08654970000497997,N/A
p4_sum_array_pairs,prompt_2,54,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1144950999878347,1.1384488819958642,1.180837900028564,N/A
p4_sum_array_pairs,prompt_2,55,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",1000,0.006114999996498227,0.006544423989253118,0.009204900008626282,N/A
p4_sum_array_pairs,prompt_2,55,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",10000,0.06783509999513626,0.07125573799712584,0.0849339000415057,N/A
p4_sum_array_pairs,prompt_2,55,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",100000,1.1230944999260828,1.1394904240081087,1.1904992000199854,N/A
p4_sum_array_pairs,prompt_2,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006118600023910403,0.006572671007597819,0.00991939997766167,N/A
p4_sum_array_pairs,prompt_2,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06879489996936172,0.0715510080056265,0.08294290001504123,N/A
p4_sum_array_pairs,prompt_2,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1148033000063151,1.141693236998981,1.198082200018689,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    seen_elements = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen_elements:\n            count += 1\n        seen_elements.add(num)\n    return count']",1000,0.004241500049829483,0.0045422300032805655,0.006356099969707429,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    seen_elements = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen_elements:\n            count += 1\n        seen_elements.add(num)\n    return count']",10000,0.053797599975951016,0.05711226100451313,0.06863540003541857,N/A
p4_sum_array_pairs,prompt_2,57,"['def funcImp(arg1, arg2):\n    seen_elements = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen_elements:\n            count += 1\n        seen_elements.add(num)\n    return count']",100000,0.8751264999154955,0.893974267996382,1.0356529999990016,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.006209800019860268,0.006713928007520735,0.014133500051684678,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06926000001840293,0.07143411199795083,0.08256790006998926,N/A
p4_sum_array_pairs,prompt_2,58,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1221452000318095,1.139436347009614,1.1877822000533342,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062070999993011355,0.006602439001435414,0.009001699974760413,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06720269995275885,0.07100136399734765,0.08092460001353174,N/A
p4_sum_array_pairs,prompt_2,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1202111000893638,1.146625138000818,1.2660023999633268,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006243800045922399,0.006551103000529111,0.008039799984544516,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06938210001681,0.07178105300525203,0.10392310004681349,N/A
p4_sum_array_pairs,prompt_2,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1191191000398248,1.143790797003312,1.1955059999600053,N/A
p4_sum_array_pairs,prompt_2,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006039200001396239,0.0066531360032968225,0.009887099964544177,N/A
p4_sum_array_pairs,prompt_2,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06855930003803223,0.07183916799607687,0.08378519990947098,N/A
p4_sum_array_pairs,prompt_2,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1194484001025558,1.1396042190166191,1.237289599957876,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count']",1000,0.006084499997086823,0.006604135005036369,0.013280900078825653,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count']",10000,0.06786910002119839,0.07085936700692401,0.0787389000179246,N/A
p4_sum_array_pairs,prompt_2,62,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count']",100000,1.1164508999790996,1.1449379280046559,1.4387323000701144,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",1000,0.006069399998523295,0.006534737998154014,0.00924530008342117,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",10000,0.06871499994304031,0.07180004699970595,0.12145450001116842,N/A
p4_sum_array_pairs,prompt_2,63,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",100000,1.1240806999849156,1.1419342480041086,1.2095808999147266,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006118300021626055,0.006525520996656269,0.008464999962598085,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0681955999461934,0.07142310600494967,0.0841515000211075,N/A
p4_sum_array_pairs,prompt_2,64,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.123140100040473,1.1433653709979261,1.202716700034216,N/A
p4_sum_array_pairs,prompt_2,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0061932000098749995,0.00675765000632964,0.010450500063598156,N/A
p4_sum_array_pairs,prompt_2,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06911909999325871,0.07176087899599225,0.08411419996991754,N/A
p4_sum_array_pairs,prompt_2,65,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1157637999858707,1.1375576680060475,1.1812940000090748,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",1000,0.0060819999780505896,0.0066212640015874055,0.010638500098139048,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",10000,0.06805230001918972,0.07148445199709386,0.08468620001804084,N/A
p4_sum_array_pairs,prompt_2,66,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",100000,1.1229425999335945,1.143542143991217,1.201040600077249,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006174399983137846,0.006505078999325633,0.008196100010536611,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06908559997100383,0.07204082899610512,0.0797945000231266,N/A
p4_sum_array_pairs,prompt_2,67,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1207181999925524,1.1452927270031068,1.3604468000121415,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",1000,0.00601519993506372,0.0063302970014046875,0.007434000028297305,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",10000,0.06755249993875623,0.07122785399784334,0.08746880001854151,N/A
p4_sum_array_pairs,prompt_2,68,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",100000,1.1197896000230685,1.142248026006855,1.2239365000277758,N/A
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006173199974000454,0.006485906989546493,0.007908100029453635,N/A
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06833020003978163,0.07205436199787073,0.10271290002856404,N/A
p4_sum_array_pairs,prompt_2,69,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1218305999645963,1.1461834840010852,1.2792432999704033,N/A
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            count += nums[complement]\n        if num in nums:\n            nums[num] += 1\n        else:\n            nums[num] = 1\n    return count']",1000,0.006171499961055815,0.006636300998507067,0.009394199936650693,N/A
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            count += nums[complement]\n        if num in nums:\n            nums[num] += 1\n        else:\n            nums[num] = 1\n    return count']",10000,0.06742480001412332,0.0706301029957831,0.08254169998690486,N/A
p4_sum_array_pairs,prompt_2,70,"['def funcImp(arg1, arg2):\n    count = 0\n    nums = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in nums:\n            count += nums[complement]\n        if num in nums:\n            nums[num] += 1\n        else:\n            nums[num] = 1\n    return count']",100000,1.1234529999783263,1.1448004150064661,1.2433637999929488,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006178500014357269,0.006617210995173082,0.012681399937719107,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06761859997641295,0.0703772230015602,0.07690490002278239,N/A
p4_sum_array_pairs,prompt_2,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1188677999889478,1.1443818470009137,1.2475322000682354,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006234300090000033,0.006542208003811539,0.010869899997487664,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06710190000012517,0.07192317499197089,0.11352560005616397,N/A
p4_sum_array_pairs,prompt_2,72,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.116834199987352,1.1380907009996009,1.3316302000312135,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count_pairs += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count_pairs']",1000,0.006238700007088482,0.006537357005290687,0.009509600000455976,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count_pairs += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count_pairs']",10000,0.06881019996944815,0.0709641539992299,0.07627369998954237,N/A
p4_sum_array_pairs,prompt_2,73,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements:\n            count_pairs += elements[complement]\n        if number in elements:\n            elements[number] += 1\n        else:\n            elements[number] = 1\n    return count_pairs']",100000,1.11804500001017,1.1351009430026169,1.1821920999791473,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_map:\n            count += elements_map[complement]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",1000,0.005986100062727928,0.006707716999808326,0.011490199947729707,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_map:\n            count += elements_map[complement]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",10000,0.06803559989202768,0.07158847599639558,0.08926509995944798,N/A
p4_sum_array_pairs,prompt_2,74,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_map:\n            count += elements_map[complement]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",100000,1.1174111999571323,1.140439791000681,1.2140161999268457,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",1000,0.006037199986167252,0.006464547994546592,0.008830999955534935,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",10000,0.06709490006323904,0.0719828439981211,0.08815099997445941,N/A
p4_sum_array_pairs,prompt_2,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",100000,1.119725099997595,1.144836618002737,1.234873800072819,N/A
p4_sum_array_pairs,prompt_2,76,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.00621700007468462,0.006657815001672134,0.010533900000154972,N/A
p4_sum_array_pairs,prompt_2,76,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06883600004948676,0.07276684500626289,0.14621739997528493,N/A
p4_sum_array_pairs,prompt_2,76,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.113790100091137,1.1348113969969562,1.190513400011696,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.0062327999621629715,0.007190039001870901,0.015761100105009973,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06744520005304366,0.07125120899872854,0.08114000002387911,N/A
p4_sum_array_pairs,prompt_2,77,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1208891000133008,1.140385973006487,1.197061299928464,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",1000,0.006214499939233065,0.006568872011266649,0.008473800029605627,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",10000,0.06772979989182204,0.07180716099450364,0.08226599998306483,N/A
p4_sum_array_pairs,prompt_2,78,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",100000,1.12683730002027,1.1485966810025274,1.2913246999960393,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",1000,0.0044299999717622995,0.004844688002485782,0.00792949995957315,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",10000,0.05632460000924766,0.058559792003361505,0.0716163000324741,N/A
p4_sum_array_pairs,prompt_2,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs += 1\n        seen.add(num)\n    return pairs']",100000,0.8831309999804944,0.907302791007096,1.1053145999321714,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006075499928556383,0.006546458002412691,0.009325499995611608,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06696909992024302,0.06952228299924172,0.07473969995044172,N/A
p4_sum_array_pairs,prompt_2,80,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1184174000518396,1.1410654239996803,1.231218299944885,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",1000,0.006212000036612153,0.0065782929956913,0.009549199952743948,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",10000,0.06880220002494752,0.07175194099778309,0.08722079999279231,N/A
p4_sum_array_pairs,prompt_2,81,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",100000,1.1289742999942973,1.1564701050065924,1.576224899967201,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.0061582999769598246,0.006584805998718366,0.009468100033700466,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06734680000226945,0.07110520699061454,0.08110369998030365,N/A
p4_sum_array_pairs,prompt_2,82,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1244023999897763,1.1517830790008885,1.496176699991338,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006183899939060211,0.006645822999998927,0.008932900032959878,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06898410001304,0.07096449300297536,0.0799303000094369,N/A
p4_sum_array_pairs,prompt_2,83,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1241515999427065,1.1471979889983777,1.333059100084938,N/A
p4_sum_array_pairs,prompt_2,84,"['def funcImp(arg1, arg2):\n    num_counter = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counter:\n            count += num_counter[complement]\n        if num in num_counter:\n            num_counter[num] += 1\n        else:\n            num_counter[num] = 1\n    return count']",1000,0.006021999986842275,0.00652213100111112,0.008359000086784363,N/A
p4_sum_array_pairs,prompt_2,84,"['def funcImp(arg1, arg2):\n    num_counter = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counter:\n            count += num_counter[complement]\n        if num in num_counter:\n            num_counter[num] += 1\n        else:\n            num_counter[num] = 1\n    return count']",10000,0.067469900008291,0.07146102099912241,0.0906949999043718,N/A
p4_sum_array_pairs,prompt_2,84,"['def funcImp(arg1, arg2):\n    num_counter = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counter:\n            count += num_counter[complement]\n        if num in num_counter:\n            num_counter[num] += 1\n        else:\n            num_counter[num] = 1\n    return count']",100000,1.1213239000644535,1.1455772130051627,1.5144223000388592,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006213499931618571,0.006762780988356099,0.018477599951438606,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06897889997344464,0.07156849801074713,0.09192789997905493,N/A
p4_sum_array_pairs,prompt_2,85,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.117868300061673,1.1373681619937996,1.2323651999467984,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006014100043103099,0.006530441995710135,0.008894799975678325,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06730389990843832,0.0717086549976375,0.13204609998501837,N/A
p4_sum_array_pairs,prompt_2,86,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1242139999521896,1.1460221800021828,1.2664331999840215,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006025000009685755,0.006544445999898016,0.009933799970895052,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06770700006745756,0.07139139100094326,0.087563700042665,N/A
p4_sum_array_pairs,prompt_2,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1190322999609634,1.139935507006012,1.2020480999490246,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        else:\n            complements[arg2 - num] = complements.get(arg2 - num, 0) + 1\n    return count']",1000,0.007536599994637072,0.008159347004257142,0.011391100008040667,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        else:\n            complements[arg2 - num] = complements.get(arg2 - num, 0) + 1\n    return count']",10000,0.08343599992804229,0.0864420100057032,0.09812620002776384,N/A
p4_sum_array_pairs,prompt_2,88,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        else:\n            complements[arg2 - num] = complements.get(arg2 - num, 0) + 1\n    return count']",100000,1.292175600072369,1.310083449005615,1.350192500045523,N/A
p4_sum_array_pairs,prompt_2,89,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006203499971888959,0.0064868600014597174,0.009202899993397295,N/A
p4_sum_array_pairs,prompt_2,89,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06869570002891123,0.07112295099534094,0.0767475999891758,N/A
p4_sum_array_pairs,prompt_2,89,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.117860099999234,1.1360176110011526,1.1857744000153616,N/A
p4_sum_array_pairs,prompt_2,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006087800022214651,0.006767314005410299,0.010995300021022558,N/A
p4_sum_array_pairs,prompt_2,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06807180005125701,0.07247737799305469,0.0979508999735117,N/A
p4_sum_array_pairs,prompt_2,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1186123000225052,1.1390496610058471,1.1809417000040412,N/A
p4_sum_array_pairs,prompt_2,91,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006096000084653497,0.0064613529981579635,0.007563900086097419,N/A
p4_sum_array_pairs,prompt_2,91,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06830499996431172,0.07136794800171628,0.09508700005244464,N/A
p4_sum_array_pairs,prompt_2,91,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1206401999806985,1.1427403869957198,1.2379604999441653,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006071900017559528,0.006472766000078991,0.007880000048317015,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06771630002185702,0.07150803700787947,0.07967429992277175,N/A
p4_sum_array_pairs,prompt_2,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1196972000179812,1.1403219309984707,1.1998683999991044,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00624060002155602,0.006554805003106594,0.008781899930909276,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06934689998161048,0.07150530299404637,0.08015529997646809,N/A
p4_sum_array_pairs,prompt_2,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.12636640004348,1.1442539020022378,1.2117689999286085,N/A
p4_sum_array_pairs,prompt_2,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006076699937693775,0.006478013005107641,0.008315299986861646,N/A
p4_sum_array_pairs,prompt_2,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.0682600000873208,0.0715987140010111,0.07922319998033345,N/A
p4_sum_array_pairs,prompt_2,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1136527999769896,1.1406323599920143,1.2090761999133974,N/A
p4_sum_array_pairs,prompt_2,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006097399978898466,0.006612183996476233,0.008958499995060265,N/A
p4_sum_array_pairs,prompt_2,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.0688489000312984,0.07153055699891411,0.0857653000857681,N/A
p4_sum_array_pairs,prompt_2,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1187673000385985,1.142502180999145,1.202848399989307,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",1000,0.006187199964188039,0.006486362991854549,0.008009299985133111,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",10000,0.06898740003816783,0.07229410399333575,0.09820909996051341,N/A
p4_sum_array_pairs,prompt_2,96,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",100000,1.1256241999799386,1.144883063007146,1.1911194999702275,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006052300101146102,0.006691784989088774,0.009782399982213974,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06858289998490363,0.07103428699541837,0.08265749993734062,N/A
p4_sum_array_pairs,prompt_2,97,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1021647000452504,1.143868004003307,1.3320217001019046,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006024400005117059,0.006502501992508769,0.008802399970591068,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06741879996843636,0.07093501099501737,0.08504779997747391,N/A
p4_sum_array_pairs,prompt_2,98,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1251844000071287,1.1452592160005588,1.27780859998893,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006063999957405031,0.0065772130072582514,0.009573800023645163,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.0679691000841558,0.07149580499972216,0.08310369995888323,N/A
p4_sum_array_pairs,prompt_2,99,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1120581000577658,1.1311298939958214,1.1894565999973565,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",1000,0.006025300011970103,0.0064735949994064864,0.007843200000934303,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",10000,0.06886719993781298,0.07132367899990641,0.08616139995865524,N/A
p4_sum_array_pairs,prompt_2,100,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",100000,1.1199971999740228,1.1447971609968226,1.268981699948199,N/A
p4_sum_array_pairs,prompt_3,1,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0060703998897224665,0.006619660003343597,0.009884300059638917,N/A
p4_sum_array_pairs,prompt_3,1,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06882639997638762,0.07141529799555428,0.0882765999995172,N/A
p4_sum_array_pairs,prompt_3,1,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1194223000202328,1.1404969509993679,1.2370864000404254,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",1000,0.006174299982376397,0.0065914189966861155,0.009211000055074692,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",10000,0.06760950002353638,0.07149849199922756,0.0799622000195086,N/A
p4_sum_array_pairs,prompt_3,2,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",100000,1.1159128000726923,1.140004015014274,1.2259668000042439,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006133700022473931,0.006532504993956536,0.009756800020113587,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06820149999111891,0.0715716039959807,0.08601219998672605,N/A
p4_sum_array_pairs,prompt_3,3,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1243430000031367,1.1421367730083876,1.1919268999481574,N/A
p4_sum_array_pairs,prompt_3,4,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements:\n            count += elements[complement]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",1000,0.006069900002330542,0.0065980969951488075,0.011184100061655045,N/A
p4_sum_array_pairs,prompt_3,4,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements:\n            count += elements[complement]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",10000,0.06840430002193898,0.07121675299946219,0.08735549997072667,N/A
p4_sum_array_pairs,prompt_3,4,"['def funcImp(arg1, arg2):\n    count = 0\n    elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements:\n            count += elements[complement]\n        if num in elements:\n            elements[num] += 1\n        else:\n            elements[num] = 1\n    return count']",100000,1.1239979000529274,1.1433612620050553,1.2426661000354216,N/A
p4_sum_array_pairs,prompt_3,5,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        comp = arg2 - num\n        if complements.get(comp, 0) > 0:\n            count += 1\n            complements[comp] -= 1\n        elif num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.00665390002541244,0.007193789005978033,0.011156999971717596,N/A
p4_sum_array_pairs,prompt_3,5,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        comp = arg2 - num\n        if complements.get(comp, 0) > 0:\n            count += 1\n            complements[comp] -= 1\n        elif num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.07507409993559122,0.07729287300258875,0.0902538999216631,N/A
p4_sum_array_pairs,prompt_3,5,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        comp = arg2 - num\n        if complements.get(comp, 0) > 0:\n            count += 1\n            complements[comp] -= 1\n        elif num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1812333000125363,1.2059459269989747,1.374266800004989,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006237900000996888,0.006528369998559356,0.007997500011697412,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06908370007295161,0.07117971299798227,0.08244039991404861,N/A
p4_sum_array_pairs,prompt_3,6,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1234590999083593,1.142989944999572,1.1893086000345647,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006206999998539686,0.006495223998790607,0.008680100087076426,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06841169996187091,0.07200974598992615,0.08164589991793036,N/A
p4_sum_array_pairs,prompt_3,7,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.129982899990864,1.1454659949918278,1.206435399944894,N/A
p4_sum_array_pairs,prompt_3,8,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in freq:\n            count += freq[target]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006222500000149012,0.00656514099566266,0.008167299907654524,N/A
p4_sum_array_pairs,prompt_3,8,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in freq:\n            count += freq[target]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06803249998483807,0.07100099800387398,0.08033629995770752,N/A
p4_sum_array_pairs,prompt_3,8,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in freq:\n            count += freq[target]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1269065999658778,1.142530578012811,1.1926844000117853,N/A
p4_sum_array_pairs,prompt_3,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006070600007660687,0.006630918000591918,0.010213000001385808,N/A
p4_sum_array_pairs,prompt_3,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06889780005440116,0.0720727159990929,0.1294427999528125,N/A
p4_sum_array_pairs,prompt_3,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.121108999941498,1.1388216469984036,1.204117799992673,N/A
p4_sum_array_pairs,prompt_3,10,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006216099951416254,0.006784501001238823,0.0106542999856174,N/A
p4_sum_array_pairs,prompt_3,10,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.068641799967736,0.0712482379982248,0.08245230000466108,N/A
p4_sum_array_pairs,prompt_3,10,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1214635000796989,1.1462287550000474,1.2788494999986142,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.00624479993712157,0.006909809003118426,0.015189000056125224,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06885350006632507,0.07198140299879015,0.09613540000282228,N/A
p4_sum_array_pairs,prompt_3,11,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1260815999703482,1.1532959780050442,1.4563739999430254,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pairs_count']",1000,0.006235599983483553,0.00677377499290742,0.009769099997356534,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pairs_count']",10000,0.06929420004598796,0.07130272699287162,0.08966379996854812,N/A
p4_sum_array_pairs,prompt_3,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pairs_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pairs_count']",100000,1.126669800025411,1.1509359489963389,1.2880103000206873,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in counts:\n            pair_count += counts[target]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006047199945896864,0.006672646001679823,0.010049399919807911,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in counts:\n            pair_count += counts[target]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06950729992240667,0.07236661400413141,0.0844241000013426,N/A
p4_sum_array_pairs,prompt_3,13,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in counts:\n            pair_count += counts[target]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.125602100044489,1.1431558700010647,1.2260308000259101,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006187399965710938,0.006718526997137815,0.010231000022031367,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06922539998777211,0.07174578000442125,0.07870509999338537,N/A
p4_sum_array_pairs,prompt_3,14,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1296176000032574,1.1451887759962118,1.187093999935314,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006290300050750375,0.006685405006865039,0.010161099955439568,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06853559997398406,0.07078459600219503,0.082582600065507,N/A
p4_sum_array_pairs,prompt_3,15,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1272537999320775,1.1460861910053064,1.2664838000200689,N/A
p4_sum_array_pairs,prompt_3,16,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006192800006829202,0.006477533003780991,0.007819199934601784,N/A
p4_sum_array_pairs,prompt_3,16,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06856270006392151,0.0715877109952271,0.08357169991359115,N/A
p4_sum_array_pairs,prompt_3,16,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1233327999943867,1.1453300480078905,1.2315669000381604,N/A
p4_sum_array_pairs,prompt_3,17,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006221899995580316,0.006498163997894153,0.008501200005412102,N/A
p4_sum_array_pairs,prompt_3,17,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06929769995622337,0.07136872000177391,0.08206340007018298,N/A
p4_sum_array_pairs,prompt_3,17,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.120264400029555,1.145570507000666,1.2497891000239179,N/A
p4_sum_array_pairs,prompt_3,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006130099995061755,0.006627141002099961,0.009452699916437268,N/A
p4_sum_array_pairs,prompt_3,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06778030004352331,0.07188735899864696,0.08902660000603646,N/A
p4_sum_array_pairs,prompt_3,18,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.127336599980481,1.1485195160005242,1.2349393999902532,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.00623900000937283,0.006877529000630603,0.014675699989311397,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0683545001083985,0.07181700001237915,0.09370490000583231,N/A
p4_sum_array_pairs,prompt_3,19,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1192817999981344,1.1376688500051386,1.194682199973613,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006210300023667514,0.0065245580056216565,0.007525400025770068,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06859999999869615,0.07088209300418384,0.0817731999559328,N/A
p4_sum_array_pairs,prompt_3,20,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1317455999087542,1.146677596011432,1.2307248999131843,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.0042076000245288014,0.004497819993412122,0.006104400032199919,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05343849991913885,0.056412779005477205,0.07493460003752261,N/A
p4_sum_array_pairs,prompt_3,21,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.8688809000886977,0.8960013599984813,1.1015761999879032,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",1000,0.006082099978812039,0.006473043997539207,0.00828390009701252,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",10000,0.06735600007232279,0.0706773130048532,0.0986208999529481,N/A
p4_sum_array_pairs,prompt_3,22,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",100000,1.1233260000590235,1.1431962720048614,1.2022588000399992,N/A
p4_sum_array_pairs,prompt_3,23,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.0063174000242725015,0.006614257006440312,0.009650100022554398,N/A
p4_sum_array_pairs,prompt_3,23,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06842170003801584,0.07467264599981718,0.12167000002227724,N/A
p4_sum_array_pairs,prompt_3,23,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1265887999907136,1.179305140990764,1.802810899913311,N/A
p4_sum_array_pairs,prompt_3,24,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006042400025762618,0.0065815429948270325,0.009607400046661496,N/A
p4_sum_array_pairs,prompt_3,24,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.069183100014925,0.07109259400167503,0.07773580006323755,N/A
p4_sum_array_pairs,prompt_3,24,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1148843000410125,1.1421215219970327,1.2246320999693125,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if complements.get(target, 0) > 0:\n            count += 1\n            complements[target] -= 1\n        else:\n            complements[num] = complements.get(num, 0) + 1\n    return count']",1000,0.007163100061006844,0.007770073000574485,0.010939400061033666,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if complements.get(target, 0) > 0:\n            count += 1\n            complements[target] -= 1\n        else:\n            complements[num] = complements.get(num, 0) + 1\n    return count']",10000,0.07904680003412068,0.08214878099504858,0.0912308000260964,N/A
p4_sum_array_pairs,prompt_3,25,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        target = arg2 - num\n        if complements.get(target, 0) > 0:\n            count += 1\n            complements[target] -= 1\n        else:\n            complements[num] = complements.get(num, 0) + 1\n    return count']",100000,1.2244177999673411,1.2498289839923382,1.4054693999933079,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",1000,0.006137899938039482,0.006604721995536238,0.008882699999958277,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",10000,0.06784170004539192,0.07090537700918503,0.08259629993699491,N/A
p4_sum_array_pairs,prompt_3,26,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",100000,1.1019997000694275,1.1530384510068687,1.4703426000196487,N/A
p4_sum_array_pairs,prompt_3,27,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count\narr = [1, 5, 7, 1]\ntarget_sum = 6\npass']",1000,0.006043800036422908,0.006422998000634834,0.007514899945817888,N/A
p4_sum_array_pairs,prompt_3,27,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count\narr = [1, 5, 7, 1]\ntarget_sum = 6\npass']",10000,0.06734139996115118,0.07069272099295631,0.08688409999012947,N/A
p4_sum_array_pairs,prompt_3,27,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count\narr = [1, 5, 7, 1]\ntarget_sum = 6\npass']",100000,1.110508400015533,1.1443821370019578,1.3661175000015646,N/A
p4_sum_array_pairs,prompt_3,28,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006199399940669537,0.006527407000539824,0.008982299943454564,N/A
p4_sum_array_pairs,prompt_3,28,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06936439999844879,0.07160657900385559,0.09293550008442253,N/A
p4_sum_array_pairs,prompt_3,28,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1246974999085069,1.1424734789994546,1.245992899988778,N/A
p4_sum_array_pairs,prompt_3,29,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            count_pairs += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return count_pairs']",1000,0.006163700018078089,0.006515600001439453,0.007649300037883222,N/A
p4_sum_array_pairs,prompt_3,29,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            count_pairs += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return count_pairs']",10000,0.06898199999704957,0.07258516399655492,0.15552399994339794,N/A
p4_sum_array_pairs,prompt_3,29,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            count_pairs += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return count_pairs']",100000,1.1241750000044703,1.148563012999948,1.309283999959007,N/A
p4_sum_array_pairs,prompt_3,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006021799985319376,0.006585511001758277,0.01002289995085448,N/A
p4_sum_array_pairs,prompt_3,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06868319993373007,0.07215869000065141,0.0942608000477776,N/A
p4_sum_array_pairs,prompt_3,30,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1299702000105754,1.1592109659942798,1.213196900091134,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006065200082957745,0.006597717001568526,0.010444900020956993,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06964020000305027,0.0745836010016501,0.15086559997871518,N/A
p4_sum_array_pairs,prompt_3,31,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.135327799944207,1.1514195010019466,1.2353515999857336,N/A
p4_sum_array_pairs,prompt_3,32,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006151300040073693,0.006586159003200009,0.007958799949847162,N/A
p4_sum_array_pairs,prompt_3,32,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.07104840001557022,0.07376628100522793,0.10913210001308471,N/A
p4_sum_array_pairs,prompt_3,32,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.1889928999589756,1.2141123829956633,1.3445177999092266,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004333099932409823,0.004524919001851231,0.005794299999251962,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05539009999483824,0.057853411996038634,0.07851659995503724,N/A
p4_sum_array_pairs,prompt_3,33,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        if arg2 - number in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.8834773999406025,0.9137424810021184,1.0960028000408784,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062188999727368355,0.0065336820005904885,0.00918139994610101,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06841529998928308,0.07151219599065371,0.0874018999747932,N/A
p4_sum_array_pairs,prompt_3,34,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1060224000830203,1.1366667970002162,1.6459690000629053,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006349100032821298,0.00742196400417015,0.01919549994636327,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06954810000024736,0.07371833899640479,0.09467649995349348,N/A
p4_sum_array_pairs,prompt_3,35,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1502454999135807,1.211067297004629,1.3527695001102984,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",1000,0.006877699983306229,0.007447670000838116,0.01608410000335425,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",10000,0.07537660002708435,0.07948925299802795,0.09650109999347478,N/A
p4_sum_array_pairs,prompt_3,36,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",100000,1.2123624000232667,1.2632338760071433,1.3655063000041991,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006329499999992549,0.0067213980003725735,0.008149500004947186,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06989099993370473,0.0730804459983483,0.0830292000900954,N/A
p4_sum_array_pairs,prompt_3,37,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1663994000991806,1.2152555580006448,1.31817600002978,N/A
p4_sum_array_pairs,prompt_3,38,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006347999908030033,0.006942912999074906,0.022214600001461804,N/A
p4_sum_array_pairs,prompt_3,38,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07028799992986023,0.07336085200542584,0.09321459999773651,N/A
p4_sum_array_pairs,prompt_3,38,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1509340000338852,1.2041192850028164,1.3987297000130638,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",1000,0.006082899984903634,0.006579440999776125,0.00814150006044656,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",10000,0.07104670000262558,0.07382855100207962,0.08491660002619028,N/A
p4_sum_array_pairs,prompt_3,39,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",100000,1.1495629999553785,1.2054937819926999,1.5727134000044316,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",1000,0.006106599932536483,0.0068978709948714825,0.016959700034931302,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",10000,0.06934960000216961,0.07396164900623262,0.09576169995125383,N/A
p4_sum_array_pairs,prompt_3,40,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count']",100000,1.1561056999489665,1.2186866480007301,1.536972500034608,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006075900048017502,0.006466181996511295,0.0070312999887391925,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07014610001351684,0.07644262300571426,0.18235320004168898,N/A
p4_sum_array_pairs,prompt_3,41,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1485549999633804,1.2011205320025329,1.5135396999539807,N/A
p4_sum_array_pairs,prompt_3,42,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in a list whose sum equals a given sum.\n\n    Parameters:\n    arg1 (list of int): List of integers.\n    arg2 (int): Desired sum of pairs.\n\n    Returns:\n    int: Count of pairs whose sum equals the given sum.\n    """"""\n    count = 0\n    num_counts = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in num_counts:\n            count += num_counts[complement]\n        if number in num_counts:\n            num_counts[number] += 1\n        else:\n            num_counts[number] = 1\n    return count']",1000,0.006292499951086938,0.006873289992799982,0.012618499924428761,N/A
p4_sum_array_pairs,prompt_3,42,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in a list whose sum equals a given sum.\n\n    Parameters:\n    arg1 (list of int): List of integers.\n    arg2 (int): Desired sum of pairs.\n\n    Returns:\n    int: Count of pairs whose sum equals the given sum.\n    """"""\n    count = 0\n    num_counts = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in num_counts:\n            count += num_counts[complement]\n        if number in num_counts:\n            num_counts[number] += 1\n        else:\n            num_counts[number] = 1\n    return count']",10000,0.07019899995066226,0.07354050899390131,0.087471800041385,N/A
p4_sum_array_pairs,prompt_3,42,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in a list whose sum equals a given sum.\n\n    Parameters:\n    arg1 (list of int): List of integers.\n    arg2 (int): Desired sum of pairs.\n\n    Returns:\n    int: Count of pairs whose sum equals the given sum.\n    """"""\n    count = 0\n    num_counts = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in num_counts:\n            count += num_counts[complement]\n        if number in num_counts:\n            num_counts[number] += 1\n        else:\n            num_counts[number] = 1\n    return count']",100000,1.1483160000061616,1.1987977019965184,1.3074580000247806,N/A
p4_sum_array_pairs,prompt_3,43,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",1000,0.0062556000193580985,0.006719382002484053,0.008980800048448145,N/A
p4_sum_array_pairs,prompt_3,43,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",10000,0.06938279990572482,0.07415829999488778,0.09285919996909797,N/A
p4_sum_array_pairs,prompt_3,43,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",100000,1.145418200059794,1.2037519640033134,1.4161615000339225,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006213200045749545,0.007076878998195753,0.018567899940535426,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06902309996075928,0.07331380401272326,0.09142930002417415,N/A
p4_sum_array_pairs,prompt_3,44,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1413499999325722,1.1923388990026433,1.2831324000144377,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006253400002606213,0.006705391003051773,0.009384899982251227,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06946999998763204,0.0741152579919435,0.09298189997207373,N/A
p4_sum_array_pairs,prompt_3,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1399053999921307,1.1902280619938392,1.2877583999652416,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",1000,0.006256300024688244,0.0068939399975351985,0.012583700008690357,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",10000,0.06940470007248223,0.07403683400596492,0.09261799999512732,N/A
p4_sum_array_pairs,prompt_3,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count\npass']",100000,1.146203099982813,1.2169224199978634,1.3121082000434399,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006198600050993264,0.007178989996900782,0.011990500031970441,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06932670006062835,0.07552620199858211,0.14323409995995462,N/A
p4_sum_array_pairs,prompt_3,47,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1583209000527859,1.2172204200027046,1.4974484000122175,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006234999978914857,0.006700709998840466,0.009408600046299398,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06923769996501505,0.0747146200016141,0.10531250003259629,N/A
p4_sum_array_pairs,prompt_3,48,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.153222499997355,1.2137208349991124,1.3526974000269547,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004446100094355643,0.00495740000042133,0.00915489997714758,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.0570660000666976,0.06105570100597106,0.09195759997237474,N/A
p4_sum_array_pairs,prompt_3,49,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8968706999439746,1.7146264450019226,3.5185139999957755,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006364000029861927,0.007117563006468117,0.013015100033953786,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.06912040000315756,0.07386975599103607,0.10454719990957528,N/A
p4_sum_array_pairs,prompt_3,50,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if num in complements:\n            count += complements[num]\n        complement = arg2 - num\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.1913948999717832,2.5170627719990444,4.873027800000273,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if number in count_map:\n            count_map[number] += 1\n        else:\n            count_map[number] = 1\n    return count_pairs']",1000,0.005987899960018694,0.006340031005674973,0.00976819999050349,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if number in count_map:\n            count_map[number] += 1\n        else:\n            count_map[number] = 1\n    return count_pairs']",10000,0.06691529997624457,0.06922966600046493,0.08163949998561293,N/A
p4_sum_array_pairs,prompt_3,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in count_map:\n            count_pairs += count_map[complement]\n        if number in count_map:\n            count_map[number] += 1\n        else:\n            count_map[number] = 1\n    return count_pairs']",100000,1.113179299980402,2.8695810559939128,5.416837799944915,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.005997900036163628,0.006404055001912639,0.008534600026905537,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06800199998542666,0.07513342100312002,0.14036210009362549,N/A
p4_sum_array_pairs,prompt_3,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1200994999380782,2.833703628000803,4.66710000007879,N/A
p4_sum_array_pairs,prompt_3,53,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006013299920596182,0.006313640006119385,0.00785529997665435,N/A
p4_sum_array_pairs,prompt_3,53,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06719840003643185,0.07006764599937014,0.07349669991526753,N/A
p4_sum_array_pairs,prompt_3,53,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1195559999905527,1.7080111900018529,3.8082115000579506,N/A
p4_sum_array_pairs,prompt_3,54,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006229699938558042,0.006818003996741027,0.012909900047816336,N/A
p4_sum_array_pairs,prompt_3,54,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06958589993882924,0.07412603699369356,0.09359699999913573,N/A
p4_sum_array_pairs,prompt_3,54,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1453035000013188,1.1810691809968556,1.3571521000703797,N/A
p4_sum_array_pairs,prompt_3,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.0076469999039545655,0.008159689988242463,0.011582799954339862,N/A
p4_sum_array_pairs,prompt_3,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.08289079996757209,0.08784571000374854,0.11338029999751598,N/A
p4_sum_array_pairs,prompt_3,55,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        count += seen.get(target, 0)\n        seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2989789000712335,1.346813735002652,1.5339343000669032,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0062763000605627894,0.006983569998992607,0.012363600078970194,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06907060008961707,0.07229563700500875,0.09645399998407811,N/A
p4_sum_array_pairs,prompt_3,56,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1427917999681085,1.193011767998105,1.2601248000282794,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.0063084999565035105,0.006727098000701517,0.01123649999499321,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06997139996383339,0.07315910600009375,0.08803520002402365,N/A
p4_sum_array_pairs,prompt_3,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1461184000363573,1.183189853997901,1.3048217999748886,N/A
p4_sum_array_pairs,prompt_3,58,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.0061289999866858125,0.006665248996578157,0.011478599975816905,N/A
p4_sum_array_pairs,prompt_3,58,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.06899890000931919,0.0731301840103697,0.10244260006584227,N/A
p4_sum_array_pairs,prompt_3,58,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1378134000115097,1.1734494299942162,1.262388699920848,N/A
p4_sum_array_pairs,prompt_3,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004468400031328201,0.004834218001924455,0.008306799922138453,N/A
p4_sum_array_pairs,prompt_3,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05636439996305853,0.06062504300032742,0.07662989990785718,N/A
p4_sum_array_pairs,prompt_3,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.9100676999660209,0.9520606659981422,1.1210395999951288,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] = seen.get(num, 0) + 1\n    return count']",1000,0.006885200040414929,0.007442009014775977,0.010360600077547133,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] = seen.get(num, 0) + 1\n    return count']",10000,0.07478909997735173,0.07896487100166269,0.09957819990813732,N/A
p4_sum_array_pairs,prompt_3,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen and seen[complement] > 0:\n            count += 1\n            seen[complement] -= 1\n        else:\n            seen[num] = seen.get(num, 0) + 1\n    return count']",100000,1.2051931000314653,1.238689213001635,1.298888299963437,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            count += seen[complement]\n        if element in seen:\n            seen[element] += 1\n        else:\n            seen[element] = 1\n    return count']",1000,0.006258599925786257,0.006671528000151738,0.010826500016264617,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            count += seen[complement]\n        if element in seen:\n            seen[element] += 1\n        else:\n            seen[element] = 1\n    return count']",10000,0.06985279999207705,0.07386134800035507,0.10267050005495548,N/A
p4_sum_array_pairs,prompt_3,61,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen:\n            count += seen[complement]\n        if element in seen:\n            seen[element] += 1\n        else:\n            seen[element] = 1\n    return count']",100000,1.1523358999984339,1.1912972870049998,1.3252061000093818,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006097799981944263,0.006808905997313559,0.014993900083936751,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06904380000196397,0.07491306900512427,0.097635000012815,N/A
p4_sum_array_pairs,prompt_3,62,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1414933999767527,1.1916524280037266,1.2979387999512255,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count\npass']",1000,0.006265800097025931,0.006642454001121223,0.008458499913103878,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count\npass']",10000,0.0697793000144884,0.07387548599741421,0.09906839998438954,N/A
p4_sum_array_pairs,prompt_3,63,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count\npass']",100000,1.1471806999761611,1.1858182259905152,1.3744742999551818,N/A
p4_sum_array_pairs,prompt_3,64,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006312499986961484,0.00676532099605538,0.011468599899671972,N/A
p4_sum_array_pairs,prompt_3,64,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06967510003596544,0.0729191549983807,0.08414589997846633,N/A
p4_sum_array_pairs,prompt_3,64,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1457597999833524,1.1992976920015643,1.4484235000563785,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in freq_dict:\n            count_pairs += freq_dict[target]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",1000,0.006015200051479042,0.006728102000197396,0.010754499933682382,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in freq_dict:\n            count_pairs += freq_dict[target]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",10000,0.06901659991126508,0.07273266599862836,0.10212479997426271,N/A
p4_sum_array_pairs,prompt_3,65,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in freq_dict:\n            count_pairs += freq_dict[target]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",100000,1.1524880999932066,1.1899139149964322,1.6259571999544278,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006293800077401102,0.00659951800131239,0.008556499960832298,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06980089994613081,0.07300952699966728,0.09249000006821007,N/A
p4_sum_array_pairs,prompt_3,66,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1411211000522599,1.1846660060016438,1.2708320999518037,N/A
p4_sum_array_pairs,prompt_3,67,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006234099972061813,0.006816556002013386,0.0133477000053972,N/A
p4_sum_array_pairs,prompt_3,67,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06986899999901652,0.07379932099371217,0.09565769997425377,N/A
p4_sum_array_pairs,prompt_3,67,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1503831000300124,1.191583786001429,1.3531950999749824,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006121300044469535,0.0069630649988539515,0.015394999994896352,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06789000006392598,0.07369967100094073,0.11383400007616729,N/A
p4_sum_array_pairs,prompt_3,68,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1464413000503555,1.186027569003636,1.3591323000146076,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006223500007763505,0.00666830399655737,0.009066200000233948,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0691833000164479,0.07503139000269585,0.1142519999993965,N/A
p4_sum_array_pairs,prompt_3,69,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1501533999107778,1.1883034209988546,1.2452460000058636,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006226500030606985,0.00667893499834463,0.00853260001167655,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06918529991526157,0.07245108999544754,0.09090939990710467,N/A
p4_sum_array_pairs,prompt_3,70,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in num_dict:\n            count += num_dict[target]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.153334500035271,1.195635547998827,1.3124962999718264,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.0062423000345006585,0.007391131998738274,0.01223220000974834,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06981729995459318,0.07691000999766402,0.17279139999300241,N/A
p4_sum_array_pairs,prompt_3,71,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1540736000752077,1.1885186569974757,1.2560342999640852,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004599799984134734,0.004968444992555305,0.008722199941985309,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05718550004530698,0.06093632599920966,0.0742098999908194,N/A
p4_sum_array_pairs,prompt_3,72,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.9143385000061244,0.9599472179939039,1.1773508999031037,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_map:\n            count += element_map[complement]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",1000,0.006285100011155009,0.006971166003495455,0.012603800045326352,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_map:\n            count += element_map[complement]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",10000,0.06885419995523989,0.07229251500102692,0.08751119999215007,N/A
p4_sum_array_pairs,prompt_3,73,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_map:\n            count += element_map[complement]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",100000,1.151182199944742,1.1963692330068443,1.517999600037001,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",1000,0.006753799971193075,0.007202850009780377,0.009439900051802397,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",10000,0.07412740006111562,0.0796733270061668,0.11198459996376187,N/A
p4_sum_array_pairs,prompt_3,74,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        if arg2 - number in seen:\n            count += seen[arg2 - number]\n        seen[number] = seen.get(number, 0) + 1\n    return count']",100000,1.194101499975659,1.2362496129935607,1.3726558999624103,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004614599980413914,0.005022716996027157,0.008080500061623752,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05720770009793341,0.06196998699801043,0.12364770006388426,N/A
p4_sum_array_pairs,prompt_3,75,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.933342200005427,0.9610860139946453,1.0298885999945924,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.00460029998794198,0.005139581004623323,0.011970899999141693,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05703609995543957,0.06106998699367978,0.07837259990628809,N/A
p4_sum_array_pairs,prompt_3,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.9241209999890998,0.9649059019912966,1.039144100039266,N/A
p4_sum_array_pairs,prompt_3,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006267499993555248,0.006831520998384803,0.010727599961683154,N/A
p4_sum_array_pairs,prompt_3,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0701025000307709,0.07653247400303372,0.10340360004920512,N/A
p4_sum_array_pairs,prompt_3,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.151294100098312,1.1962896349956282,1.3198696000035852,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006280300091020763,0.006608527003554627,0.008830699953250587,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07022750005126,0.07513174299616367,0.09704949997831136,N/A
p4_sum_array_pairs,prompt_3,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1480459000449628,1.1988788800046313,1.6099272000137717,N/A
p4_sum_array_pairs,prompt_3,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",1000,0.004693599999882281,0.007314568000147119,0.019074499956332147,N/A
p4_sum_array_pairs,prompt_3,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",10000,0.05832960002589971,0.06541284200153313,0.1679334999062121,N/A
p4_sum_array_pairs,prompt_3,79,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",100000,0.9216116999741644,0.9629268599965144,1.4650653999997303,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count\nexample_array = [1, 5, 7, 1, 5]\nsum_value = 6\npass']",1000,0.0063461000099778175,0.0067836590018123385,0.009796799975447357,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count\nexample_array = [1, 5, 7, 1, 5]\nsum_value = 6\npass']",10000,0.06956610002089292,0.07468615499790758,0.09692050004377961,N/A
p4_sum_array_pairs,prompt_3,80,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count\nexample_array = [1, 5, 7, 1, 5]\nsum_value = 6\npass']",100000,1.1467200999613851,1.1894170669990125,1.6222684999229386,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006225299905054271,0.00671767600113526,0.010053899954073131,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06926130002830178,0.07392995599890127,0.10721359995659441,N/A
p4_sum_array_pairs,prompt_3,81,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1527171999914572,1.1867241140047553,1.37308460008353,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.006206599995493889,0.006946095002349466,0.01589480007532984,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.06960889999754727,0.07337659299490042,0.09256270003970712,N/A
p4_sum_array_pairs,prompt_3,82,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.1462523000082,1.1832739919959567,1.4703660999657586,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006181799923069775,0.006929359994828701,0.01369480008725077,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06983699998818338,0.07514024400035851,0.12623199995141476,N/A
p4_sum_array_pairs,prompt_3,83,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1459013000130653,1.1820618299918715,1.416641499963589,N/A
p4_sum_array_pairs,prompt_3,84,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",1000,0.00612339994404465,0.006641917994711548,0.009150300058536232,N/A
p4_sum_array_pairs,prompt_3,84,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",10000,0.06922050006687641,0.07387591999955476,0.08779000001959503,N/A
p4_sum_array_pairs,prompt_3,84,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",100000,1.1480125000234693,1.1881193280045408,1.307452299981378,N/A
p4_sum_array_pairs,prompt_3,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006244400050491095,0.006758331003366039,0.01165559992659837,N/A
p4_sum_array_pairs,prompt_3,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06924390001222491,0.07243140000617132,0.08988980005960912,N/A
p4_sum_array_pairs,prompt_3,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.153736500069499,1.1787254670017864,1.2476545000681654,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006147700012661517,0.006485936995595694,0.011189699987880886,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06797640002332628,0.07206675399444067,0.09192999999504536,N/A
p4_sum_array_pairs,prompt_3,86,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1512453999603167,1.17854492100887,1.2641068999655545,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006230199942365289,0.006888102000812068,0.012640099972486496,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06968469999264926,0.07565780399483629,0.11401480005588382,N/A
p4_sum_array_pairs,prompt_3,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.150130599969998,1.1918111090024468,1.6816092999652028,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",1000,0.004596099955961108,0.005037258003139869,0.008911299984902143,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",10000,0.05597489990759641,0.06136176799191162,0.11596319999080151,N/A
p4_sum_array_pairs,prompt_3,88,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",100000,0.9228483999613672,0.9590007739979773,1.0198259999742731,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006241500028409064,0.006849426990374923,0.012329400051385164,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06895179999992251,0.0752695450000465,0.10853179998230189,N/A
p4_sum_array_pairs,prompt_3,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1520773000083864,1.1880501159979031,1.5700958999805152,N/A
p4_sum_array_pairs,prompt_3,90,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006257900036871433,0.006822406009305269,0.009818400023505092,N/A
p4_sum_array_pairs,prompt_3,90,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06949469994287938,0.07369266400113701,0.09434349997900426,N/A
p4_sum_array_pairs,prompt_3,90,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1475874999305233,1.1753208420029841,1.2488130000419915,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.add((min(num, target), max(num, target)))\n        seen.add(num)\n    return len(pairs)']",1000,0.004546399926766753,0.0049028280016500505,0.007396500091999769,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.add((min(num, target), max(num, target)))\n        seen.add(num)\n    return len(pairs)']",10000,0.05697690008673817,0.06238172999350354,0.08431539998855442,N/A
p4_sum_array_pairs,prompt_3,91,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs = set()\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            pairs.add((min(num, target), max(num, target)))\n        seen.add(num)\n    return len(pairs)']",100000,0.9730518000433221,1.0106351620028726,1.0755196999525651,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006209000013768673,0.006874632993713021,0.012104100082069635,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07012050005141646,0.07500484099728055,0.11183150007855147,N/A
p4_sum_array_pairs,prompt_3,92,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1536999000236392,1.184973698008107,1.4569410000694916,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006140599958598614,0.006914946999168023,0.017400499898940325,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06984859996009618,0.0745505420002155,0.08593760000076145,N/A
p4_sum_array_pairs,prompt_3,93,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.150668799993582,1.1897944389958865,1.5748767999466509,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",1000,0.006211300031282008,0.00667616400285624,0.01048069994430989,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",10000,0.06864640000276268,0.07412696999963372,0.10219960007816553,N/A
p4_sum_array_pairs,prompt_3,94,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count']",100000,1.1521128999302164,1.1893409280048217,1.6295259000035003,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\npass']",1000,0.0062565000262111425,0.00679696099483408,0.009864000021480024,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\npass']",10000,0.06867459998466074,0.07491933999350295,0.08931670000310987,N/A
p4_sum_array_pairs,prompt_3,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\npass']",100000,1.1475285000633448,1.182265402005287,1.2611264999723062,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if number in complement_count:\n            complement_count[number] += 1\n        else:\n            complement_count[number] = 1\n    return pair_count']",1000,0.006263100076466799,0.0068335640034638346,0.012326000025495887,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if number in complement_count:\n            complement_count[number] += 1\n        else:\n            complement_count[number] = 1\n    return pair_count']",10000,0.07011520001105964,0.07460798700107261,0.13806219992693514,N/A
p4_sum_array_pairs,prompt_3,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if number in complement_count:\n            complement_count[number] += 1\n        else:\n            complement_count[number] = 1\n    return pair_count']",100000,1.150411400012672,1.1820125569973607,1.3127037000376731,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_numbers = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            count += seen_numbers[target]\n        if num in seen_numbers:\n            seen_numbers[num] += 1\n        else:\n            seen_numbers[num] = 1\n    return count']",1000,0.006034200079739094,0.006731035999255255,0.015636199968867004,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_numbers = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            count += seen_numbers[target]\n        if num in seen_numbers:\n            seen_numbers[num] += 1\n        else:\n            seen_numbers[num] = 1\n    return count']",10000,0.06984680006280541,0.07408738399855792,0.09411899989936501,N/A
p4_sum_array_pairs,prompt_3,97,"['def funcImp(arg1, arg2):\n    count = 0\n    seen_numbers = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen_numbers:\n            count += seen_numbers[target]\n        if num in seen_numbers:\n            seen_numbers[num] += 1\n        else:\n            seen_numbers[num] = 1\n    return count']",100000,1.151924500009045,1.194125617990503,1.3268913999199867,N/A
p4_sum_array_pairs,prompt_3,98,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006224100012332201,0.006860957002500072,0.016234399983659387,N/A
p4_sum_array_pairs,prompt_3,98,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0698465999448672,0.07438117099925876,0.09811630006879568,N/A
p4_sum_array_pairs,prompt_3,98,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.148970799986273,1.187565054994775,1.2601971999974921,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",1000,0.006224600016139448,0.006650828998535871,0.011428900063037872,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",10000,0.069518500007689,0.07344529000576586,0.09437790000811219,N/A
p4_sum_array_pairs,prompt_3,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",100000,1.1415022999281064,1.1828947429964318,1.3280734000727534,N/A
p4_sum_array_pairs,prompt_3,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006224299897439778,0.006844548992812633,0.011342299985699356,N/A
p4_sum_array_pairs,prompt_3,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06903910008259118,0.07338970500393771,0.08648080006241798,N/A
p4_sum_array_pairs,prompt_3,100,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1504991999827325,1.1854425450030248,1.4730416999664158,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",1000,0.006053099990822375,0.007417363994754851,0.017207100056111813,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",10000,0.0692505999468267,0.07453145299572497,0.11511530005373061,N/A
p4_sum_array_pairs,prompt_4,1,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",100000,1.1462941999780014,1.1778372609976213,1.2326639000093564,N/A
p4_sum_array_pairs,prompt_4,2,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.0062330999644473195,0.006644380001816898,0.010671199997887015,N/A
p4_sum_array_pairs,prompt_4,2,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06936440011486411,0.07427459800499492,0.09355680004227906,N/A
p4_sum_array_pairs,prompt_4,2,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1428013000404462,1.1752190849999897,1.2270578000461683,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006186199956573546,0.006779733997536824,0.016188599984161556,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06979360000696033,0.0737209279963281,0.09850829991046339,N/A
p4_sum_array_pairs,prompt_4,3,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1534448000602424,1.1829757309996056,1.2603716000448912,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006217399961315095,0.006621544001391157,0.011353699956089258,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06887540000025183,0.07426352999871597,0.10114980000071228,N/A
p4_sum_array_pairs,prompt_4,4,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1477234999183565,1.1914764609967825,1.3456194000318646,N/A
p4_sum_array_pairs,prompt_4,5,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",1000,0.006237399997189641,0.0067699210066348315,0.009380099945701659,N/A
p4_sum_array_pairs,prompt_4,5,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",10000,0.06986659998074174,0.07316223399713635,0.09935309994034469,N/A
p4_sum_array_pairs,prompt_4,5,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",100000,1.1482492999639362,1.1846426289970986,1.2839434000197798,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.006223900010809302,0.006599743005353958,0.007991600083187222,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.07059679995290935,0.07577598699717783,0.12252189998980612,N/A
p4_sum_array_pairs,prompt_4,6,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.1539543999824673,1.1962697260011919,1.3458675999427214,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",1000,0.006048200069926679,0.0065698439930565655,0.008951500058174133,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",10000,0.06849269999656826,0.0735663320007734,0.0958059000549838,N/A
p4_sum_array_pairs,prompt_4,7,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",100000,1.1418388000456616,1.196180605997797,1.6871406000573188,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.006253500003367662,0.006812319991877302,0.011789800017140806,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06972859997767955,0.07287149299518206,0.0875104001024738,N/A
p4_sum_array_pairs,prompt_4,8,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.147053400054574,1.1944127799978015,1.611829600064084,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006270699901506305,0.007275563011644408,0.014613499981351197,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06933119997847825,0.07492254499462433,0.10282730008475482,N/A
p4_sum_array_pairs,prompt_4,9,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.158741099992767,1.1890088369953447,1.270432399935089,N/A
p4_sum_array_pairs,prompt_4,10,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006141799967736006,0.006794295993167907,0.010220700060017407,N/A
p4_sum_array_pairs,prompt_4,10,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.07017230009660125,0.0750384149956517,0.10959000000730157,N/A
p4_sum_array_pairs,prompt_4,10,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1499454999575391,1.1864907769998536,1.3709305999800563,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006336000049486756,0.007003273005830124,0.015081800054758787,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06961250002495944,0.07385034400271252,0.10311509994789958,N/A
p4_sum_array_pairs,prompt_4,11,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.151293900096789,1.1839855390042067,1.4450249000219628,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006274400046095252,0.0068793419934809205,0.011799300089478493,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06920580007135868,0.07284664299339055,0.10238830000162125,N/A
p4_sum_array_pairs,prompt_4,12,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1485005000140518,1.1856312530022115,1.2432678000768647,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in lookup:\n            count += lookup[complement]\n        if number in lookup:\n            lookup[number] += 1\n        else:\n            lookup[number] = 1\n    return count']",1000,0.006216700072400272,0.006648587002418935,0.009806000045500696,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in lookup:\n            count += lookup[complement]\n        if number in lookup:\n            lookup[number] += 1\n        else:\n            lookup[number] = 1\n    return count']",10000,0.07017019996419549,0.07442726799636148,0.09508910006843507,N/A
p4_sum_array_pairs,prompt_4,13,"['def funcImp(arg1, arg2):\n    count = 0\n    lookup = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in lookup:\n            count += lookup[complement]\n        if number in lookup:\n            lookup[number] += 1\n        else:\n            lookup[number] = 1\n    return count']",100000,1.1518530000466853,1.189381166998064,1.2944303000112996,N/A
p4_sum_array_pairs,prompt_4,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00606709998100996,0.006752132003894076,0.013398100039921701,N/A
p4_sum_array_pairs,prompt_4,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06973519991151989,0.07391160499537364,0.0912733000004664,N/A
p4_sum_array_pairs,prompt_4,14,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.158467400004156,1.18569661499816,1.33697189996019,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006334699923172593,0.006804571999236941,0.010623599984683096,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06882459996268153,0.07307185600046068,0.09461439994629472,N/A
p4_sum_array_pairs,prompt_4,15,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1515834999736398,1.181228678994812,1.3122255000052974,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",1000,0.004593299934640527,0.004905426996992901,0.009061200078576803,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",10000,0.05779600003734231,0.06010728699620813,0.07004910008981824,N/A
p4_sum_array_pairs,prompt_4,16,"['def funcImp(arg1, arg2):\n    seen = set()\n    pairs_count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            pairs_count += 1\n        seen.add(number)\n    return pairs_count']",100000,0.9088591999607161,0.9506634069990832,1.0518975999439135,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in count_map:\n            count_pairs += count_map[target]\n        if element in count_map:\n            count_map[element] += 1\n        else:\n            count_map[element] = 1\n    return count_pairs']",1000,0.006235599983483553,0.006692723004380241,0.009177700034342706,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in count_map:\n            count_pairs += count_map[target]\n        if element in count_map:\n            count_map[element] += 1\n        else:\n            count_map[element] = 1\n    return count_pairs']",10000,0.06980879988986999,0.07436184499179944,0.08998090005479753,N/A
p4_sum_array_pairs,prompt_4,17,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count_pairs = 0\n    for element in arg1:\n        target = arg2 - element\n        if target in count_map:\n            count_pairs += count_map[target]\n        if element in count_map:\n            count_map[element] += 1\n        else:\n            count_map[element] = 1\n    return count_pairs']",100000,1.152708200039342,1.1874684219970368,1.238849600078538,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.00623599998652935,0.006655482990900055,0.011283700005151331,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.07007530005648732,0.07406491200323216,0.10221659997478127,N/A
p4_sum_array_pairs,prompt_4,18,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.1536667000036687,1.1892685729952064,1.4410198000259697,N/A
p4_sum_array_pairs,prompt_4,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006288500037044287,0.006729708004277199,0.008563000010326505,N/A
p4_sum_array_pairs,prompt_4,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06965420010965317,0.07268816199735738,0.09228139999322593,N/A
p4_sum_array_pairs,prompt_4,19,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1484146999428049,1.1853741269896272,1.2839612999232486,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    count = 0\n    num_set = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in num_set:\n            count += 1\n        num_set.add(number)\n    return count']",1000,0.004612699965946376,0.005004734001122415,0.006897399900481105,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    count = 0\n    num_set = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in num_set:\n            count += 1\n        num_set.add(number)\n    return count']",10000,0.057345999986864626,0.06151536599267274,0.08560870005749166,N/A
p4_sum_array_pairs,prompt_4,20,"['def funcImp(arg1, arg2):\n    count = 0\n    num_set = set()\n    for number in arg1:\n        target = arg2 - number\n        if target in num_set:\n            count += 1\n        num_set.add(number)\n    return count']",100000,0.9259932999266312,0.9678212679969147,1.0511047000763938,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006294699967838824,0.008527205000864341,0.024411700083874166,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07039050001185387,0.07513195699662902,0.09350909991189837,N/A
p4_sum_array_pairs,prompt_4,21,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.157318799989298,1.2005732310027815,1.4578794999979436,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.006238100002519786,0.006840572999790311,0.018252299982123077,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06987520004622638,0.07278654400957749,0.0916601000353694,N/A
p4_sum_array_pairs,prompt_4,22,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1545652000932023,1.2037341559992638,1.7422517000231892,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00625390000641346,0.007008632000070065,0.015173699939623475,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07003689999692142,0.07455327200121246,0.09592290001455694,N/A
p4_sum_array_pairs,prompt_4,23,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1513381999684498,1.1942843200021889,1.5571224999148399,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006246599950827658,0.006674064999679104,0.010134799988009036,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07017249998170882,0.07852443199721165,0.26247740001417696,N/A
p4_sum_array_pairs,prompt_4,24,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.153785499976948,1.1913919130025896,1.3273929000133649,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004459200077690184,0.004911999005125836,0.0074102000799030066,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05768490000627935,0.060664831998292354,0.07482639991212636,N/A
p4_sum_array_pairs,prompt_4,25,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.917218100046739,0.9500370359967928,1.1333960000192747,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006342299981042743,0.006818850000854582,0.011273200041614473,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06996720004826784,0.07554005200159736,0.10590880003292114,N/A
p4_sum_array_pairs,prompt_4,26,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1509202000452206,1.1872850109939463,1.300045800046064,N/A
p4_sum_array_pairs,prompt_4,27,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006246500066481531,0.006633140007033944,0.00823609996587038,N/A
p4_sum_array_pairs,prompt_4,27,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06996029999572784,0.07392886598827317,0.09720830002333969,N/A
p4_sum_array_pairs,prompt_4,27,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.152231500018388,1.1831775899999775,1.2900761999189854,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in elements_map:\n            count += elements_map[target]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",1000,0.006259100046008825,0.006703248996054754,0.012036500032991171,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in elements_map:\n            count += elements_map[target]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",10000,0.06899579998571426,0.07560341301024892,0.13308880000840873,N/A
p4_sum_array_pairs,prompt_4,28,"['def funcImp(arg1, arg2):\n    count = 0\n    elements_map = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in elements_map:\n            count += elements_map[target]\n        if num in elements_map:\n            elements_map[num] += 1\n        else:\n            elements_map[num] = 1\n    return count']",100000,1.1629789000144228,1.1984610670036637,1.301793499966152,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0062494000885635614,0.006840807993430644,0.010230799904093146,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.070109200081788,0.0746753159968648,0.09747919999063015,N/A
p4_sum_array_pairs,prompt_4,29,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1554304000455886,1.1868458229932002,1.2810966999968514,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return count']",1000,0.006230999948456883,0.0067940590064972635,0.011923299985937774,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return count']",10000,0.06945329997688532,0.07238407600554637,0.08876920002512634,N/A
p4_sum_array_pairs,prompt_4,30,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complement_map:\n            count += complement_map[complement]\n        if number in complement_map:\n            complement_map[number] += 1\n        else:\n            complement_map[number] = 1\n    return count']",100000,1.14789370005019,1.1810382940038107,1.3490678999805823,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",1000,0.006204199977219105,0.006693851992022246,0.010742199956439435,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",10000,0.06987870007287711,0.0721817320084665,0.08361550001427531,N/A
p4_sum_array_pairs,prompt_4,31,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if number in element_counts:\n            element_counts[number] += 1\n        else:\n            element_counts[number] = 1\n    return pair_count']",100000,1.1517130000283942,1.1864000239979942,1.374849300016649,N/A
p4_sum_array_pairs,prompt_4,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006296299980022013,0.006684028992895037,0.008815199951641262,N/A
p4_sum_array_pairs,prompt_4,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06985119997989386,0.07380294899223372,0.09090419998392463,N/A
p4_sum_array_pairs,prompt_4,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1515842999797314,1.185933552000206,1.4453875999897718,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006112599978223443,0.006680116006173194,0.010323400027118623,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06805800006259233,0.07417067399946972,0.2146847000112757,N/A
p4_sum_array_pairs,prompt_4,33,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1407503000227734,1.1759714380011428,1.4689544000430033,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",1000,0.00637840002309531,0.006985239004716277,0.012327499920502305,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",10000,0.06869049998931587,0.07370578600210137,0.10907739994581789,N/A
p4_sum_array_pairs,prompt_4,34,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",100000,1.1568828999297693,1.1834721509937662,1.2799977000104263,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",1000,0.006258200039155781,0.006960177000146359,0.013786300085484982,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",10000,0.0702197999926284,0.07481527899508364,0.09493280004244298,N/A
p4_sum_array_pairs,prompt_4,35,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count']",100000,1.140373200061731,1.1817266609997024,1.3807018999941647,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006237299996428192,0.006935709994286299,0.012593799969181418,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06949100003112108,0.07302910499623977,0.0862850999692455,N/A
p4_sum_array_pairs,prompt_4,36,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1455189000116661,1.1945990980044008,1.7626964000519365,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",1000,0.0062636000802740455,0.00701265400624834,0.013858499936759472,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",10000,0.06866489991080016,0.0765376140002627,0.18811669992282987,N/A
p4_sum_array_pairs,prompt_4,37,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",100000,1.145728199975565,1.1876687969989144,1.3995095000136644,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006233000080101192,0.006555535005172714,0.00798150000628084,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06832720001693815,0.0745180480054114,0.10449830000288785,N/A
p4_sum_array_pairs,prompt_4,38,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.152804599958472,1.1771846599970013,1.2860191999934614,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006011500023305416,0.0066646160033997145,0.0084938999498263,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0694750000257045,0.07228672100231051,0.08483860001433641,N/A
p4_sum_array_pairs,prompt_4,39,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1475456999614835,1.176771151004359,1.2825454000849277,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.0060450000455603,0.0066328460071235894,0.009773100027814507,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06911739998031408,0.0745720620022621,0.11139079998247325,N/A
p4_sum_array_pairs,prompt_4,40,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1416999999200925,1.1848088389937765,1.4280231000157073,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",1000,0.006162800011225045,0.006780266993446276,0.012816099915653467,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",10000,0.0694006000412628,0.07254609699244612,0.08514899993315339,N/A
p4_sum_array_pairs,prompt_4,41,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\npass']",100000,1.1508236000081524,1.1833116820047145,1.285533200018108,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006060600047931075,0.006829448998905719,0.012257599970325828,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07002709992229939,0.07420495700323954,0.13612969999667257,N/A
p4_sum_array_pairs,prompt_4,42,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1524109999882057,1.191258817006601,1.2793240000028163,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",1000,0.006275800056755543,0.006713363999733701,0.00987629999872297,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",10000,0.06968980003148317,0.07310394300380722,0.08972779999021441,N/A
p4_sum_array_pairs,prompt_4,43,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",100000,1.1499230000190437,1.1798523319943341,1.24898909998592,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006259700050577521,0.006649608007865027,0.00916380004491657,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06924079998861998,0.07186243300326169,0.09414620010647923,N/A
p4_sum_array_pairs,prompt_4,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1508988999994472,1.1826224240043666,1.3779038999928162,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006816499982960522,0.007448350003687665,0.01229300000704825,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06894010002724826,0.07382284100865945,0.10956270003225654,N/A
p4_sum_array_pairs,prompt_4,45,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1462358999997377,1.192036017002538,1.5047350999666378,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006244200048968196,0.006640914008021355,0.012233500019647181,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06867619999684393,0.0723933999997098,0.08607570000458509,N/A
p4_sum_array_pairs,prompt_4,46,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1447961999801919,1.1841765700024554,1.2773306999588385,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006305099930614233,0.00686583400471136,0.012413799995556474,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.07032579998485744,0.07550756899756379,0.17378209996968508,N/A
p4_sum_array_pairs,prompt_4,47,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.155575399985537,1.1850267280009574,1.3140214000595734,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",1000,0.006246400065720081,0.006829743003472686,0.011569499969482422,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",10000,0.06934050004929304,0.07379514100262895,0.1774973999708891,N/A
p4_sum_array_pairs,prompt_4,48,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",100000,1.1534736000467092,1.1895200600009412,1.2612375000026077,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006249099969863892,0.00688403399894014,0.011496499995701015,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07026569999288768,0.07527424499276095,0.09826449991669506,N/A
p4_sum_array_pairs,prompt_4,49,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1547987000085413,1.1892865659936798,1.3838158000726253,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in counts:\n            pair_count += counts[target]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006247199955396354,0.007030813000164926,0.02095999999437481,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in counts:\n            pair_count += counts[target]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.07013449992518872,0.072866520001553,0.09926439996343106,N/A
p4_sum_array_pairs,prompt_4,50,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in counts:\n            pair_count += counts[target]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1542908999836072,1.1966588179999962,1.7800104999914765,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004593099933117628,0.005145666998578236,0.010506299906410277,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.057885700021870434,0.06254651299794205,0.15265439997892827,N/A
p4_sum_array_pairs,prompt_4,51,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.9294296000152826,0.9672634530044161,1.0935258999234065,N/A
p4_sum_array_pairs,prompt_4,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006251999991945922,0.006716964996885508,0.010099199949763715,N/A
p4_sum_array_pairs,prompt_4,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06978149991482496,0.07437140699126758,0.111316499998793,N/A
p4_sum_array_pairs,prompt_4,52,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1487004000227898,1.195317179003032,1.6667072999989614,N/A
p4_sum_array_pairs,prompt_4,53,"['def funcImp(arg1, arg2):\n    count = 0\n    element_counts = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in element_counts:\n            count += element_counts[target]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count']",1000,0.006214700057171285,0.0068343300023116175,0.010862300056032836,N/A
p4_sum_array_pairs,prompt_4,53,"['def funcImp(arg1, arg2):\n    count = 0\n    element_counts = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in element_counts:\n            count += element_counts[target]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count']",10000,0.07025879994034767,0.07404303200426511,0.0937449000775814,N/A
p4_sum_array_pairs,prompt_4,53,"['def funcImp(arg1, arg2):\n    count = 0\n    element_counts = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in element_counts:\n            count += element_counts[target]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return count']",100000,1.1516759999794886,1.1868112839967944,1.2885428000008687,N/A
p4_sum_array_pairs,prompt_4,54,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006242800038307905,0.006893755005439744,0.011246099951677024,N/A
p4_sum_array_pairs,prompt_4,54,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06923709996044636,0.07403675700421446,0.09355190000496805,N/A
p4_sum_array_pairs,prompt_4,54,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.1621599000645801,1.1952893859997857,1.3224986999994144,N/A
p4_sum_array_pairs,prompt_4,55,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count_pairs += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count_pairs']",1000,0.00628049997612834,0.006748720004688949,0.010991599992848933,N/A
p4_sum_array_pairs,prompt_4,55,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count_pairs += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count_pairs']",10000,0.06989800010342151,0.07464249300421216,0.09785060002468526,N/A
p4_sum_array_pairs,prompt_4,55,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in complements:\n            count_pairs += complements[complement]\n        if number in complements:\n            complements[number] += 1\n        else:\n            complements[number] = 1\n    return count_pairs']",100000,1.1568033000221476,1.1850641309970524,1.2566971000051126,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): The target sum.\n\n    Returns:\n    int: The count of pairs whose sum equals the target sum.\n    """"""\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006257900036871433,0.006828726009698585,0.009963200078345835,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): The target sum.\n\n    Returns:\n    int: The count of pairs whose sum equals the target sum.\n    """"""\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0701206000521779,0.07343714800197632,0.09170610003639013,N/A
p4_sum_array_pairs,prompt_4,56,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum in a single iteration.\n\n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): The target sum.\n\n    Returns:\n    int: The count of pairs whose sum equals the target sum.\n    """"""\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1528046999592334,1.183713254003087,1.3476227999199182,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",1000,0.006242299918085337,0.0066799589945003394,0.011852400028146803,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",10000,0.06927630002610385,0.07235432700719685,0.09315369999967515,N/A
p4_sum_array_pairs,prompt_4,57,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",100000,1.1526330000488088,1.1798143899987918,1.3211482999613509,N/A
p4_sum_array_pairs,prompt_4,58,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006256400025449693,0.006585703002056107,0.008205500082112849,N/A
p4_sum_array_pairs,prompt_4,58,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06965969991870224,0.07692118600243703,0.10897319996729493,N/A
p4_sum_array_pairs,prompt_4,58,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1493092000018805,1.185374287002487,1.3082116999430582,N/A
p4_sum_array_pairs,prompt_4,59,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006291300058364868,0.006590322001138702,0.008296399959363043,N/A
p4_sum_array_pairs,prompt_4,59,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06945229996927083,0.07420193099882454,0.09827499999664724,N/A
p4_sum_array_pairs,prompt_4,59,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1503042000113055,1.1867193110019434,1.379554400104098,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006096199969761074,0.006667984002269804,0.011731800041161478,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06851280003320426,0.07237962399492971,0.0832005999982357,N/A
p4_sum_array_pairs,prompt_4,60,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1419768000487238,1.1809658060001675,1.379307100083679,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",1000,0.006360399886034429,0.007028103994671255,0.01342019997537136,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",10000,0.07043600000906736,0.07571627099998296,0.12361499993130565,N/A
p4_sum_array_pairs,prompt_4,61,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",100000,1.1572022000327706,1.1901345560047776,1.3004597999388352,N/A
p4_sum_array_pairs,prompt_4,62,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",1000,0.0062429000390693545,0.006551367997890339,0.008690800052136183,N/A
p4_sum_array_pairs,prompt_4,62,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",10000,0.06928500009234995,0.07244659500312992,0.0837616000790149,N/A
p4_sum_array_pairs,prompt_4,62,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count_pairs += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count_pairs']",100000,1.148280099965632,1.1773474560014439,1.2839026999427006,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.00621240003965795,0.006612855001585558,0.008740599965676665,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.06893539999146014,0.07260239200200885,0.09079839999321848,N/A
p4_sum_array_pairs,prompt_4,63,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1389435000019148,1.1826809060026426,1.2992003000108525,N/A
p4_sum_array_pairs,prompt_4,64,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.0062360999872908,0.006757295001298189,0.011730400030501187,N/A
p4_sum_array_pairs,prompt_4,64,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06977539998479187,0.07393747000023723,0.11264210008084774,N/A
p4_sum_array_pairs,prompt_4,64,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1579722999595106,1.1909121489885728,1.3941176000516862,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.007242400082759559,0.00780195199768059,0.014061699970625341,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07021240005269647,0.07403126600198448,0.1271799000678584,N/A
p4_sum_array_pairs,prompt_4,65,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        target = arg2 - number\n        if target in seen:\n            count += seen[target]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.151163600035943,1.1752902480005287,1.2372125999536365,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq_map:\n            count += freq_map[complement]\n        if number in freq_map:\n            freq_map[number] += 1\n        else:\n            freq_map[number] = 1\n    return count']",1000,0.0063455000054091215,0.007081069005653262,0.021194900036789477,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq_map:\n            count += freq_map[complement]\n        if number in freq_map:\n            freq_map[number] += 1\n        else:\n            freq_map[number] = 1\n    return count']",10000,0.06991760001983494,0.0743969559983816,0.09586100000888109,N/A
p4_sum_array_pairs,prompt_4,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq_map:\n            count += freq_map[complement]\n        if number in freq_map:\n            freq_map[number] += 1\n        else:\n            freq_map[number] = 1\n    return count']",100000,1.153423799900338,1.1917851719958708,1.5127914999611676,N/A
p4_sum_array_pairs,prompt_4,67,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",1000,0.006246500066481531,0.006749837993411347,0.011977800051681697,N/A
p4_sum_array_pairs,prompt_4,67,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",10000,0.07024269993416965,0.07488402700517327,0.11796030006371439,N/A
p4_sum_array_pairs,prompt_4,67,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in hashmap:\n            count += hashmap[complement]\n        if number in hashmap:\n            hashmap[number] += 1\n        else:\n            hashmap[number] = 1\n    return count']",100000,1.1500693000853062,1.1795289270032663,1.242103699943982,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00626870000269264,0.006668877002084628,0.011512700002640486,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.0692926999181509,0.07283384500071406,0.09192879998590797,N/A
p4_sum_array_pairs,prompt_4,68,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1495369999902323,1.1776644360017963,1.2644537999294698,N/A
p4_sum_array_pairs,prompt_4,69,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006275300052948296,0.006879480993375182,0.011316300020553172,N/A
p4_sum_array_pairs,prompt_4,69,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06955080002080649,0.07545783000299706,0.1427244000369683,N/A
p4_sum_array_pairs,prompt_4,69,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.150402200059034,1.1762761139997746,1.2609339999035,N/A
p4_sum_array_pairs,prompt_4,70,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count_pairs\nnumbers = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",1000,0.006236799992620945,0.006972941003041342,0.01346159994136542,N/A
p4_sum_array_pairs,prompt_4,70,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count_pairs\nnumbers = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",10000,0.06907649990171194,0.07318210200057365,0.08534300001338124,N/A
p4_sum_array_pairs,prompt_4,70,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count_pairs\nnumbers = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",100000,1.1479327999986708,1.176584846995538,1.2594936999958009,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006284200004301965,0.0066853610007092355,0.011985899996943772,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06885450007393956,0.07282189399702474,0.08534530003089458,N/A
p4_sum_array_pairs,prompt_4,71,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1508631999604404,1.1877451359992848,1.2837785000447184,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_target = 6\npass']",1000,0.00617079995572567,0.006595731002744287,0.00833870004862547,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_target = 6\npass']",10000,0.0689708999125287,0.07477638100157492,0.10246900003403425,N/A
p4_sum_array_pairs,prompt_4,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\nsum_target = 6\npass']",100000,1.1451247000368312,1.1774887840042356,1.2525111000286415,N/A
p4_sum_array_pairs,prompt_4,73,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004257199936546385,0.004782224004156887,0.010149199981242418,N/A
p4_sum_array_pairs,prompt_4,73,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.054477499914355576,0.05935816599871032,0.08995490008965135,N/A
p4_sum_array_pairs,prompt_4,73,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.8949337999802083,0.9367406969971489,1.0180572000099346,N/A
p4_sum_array_pairs,prompt_4,74,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006291200057603419,0.006938205000478774,0.011282099992968142,N/A
p4_sum_array_pairs,prompt_4,74,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06992600008379668,0.07522960399859585,0.11540859995875508,N/A
p4_sum_array_pairs,prompt_4,74,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1554632999468595,1.1821909029991367,1.2367356000468135,N/A
p4_sum_array_pairs,prompt_4,75,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006207200000062585,0.006754888999275863,0.010125700035132468,N/A
p4_sum_array_pairs,prompt_4,75,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06909199990332127,0.07407085899845697,0.09226940001826733,N/A
p4_sum_array_pairs,prompt_4,75,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1495839001145214,1.1820458070014137,1.3112875999649987,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006307900068350136,0.006845644005807117,0.01290169998537749,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07014620001427829,0.07426399199059233,0.1323158999439329,N/A
p4_sum_array_pairs,prompt_4,76,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in seen:\n            count += seen[target]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.156321500078775,1.182796488001477,1.3045559000456706,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006066199974156916,0.006658070989651606,0.009609999950043857,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06802479992620647,0.07353220100398175,0.11289069999475032,N/A
p4_sum_array_pairs,prompt_4,77,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1492154999868944,1.183198442008579,1.2905269999755546,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pairs_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",1000,0.0063529999461025,0.006764813001500443,0.016781099955551326,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pairs_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",10000,0.07028169999830425,0.07426414800225757,0.09669100004248321,N/A
p4_sum_array_pairs,prompt_4,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pairs_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pairs_count']",100000,1.1512301999609917,1.1839383850002196,1.3556282999925315,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006366499932482839,0.006849279005546122,0.013262600055895746,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.06986209994647652,0.07314033499802462,0.08308619994204491,N/A
p4_sum_array_pairs,prompt_4,79,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1498424001038074,1.1914220780052711,1.3540991001063958,N/A
p4_sum_array_pairs,prompt_4,80,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",1000,0.004208299913443625,0.004639055007137358,0.006236699991859496,N/A
p4_sum_array_pairs,prompt_4,80,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",10000,0.055409699911251664,0.05953132099471986,0.17120639991480857,N/A
p4_sum_array_pairs,prompt_4,80,"['def funcImp(arg1, arg2):\n    num_set = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in num_set:\n            count += 1\n        num_set.add(num)\n    return count']",100000,0.9006029000738636,0.9364645230013412,1.0366596999811009,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    numbers_seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_seen:\n            count_pairs += numbers_seen[complement]\n        if num in numbers_seen:\n            numbers_seen[num] += 1\n        else:\n            numbers_seen[num] = 1\n    return count_pairs']",1000,0.006319600041024387,0.007430184006225317,0.017097400035709143,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    numbers_seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_seen:\n            count_pairs += numbers_seen[complement]\n        if num in numbers_seen:\n            numbers_seen[num] += 1\n        else:\n            numbers_seen[num] = 1\n    return count_pairs']",10000,0.06982039997819811,0.07373354300158098,0.10289880004711449,N/A
p4_sum_array_pairs,prompt_4,81,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    numbers_seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in numbers_seen:\n            count_pairs += numbers_seen[complement]\n        if num in numbers_seen:\n            numbers_seen[num] += 1\n        else:\n            numbers_seen[num] = 1\n    return count_pairs']",100000,1.153017400065437,1.1847253880044446,1.2895984000060707,N/A
p4_sum_array_pairs,prompt_4,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006106899934820831,0.006738156996434554,0.015305700013414025,N/A
p4_sum_array_pairs,prompt_4,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06824320007581264,0.07142546699731611,0.08959270000923425,N/A
p4_sum_array_pairs,prompt_4,82,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        if arg2 - num in complements:\n            count += complements[arg2 - num]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1497402000240982,1.1889131610002368,1.322594500030391,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006288999924436212,0.006776441007386893,0.00925710005685687,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06998039991594851,0.07517294899560512,0.10009650001302361,N/A
p4_sum_array_pairs,prompt_4,83,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1550377999665216,1.1892729290015995,1.2727964000077918,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006106300046667457,0.006608565005008131,0.010158099932596087,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06805809994693846,0.07266762499813922,0.13921069994103163,N/A
p4_sum_array_pairs,prompt_4,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        if arg2 - num in counts:\n            pair_count += counts[arg2 - num]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.143948100041598,1.1781728620023932,1.2630767000373453,N/A
p4_sum_array_pairs,prompt_4,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006336400052532554,0.007000224995426834,0.014067200012505054,N/A
p4_sum_array_pairs,prompt_4,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06973769993055612,0.07412803099374286,0.10809039999730885,N/A
p4_sum_array_pairs,prompt_4,85,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.146596800070256,1.1886706350033638,1.6261911999899894,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006255200016312301,0.00662040899391286,0.009197499952279031,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06957920000422746,0.07250676400144584,0.08915450004860759,N/A
p4_sum_array_pairs,prompt_4,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1446646000258625,1.1832630480034276,1.270930500002578,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006302700028754771,0.006706218000035733,0.012031199992634356,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07005460001528263,0.07443683699937537,0.09415790007915348,N/A
p4_sum_array_pairs,prompt_4,87,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1591078999917954,1.1934847859968432,1.2582988999783993,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.0063195000402629375,0.006980169002199546,0.0127212000079453,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.07040550000965595,0.07476242900593207,0.09390269999857992,N/A
p4_sum_array_pairs,prompt_4,88,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1640460999915376,1.2017376759985927,1.2838118000654504,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006276199943386018,0.006650651003001258,0.009588700020685792,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.07020730001386255,0.07557917000260204,0.10837909998372197,N/A
p4_sum_array_pairs,prompt_4,89,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.1622722999891266,1.191876284002792,1.2542431999463588,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            pairs_count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pairs_count']",1000,0.00623749999795109,0.006684192995307967,0.011495399987325072,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            pairs_count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pairs_count']",10000,0.06970509991515428,0.07272863700054585,0.08243169996421784,N/A
p4_sum_array_pairs,prompt_4,90,"['def funcImp(arg1, arg2):\n    pairs_count = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            pairs_count += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return pairs_count']",100000,1.160978699917905,1.1942768740002065,1.3723642999539152,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006314099999144673,0.0068741459981538355,0.011285700020380318,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06925139995291829,0.07477023799787276,0.08988909993786365,N/A
p4_sum_array_pairs,prompt_4,91,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.153956800000742,1.1887090760003776,1.2577019999735057,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if element in seen_elements:\n            seen_elements[element] += 1\n        else:\n            seen_elements[element] = 1\n    return count_pairs']",1000,0.0062472999561578035,0.006718661001650616,0.010351000004447997,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if element in seen_elements:\n            seen_elements[element] += 1\n        else:\n            seen_elements[element] = 1\n    return count_pairs']",10000,0.0686493000248447,0.07459672300028615,0.09583280002698302,N/A
p4_sum_array_pairs,prompt_4,92,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if element in seen_elements:\n            seen_elements[element] += 1\n        else:\n            seen_elements[element] = 1\n    return count_pairs']",100000,1.148116199998185,1.178993891008431,1.253848799970001,N/A
p4_sum_array_pairs,prompt_4,93,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006087200017645955,0.006704838995356113,0.015545999980531633,N/A
p4_sum_array_pairs,prompt_4,93,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.0697408999549225,0.07348793699638918,0.10450520005542785,N/A
p4_sum_array_pairs,prompt_4,93,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1482849000021815,1.191464419007534,1.4274465000489727,N/A
p4_sum_array_pairs,prompt_4,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",1000,0.006368299946188927,0.0069181810005102306,0.00953999999910593,N/A
p4_sum_array_pairs,prompt_4,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",10000,0.06924330000765622,0.07597583699505776,0.09680830000434071,N/A
p4_sum_array_pairs,prompt_4,94,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for number in arg1:\n        if number in complements:\n            count += complements[number]\n        complement = arg2 - number\n        if complement in complements:\n            complements[complement] += 1\n        else:\n            complements[complement] = 1\n    return count']",100000,1.2110266999807209,1.24392367599532,1.5034629999427125,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\nresult = funcImp(arr, sum_val)\npass']",1000,0.006255500018596649,0.006798859994160011,0.012676100013777614,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\nresult = funcImp(arr, sum_val)\npass']",10000,0.06842299993149936,0.07265133700333536,0.08762410003691912,N/A
p4_sum_array_pairs,prompt_4,95,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += seen[complement]\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count\narr = [1, 5, 7, -1, 5]\nsum_val = 6\nresult = funcImp(arr, sum_val)\npass']",100000,1.1465420000022277,1.1764685289969201,1.247025900054723,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    count = 0\n    nums_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in nums_dict:\n            count += nums_dict[target]\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    return count']",1000,0.00625390000641346,0.006705108005553484,0.010216400027275085,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    count = 0\n    nums_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in nums_dict:\n            count += nums_dict[target]\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    return count']",10000,0.06970549991820008,0.07259798399289139,0.09578169998712838,N/A
p4_sum_array_pairs,prompt_4,96,"['def funcImp(arg1, arg2):\n    count = 0\n    nums_dict = {}\n    for num in arg1:\n        target = arg2 - num\n        if target in nums_dict:\n            count += nums_dict[target]\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    return count']",100000,1.1653823000378907,1.20609100099653,1.3921384999994189,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006257200031541288,0.006870078006759286,0.01180850004311651,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06955450004898012,0.07427781600388698,0.09359089995268732,N/A
p4_sum_array_pairs,prompt_4,97,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.2853155999910086,1.322656713000033,1.4189822999760509,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.006251999991945922,0.00661039799451828,0.007881399942561984,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06954749999567866,0.07266504399827682,0.08424470003228635,N/A
p4_sum_array_pairs,prompt_4,98,"['def funcImp(arg1, arg2):\n    count = 0\n    complements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1455107000656426,1.1863669679977464,1.2795605999417603,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",1000,0.006260300055146217,0.00698024200508371,0.014677099999971688,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",10000,0.06994119996670634,0.0740404850023333,0.0956536999437958,N/A
p4_sum_array_pairs,prompt_4,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",100000,1.155722700059414,1.186813119999133,1.3002401000121608,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",1000,0.004460100084543228,0.0049768660066183655,0.009173600003123283,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",10000,0.05762719991616905,0.06235710999113508,0.09924010001122952,N/A
p4_sum_array_pairs,prompt_4,100,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count']",100000,0.9187690999824554,0.9540551909955685,1.1018193000927567,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",1000,0.0062235998921096325,0.0066307530051562934,0.013188699958845973,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",10000,0.06987759994808584,0.07427363800583407,0.10153700003866106,N/A
p4_sum_array_pairs,prompt_5,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",100000,1.1494377999333665,1.1813137869909405,1.5851234999718145,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",1000,0.006126900087110698,0.0067761110002174975,0.010386099922470748,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",10000,0.06793919997289777,0.07238418900291435,0.08870880003087223,N/A
p4_sum_array_pairs,prompt_5,2,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",100000,1.1468704000581056,1.1873370979935862,1.2582219999749213,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    count_map = {}\n    for V in arg1:\n        complement = arg2 - V\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if V in count_map:\n            count_map[V] += 1\n        else:\n            count_map[V] = 1\n    return pair_count']",1000,0.006239899899810553,0.006813489004271105,0.011219999985769391,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    count_map = {}\n    for V in arg1:\n        complement = arg2 - V\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if V in count_map:\n            count_map[V] += 1\n        else:\n            count_map[V] = 1\n    return pair_count']",10000,0.0699338000267744,0.07539488399750553,0.10632270004134625,N/A
p4_sum_array_pairs,prompt_5,3,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    count_map = {}\n    for V in arg1:\n        complement = arg2 - V\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if V in count_map:\n            count_map[V] += 1\n        else:\n            count_map[V] = 1\n    return pair_count']",100000,1.1510155000723898,1.1848517229955178,1.2783865000819787,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count_pairs += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",1000,0.006346399895846844,0.006773257002932951,0.008893600082956254,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count_pairs += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",10000,0.06940620008390397,0.07392284899950027,0.09948469989467412,N/A
p4_sum_array_pairs,prompt_5,4,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count_pairs += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count_pairs']",100000,1.1487444000085816,1.186491858997615,1.3401799999410287,N/A
p4_sum_array_pairs,prompt_5,5,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",1000,0.006265000090934336,0.006680091005982831,0.011667400016449392,N/A
p4_sum_array_pairs,prompt_5,5,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",10000,0.06949210003949702,0.07238569000852295,0.09540240000933409,N/A
p4_sum_array_pairs,prompt_5,5,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",100000,1.1554796999553218,1.1895353389962111,1.2702256999909878,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in lookup:\n            count += lookup[complement]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",1000,0.006245599943213165,0.00682318500126712,0.013330599991604686,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in lookup:\n            count += lookup[complement]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",10000,0.0694016000488773,0.07409274399862625,0.1018424000358209,N/A
p4_sum_array_pairs,prompt_5,6,"['def funcImp(arg1, arg2):\n    lookup = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in lookup:\n            count += lookup[complement]\n        if num in lookup:\n            lookup[num] += 1\n        else:\n            lookup[num] = 1\n    return count']",100000,1.1486050999956205,1.1896759349980857,1.3978370999684557,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",1000,0.006221899995580316,0.007235187999904156,0.01792000001296401,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",10000,0.06794460001401603,0.07396352700307034,0.13299760001245886,N/A
p4_sum_array_pairs,prompt_5,7,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",100000,1.1480507999658585,1.2025263370061294,1.804887400008738,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006221899995580316,0.0067445429984945805,0.014508299995213747,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06927430001087487,0.0736637800023891,0.0991051000310108,N/A
p4_sum_array_pairs,prompt_5,8,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.1443429000210017,1.1835162839945406,1.6641317999456078,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        if needed_value in element_map:\n            count += element_map[needed_value]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",1000,0.006044299923814833,0.006908130994997918,0.015970499953255057,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        if needed_value in element_map:\n            count += element_map[needed_value]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",10000,0.06843450001906604,0.07420282399863937,0.10643720009829849,N/A
p4_sum_array_pairs,prompt_5,9,"['def funcImp(arg1, arg2):\n    element_map = {}\n    count = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        if needed_value in element_map:\n            count += element_map[needed_value]\n        if element in element_map:\n            element_map[element] += 1\n        else:\n            element_map[element] = 1\n    return count']",100000,1.1516261999495327,1.182833610000089,1.3025176000082865,N/A
p4_sum_array_pairs,prompt_5,10,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",1000,0.006221499992534518,0.00672801100416109,0.00921859999652952,N/A
p4_sum_array_pairs,prompt_5,10,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",10000,0.06989739998243749,0.0742618049972225,0.09160609997343272,N/A
p4_sum_array_pairs,prompt_5,10,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",100000,1.1394327000016347,1.1851987839967477,1.3097160999896005,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            count_pairs += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs']",1000,0.0062324999598786235,0.006663159995805472,0.00836810003966093,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            count_pairs += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs']",10000,0.0691091000335291,0.07417055899393744,0.11210999998729676,N/A
p4_sum_array_pairs,prompt_5,11,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            count_pairs += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return count_pairs']",100000,1.1593911999370903,1.1910226339986547,1.3621381999691948,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",1000,0.006284300005063415,0.0068006019934546205,0.010998600046150386,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",10000,0.07046289998106658,0.07438356599886901,0.09477610001340508,N/A
p4_sum_array_pairs,prompt_5,12,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",100000,1.1545515999896452,1.1851138480042573,1.3958418999100104,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_freq:\n            count += element_freq[complement]\n        if num in element_freq:\n            element_freq[num] += 1\n        else:\n            element_freq[num] = 1\n    return count']",1000,0.006218800088390708,0.006969304996309802,0.014486099942587316,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_freq:\n            count += element_freq[complement]\n        if num in element_freq:\n            element_freq[num] += 1\n        else:\n            element_freq[num] = 1\n    return count']",10000,0.07000730000436306,0.07371233899961226,0.08633069996722043,N/A
p4_sum_array_pairs,prompt_5,13,"['def funcImp(arg1, arg2):\n    element_freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_freq:\n            count += element_freq[complement]\n        if num in element_freq:\n            element_freq[num] += 1\n        else:\n            element_freq[num] = 1\n    return count']",100000,1.147041300078854,1.1818610230018385,1.3315709000453353,N/A
p4_sum_array_pairs,prompt_5,14,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if element in frequency:\n            frequency[element] += 1\n        else:\n            frequency[element] = 1\n    return pair_count']",1000,0.006332300021313131,0.007000732000451535,0.014177900040522218,N/A
p4_sum_array_pairs,prompt_5,14,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if element in frequency:\n            frequency[element] += 1\n        else:\n            frequency[element] = 1\n    return pair_count']",10000,0.07009179994929582,0.07589199099456892,0.11454560002312064,N/A
p4_sum_array_pairs,prompt_5,14,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if element in frequency:\n            frequency[element] += 1\n        else:\n            frequency[element] = 1\n    return pair_count']",100000,1.1530330000678077,1.1891846650093794,1.2410587000194937,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",1000,0.006173300091177225,0.00684581199544482,0.013834599987603724,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",10000,0.0700510999886319,0.07401855199947022,0.09256819996517152,N/A
p4_sum_array_pairs,prompt_5,15,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",100000,1.1522037000395358,1.1878654680063483,1.2733371000504121,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    target = arg2\n    for num in arg1:\n        complement = target - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",1000,0.006325599970296025,0.00666979699744843,0.009181999950669706,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    target = arg2\n    for num in arg1:\n        complement = target - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",10000,0.06934759998694062,0.07280238100909628,0.0900469000916928,N/A
p4_sum_array_pairs,prompt_5,16,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    target = arg2\n    for num in arg1:\n        complement = target - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count']",100000,1.1561162000289187,1.1839045279996936,1.2646146999904886,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006055499892681837,0.006741119001526385,0.008900300017558038,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06902900000568479,0.07532472199527547,0.10167010000441223,N/A
p4_sum_array_pairs,prompt_5,17,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.15023749996908,1.1847691860003398,1.271234399988316,N/A
p4_sum_array_pairs,prompt_5,18,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            pair_count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return pair_count']",1000,0.006235399981960654,0.006610482998657971,0.010074699996039271,N/A
p4_sum_array_pairs,prompt_5,18,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            pair_count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return pair_count']",10000,0.06891449994873255,0.07304237400065176,0.0906055000377819,N/A
p4_sum_array_pairs,prompt_5,18,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            pair_count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return pair_count']",100000,1.1458427999168634,1.1919755610020366,1.3786353999748826,N/A
p4_sum_array_pairs,prompt_5,19,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    freq = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] += 1\n    return count']",1000,0.010135099990293384,0.01131897400249727,0.03277199994772673,N/A
p4_sum_array_pairs,prompt_5,19,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    freq = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] += 1\n    return count']",10000,0.10588480008300394,0.11252182299387642,0.12912239995785058,N/A
p4_sum_array_pairs,prompt_5,19,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    count = 0\n    freq = defaultdict(int)\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        freq[num] += 1\n    return count']",100000,1.5534086000407115,1.59330517800292,1.7856791999656707,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",1000,0.006281799986027181,0.006912813001545146,0.011232499964535236,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",10000,0.06844820000696927,0.0754605349979829,0.09619349997956306,N/A
p4_sum_array_pairs,prompt_5,20,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",100000,1.1501439000712708,1.1889787949982564,1.3363146000774577,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",1000,0.006227699923329055,0.0067421370011288674,0.012709800037555397,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",10000,0.06930760003160685,0.07280857700039632,0.08628259995020926,N/A
p4_sum_array_pairs,prompt_5,21,"['def funcImp(arg1, arg2):\n    num_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count']",100000,1.1481944000115618,1.2126199190027547,1.82221820007544,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count_pairs += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count_pairs']",1000,0.006251399987377226,0.006649455997394398,0.008533400017768145,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count_pairs += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count_pairs']",10000,0.06939550000242889,0.07644075899617747,0.12136580003425479,N/A
p4_sum_array_pairs,prompt_5,22,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count_pairs += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count_pairs']",100000,1.1586785999825224,1.1855484979995525,1.3002088000066578,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array that add up to a given sum.\n    \n    arg1: List[int] - The array of integers.\n    arg2: int - The target sum.\n    \n    Returns:\n    int - Number of pairs that sum up to the target.\n    """"""\n    frequency = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count']",1000,0.0060813999734818935,0.006887034996179864,0.013945900020189583,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array that add up to a given sum.\n    \n    arg1: List[int] - The array of integers.\n    arg2: int - The target sum.\n    \n    Returns:\n    int - Number of pairs that sum up to the target.\n    """"""\n    frequency = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count']",10000,0.06978009990416467,0.07506667999667116,0.1398429999826476,N/A
p4_sum_array_pairs,prompt_5,23,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array that add up to a given sum.\n    \n    arg1: List[int] - The array of integers.\n    arg2: int - The target sum.\n    \n    Returns:\n    int - Number of pairs that sum up to the target.\n    """"""\n    frequency = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency:\n            count += frequency[complement]\n        if number in frequency:\n            frequency[number] += 1\n        else:\n            frequency[number] = 1\n    return count']",100000,1.1518986999290064,1.1899411489942577,1.3247314000036567,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count_pairs']",1000,0.006256400025449693,0.0067346150043886156,0.011173600098118186,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count_pairs']",10000,0.06874949997290969,0.07376380200497806,0.15008880000095814,N/A
p4_sum_array_pairs,prompt_5,24,"['def funcImp(arg1, arg2):\n    frequency = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count_pairs += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count_pairs']",100000,1.1522522000595927,1.184777951000724,1.4258566999342293,N/A
p4_sum_array_pairs,prompt_5,25,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006244300049729645,0.0069303060008678585,0.012015900108963251,N/A
p4_sum_array_pairs,prompt_5,25,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06942209997214377,0.07362625599605963,0.0976158999837935,N/A
p4_sum_array_pairs,prompt_5,25,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1520310000050813,1.1786889030120802,1.247562500066124,N/A
p4_sum_array_pairs,prompt_5,26,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count_pairs']",1000,0.00621240003965795,0.006938553000800311,0.01211349992081523,N/A
p4_sum_array_pairs,prompt_5,26,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count_pairs']",10000,0.06973859993740916,0.07371453800005838,0.08918030001223087,N/A
p4_sum_array_pairs,prompt_5,26,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if number in seen_elements:\n            seen_elements[number] += 1\n        else:\n            seen_elements[number] = 1\n    return count_pairs']",100000,1.1458825999870896,1.1850737469969317,1.4147696000291035,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",1000,0.00624779995996505,0.006903380987932905,0.012734199990518391,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",10000,0.06963510008063167,0.07281102299923077,0.08489709999412298,N/A
p4_sum_array_pairs,prompt_5,27,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",100000,1.152904300019145,1.1877566229947842,1.2906429000431672,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum.\n    \n    Args:\n    arg1: list of integers (the array)\n    arg2: integer (the given sum)\n    \n    Returns:\n    int: the count of pairs whose sum equals the given sum\n    """"""\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",1000,0.006068999995477498,0.006884346997831017,0.01304989994969219,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum.\n    \n    Args:\n    arg1: list of integers (the array)\n    arg2: integer (the given sum)\n    \n    Returns:\n    int: the count of pairs whose sum equals the given sum\n    """"""\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",10000,0.06986099993810058,0.07381419399520382,0.10891750000882894,N/A
p4_sum_array_pairs,prompt_5,28,"['def funcImp(arg1, arg2):\n    """"""\n    Count pairs of elements in an array whose sum equals a given sum.\n    \n    Args:\n    arg1: list of integers (the array)\n    arg2: integer (the given sum)\n    \n    Returns:\n    int: the count of pairs whose sum equals the given sum\n    """"""\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",100000,1.1459122999804094,1.1871426899987272,1.3471380000701174,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",1000,0.006206099991686642,0.006883227000944316,0.011496299994178116,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",10000,0.06967930006794631,0.07504178900038823,0.11442420003004372,N/A
p4_sum_array_pairs,prompt_5,29,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",100000,1.146058600046672,1.1839995720004663,1.3330734999617562,N/A
p4_sum_array_pairs,prompt_5,30,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.006232099956832826,0.006983601998072118,0.01608570001553744,N/A
p4_sum_array_pairs,prompt_5,30,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.06919369997922331,0.07222802900127136,0.08077160001266748,N/A
p4_sum_array_pairs,prompt_5,30,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.1543410000158474,1.1832801339996513,1.3364483999321237,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",1000,0.006323699955828488,0.006650450002634898,0.008233499946072698,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",10000,0.0694672999670729,0.07345077799865976,0.09819449996575713,N/A
p4_sum_array_pairs,prompt_5,31,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count']",100000,1.1475302999606356,1.18162922700285,1.262627899996005,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        if num in frequency_map:\n            frequency_map[num] += 1\n        else:\n            frequency_map[num] = 1\n    return pair_count']",1000,0.0062203999841585755,0.0066313710005488245,0.009940500021912158,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        if num in frequency_map:\n            frequency_map[num] += 1\n        else:\n            frequency_map[num] = 1\n    return pair_count']",10000,0.06965169997420162,0.0744431989977602,0.13439639995340258,N/A
p4_sum_array_pairs,prompt_5,32,"['def funcImp(arg1, arg2):\n    frequency_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency_map:\n            pair_count += frequency_map[complement]\n        if num in frequency_map:\n            frequency_map[num] += 1\n        else:\n            frequency_map[num] = 1\n    return pair_count']",100000,1.1508118000347167,1.1938888279988895,1.4415222000097856,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    desired_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = desired_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",1000,0.006221899995580316,0.006574157001450658,0.008187499945051968,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    desired_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = desired_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",10000,0.06948990002274513,0.07458478700136766,0.10042800009250641,N/A
p4_sum_array_pairs,prompt_5,33,"['def funcImp(arg1, arg2):\n    desired_sum = arg2\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = desired_sum - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",100000,1.150568600045517,1.1918559200002345,1.402806399972178,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    freq = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count_pairs += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count_pairs']",1000,0.006232900079339743,0.00698625200195238,0.014002199983224273,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    freq = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count_pairs += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count_pairs']",10000,0.06879759998992085,0.075972007001983,0.1706463999580592,N/A
p4_sum_array_pairs,prompt_5,34,"['def funcImp(arg1, arg2):\n    freq = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count_pairs += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count_pairs']",100000,1.1451903000706807,1.1837206090043764,1.2789127000141889,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",1000,0.006303399917669594,0.006825245996005833,0.011338899959810078,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",10000,0.06963329995051026,0.07340188999311067,0.09056679997593164,N/A
p4_sum_array_pairs,prompt_5,35,"['def funcImp(arg1, arg2):\n    element_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            pair_count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return pair_count']",100000,1.147227199980989,1.2079848660028074,1.4453448000131175,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.00622999994084239,0.0072999879939015955,0.022570000030100346,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06936209998093545,0.07371076299925335,0.09808380005415529,N/A
p4_sum_array_pairs,prompt_5,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.1503049000166357,1.1903608210035599,1.752987299929373,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",1000,0.006135700037702918,0.006758273006416857,0.013210200006142259,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",10000,0.06842899997718632,0.07883151200134307,0.18836629996076226,N/A
p4_sum_array_pairs,prompt_5,37,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",100000,1.147400000016205,1.1924457790039014,1.3398662999970838,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_pairs = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        count_pairs += element_frequency.get(needed_value, 0)\n        element_frequency[element] = element_frequency.get(element, 0) + 1\n    return count_pairs']",1000,0.007576300064101815,0.008108018008060753,0.010073699988424778,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_pairs = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        count_pairs += element_frequency.get(needed_value, 0)\n        element_frequency[element] = element_frequency.get(element, 0) + 1\n    return count_pairs']",10000,0.08187660004477948,0.08562180999899283,0.10253449995070696,N/A
p4_sum_array_pairs,prompt_5,38,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_pairs = 0\n    for element in arg1:\n        needed_value = arg2 - element\n        count_pairs += element_frequency.get(needed_value, 0)\n        element_frequency[element] = element_frequency.get(element, 0) + 1\n    return count_pairs']",100000,1.297580900019966,1.3410432969976682,1.522108200006187,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006561300018802285,0.00701131799374707,0.010972499963827431,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.07045880006626248,0.07470495199668221,0.0918455000501126,N/A
p4_sum_array_pairs,prompt_5,39,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1636248999275267,1.190170417999616,1.2862285000737756,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",1000,0.0063053000485524535,0.006825723001966253,0.011072700028307736,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",10000,0.07048160000704229,0.07406769499066286,0.08965739991981536,N/A
p4_sum_array_pairs,prompt_5,40,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",100000,1.148632400087081,1.1838619169977027,1.3163420000346377,N/A
p4_sum_array_pairs,prompt_5,41,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",1000,0.00601669994648546,0.00663444200064987,0.009572200011461973,N/A
p4_sum_array_pairs,prompt_5,41,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",10000,0.0686850999481976,0.0730321899941191,0.10120989999268204,N/A
p4_sum_array_pairs,prompt_5,41,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            pair_count += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return pair_count']",100000,1.1553299999795854,1.1900677160022315,1.4304561999160796,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",1000,0.006272800033912063,0.006913155999500304,0.010202899924479425,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",10000,0.07020690001081675,0.07544084099237808,0.11104480002541095,N/A
p4_sum_array_pairs,prompt_5,42,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",100000,1.1616780000040308,1.190974372999044,1.2630639999406412,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006257700035348535,0.006636436000699178,0.009210700052790344,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.07033699995372444,0.07425527600571513,0.10326600004918873,N/A
p4_sum_array_pairs,prompt_5,43,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1464426999446005,1.1773656489991118,1.3561460999771953,N/A
p4_sum_array_pairs,prompt_5,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",1000,0.006280199973843992,0.0066331689979415385,0.010071199969388545,N/A
p4_sum_array_pairs,prompt_5,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",10000,0.0700516999932006,0.07368497499730438,0.09608069993555546,N/A
p4_sum_array_pairs,prompt_5,44,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",100000,1.1536809999961406,1.1784965029975865,1.268226300016977,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    element_frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            counter += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return counter']",1000,0.006269600009545684,0.0067408290051389486,0.010507199913263321,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    element_frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            counter += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return counter']",10000,0.06944180000573397,0.07553645199164748,0.14088530000299215,N/A
p4_sum_array_pairs,prompt_5,45,"['def funcImp(arg1, arg2):\n    counter = 0\n    element_frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            counter += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return counter']",100000,1.1550562999909744,1.1828648349945434,1.2438327999552712,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006208600010722876,0.006811443000333384,0.010543500073254108,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06914629996754229,0.07406473200302571,0.09341319999657571,N/A
p4_sum_array_pairs,prompt_5,46,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1410166999557987,1.1718524250050542,1.2516865000361577,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",1000,0.006373099982738495,0.006800983002176508,0.008772600092925131,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",10000,0.07053519994951785,0.07613746600225568,0.09680479997768998,N/A
p4_sum_array_pairs,prompt_5,47,"['def funcImp(arg1, arg2):\n    freq_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",100000,1.1503173999954015,1.1779188200086355,1.2428874000906944,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.00620489998254925,0.0066955350036732855,0.011174799990840256,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06948930001817644,0.07450792599935084,0.12221979990135878,N/A
p4_sum_array_pairs,prompt_5,48,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1508732000365853,1.183538931007497,1.2754281000234187,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_table:\n            count += 1\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",1000,0.006173399975523353,0.006667600999353453,0.011047599953599274,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_table:\n            count += 1\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",10000,0.06940260005649179,0.07406698000035249,0.10045359993819147,N/A
p4_sum_array_pairs,prompt_5,49,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_table = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_table:\n            count += 1\n        if element in hash_table:\n            hash_table[element] += 1\n        else:\n            hash_table[element] = 1\n    return count']",100000,1.146988800028339,1.2136628019879572,1.5943269999697804,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_count = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",1000,0.005963600007817149,0.006579196990933269,0.009972600033506751,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_count = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",10000,0.06884979992173612,0.07653999599977396,0.14957529993262142,N/A
p4_sum_array_pairs,prompt_5,50,"['def funcImp(arg1, arg2):\n    pair_count = 0\n    element_count = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",100000,1.1537381999660283,1.1891350470052566,1.3085370999760926,N/A
p4_sum_array_pairs,prompt_5,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",1000,0.006223100004717708,0.006764203001512215,0.009583899984136224,N/A
p4_sum_array_pairs,prompt_5,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",10000,0.06895049999002367,0.07402073100209236,0.10273289994802326,N/A
p4_sum_array_pairs,prompt_5,51,"['def funcImp(arg1, arg2):\n    count_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return count']",100000,1.1421569999074563,1.1740442549996077,1.2706579000223428,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",1000,0.006244700052775443,0.006755772994365543,0.009416299988515675,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",10000,0.06887479999568313,0.07307668499764987,0.08906420005951077,N/A
p4_sum_array_pairs,prompt_5,52,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",100000,1.1474044000497088,1.1999742540006992,1.4000746000092477,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    counts = {}\n    result = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            result += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return result']",1000,0.006251699989661574,0.006975724004441872,0.017092099995352328,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    counts = {}\n    result = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            result += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return result']",10000,0.07054210000205785,0.0774768289946951,0.1305858000414446,N/A
p4_sum_array_pairs,prompt_5,53,"['def funcImp(arg1, arg2):\n    counts = {}\n    result = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            result += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return result']",100000,1.144680600031279,1.2070915049978066,1.4378951999824494,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_counts:\n            pair_count += element_counts[diff]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",1000,0.006151599925942719,0.006851927997777238,0.010843000025488436,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_counts:\n            pair_count += element_counts[diff]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",10000,0.06983769999351352,0.07629108700784855,0.16536699992138892,N/A
p4_sum_array_pairs,prompt_5,54,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in element_counts:\n            pair_count += element_counts[diff]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",100000,1.1504270000150427,1.2018363850016613,1.4195908999536186,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in frequency_map:\n            count += frequency_map[complement]\n        if elem in frequency_map:\n            frequency_map[elem] += 1\n        else:\n            frequency_map[elem] = 1\n    return count']",1000,0.006249599973671138,0.006652184992562979,0.010552500025369227,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in frequency_map:\n            count += frequency_map[complement]\n        if elem in frequency_map:\n            frequency_map[elem] += 1\n        else:\n            frequency_map[elem] = 1\n    return count']",10000,0.0695107999490574,0.07402466700412333,0.09405210008844733,N/A
p4_sum_array_pairs,prompt_5,55,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency_map = {}\n    for elem in arg1:\n        complement = arg2 - elem\n        if complement in frequency_map:\n            count += frequency_map[complement]\n        if elem in frequency_map:\n            frequency_map[elem] += 1\n        else:\n            frequency_map[elem] = 1\n    return count']",100000,1.152921500033699,1.1954358290031086,1.4206490999786183,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.00635020004119724,0.006883020995883271,0.011089799925684929,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.0695187000092119,0.07480866299592889,0.09739979996811599,N/A
p4_sum_array_pairs,prompt_5,56,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1430133999092504,1.1935915260040202,1.458924200036563,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006227000034414232,0.00661395899602212,0.011777000036090612,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06939279998186976,0.0754155079985503,0.18936570000369102,N/A
p4_sum_array_pairs,prompt_5,57,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1401821000035852,1.178157426000107,1.3565306999953464,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.006205399986356497,0.006804716996848583,0.010036300052888691,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.0681041000643745,0.07408811500295996,0.16667119995690882,N/A
p4_sum_array_pairs,prompt_5,58,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1442766999825835,1.187132368995808,1.4149329999927431,N/A
p4_sum_array_pairs,prompt_5,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.00621369993314147,0.006647173999808729,0.00868369999807328,N/A
p4_sum_array_pairs,prompt_5,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.07022689993027598,0.07485098500386812,0.09263369999825954,N/A
p4_sum_array_pairs,prompt_5,59,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1474083000794053,1.205372865004465,1.5849079999607056,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",1000,0.006334700039587915,0.007166930993553251,0.02156759996432811,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",10000,0.06932790006976575,0.07415828299126588,0.09425359999295324,N/A
p4_sum_array_pairs,prompt_5,60,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count']",100000,1.1449370000045747,1.180260298998328,1.2963984999805689,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs in an array whose sum equals the given target sum.\n    \n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): Target sum.\n    \n    Returns:\n    int: Number of pairs whose sum equals the target sum.\n    """"""\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",1000,0.006290900055319071,0.00685080700321123,0.010159100056625903,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs in an array whose sum equals the given target sum.\n    \n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): Target sum.\n    \n    Returns:\n    int: Number of pairs whose sum equals the target sum.\n    """"""\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",10000,0.0686928000068292,0.07409520699642598,0.10265629994682968,N/A
p4_sum_array_pairs,prompt_5,61,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs in an array whose sum equals the given target sum.\n    \n    Parameters:\n    arg1 (list): List of integers.\n    arg2 (int): Target sum.\n    \n    Returns:\n    int: Number of pairs whose sum equals the target sum.\n    """"""\n    seen = {}\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        if number in seen:\n            seen[number] += 1\n        else:\n            seen[number] = 1\n    return count']",100000,1.132376000052318,1.180820040999679,1.3125319000100717,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006320499931462109,0.006768780001439154,0.008908999967388809,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06922880001366138,0.07387515000300482,0.10075760004110634,N/A
p4_sum_array_pairs,prompt_5,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1339495000429451,1.1738915780070238,1.3131792000494897,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006091599934734404,0.00657712499727495,0.010200500022619963,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06829810002818704,0.07285760300233961,0.08843550004530698,N/A
p4_sum_array_pairs,prompt_5,63,"['def funcImp(arg1, arg2):\n    seen = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1574984999606386,1.2127876419934909,1.5891489000059664,N/A
p4_sum_array_pairs,prompt_5,64,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",1000,0.00611009995918721,0.006656746997032314,0.00937999994494021,N/A
p4_sum_array_pairs,prompt_5,64,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",10000,0.06927490001544356,0.07475952699314803,0.15150010003708303,N/A
p4_sum_array_pairs,prompt_5,64,"['def funcImp(arg1, arg2):\n    num_dict = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_dict:\n            count += num_dict[complement]\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    return count']",100000,1.1360083000035957,1.1830931589985267,1.6116822001058608,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for ele in arg1:\n        complement = arg2 - ele\n        if complement in num_dict:\n            count += num_dict[complement]\n        if ele in num_dict:\n            num_dict[ele] += 1\n        else:\n            num_dict[ele] = 1\n    return count']",1000,0.006090099923312664,0.007042475000489503,0.013729999889619648,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for ele in arg1:\n        complement = arg2 - ele\n        if complement in num_dict:\n            count += num_dict[complement]\n        if ele in num_dict:\n            num_dict[ele] += 1\n        else:\n            num_dict[ele] = 1\n    return count']",10000,0.06946000002790242,0.07488280500285327,0.11497949995100498,N/A
p4_sum_array_pairs,prompt_5,65,"['def funcImp(arg1, arg2):\n    count = 0\n    num_dict = {}\n    for ele in arg1:\n        complement = arg2 - ele\n        if complement in num_dict:\n            count += num_dict[complement]\n        if ele in num_dict:\n            num_dict[ele] += 1\n        else:\n            num_dict[ele] = 1\n    return count']",100000,1.1313739999895915,1.167079508001916,1.2935352999484167,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.00619920005556196,0.006662111005280167,0.01149269996676594,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.0676272000418976,0.07293021200224757,0.09539539995603263,N/A
p4_sum_array_pairs,prompt_5,66,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1362616000697017,1.2321141400025226,1.590563299949281,N/A
p4_sum_array_pairs,prompt_5,67,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",1000,0.00637389998883009,0.0070697159972041845,0.017843600013293326,N/A
p4_sum_array_pairs,prompt_5,67,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",10000,0.06803770002443343,0.07428268400602973,0.11940869991667569,N/A
p4_sum_array_pairs,prompt_5,67,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",100000,1.150241499999538,1.2052223049977329,1.5810238999547437,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",1000,0.006310999975539744,0.006842099002096802,0.009613100090064108,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",10000,0.06920879997778684,0.0783757619955577,0.1814916000002995,N/A
p4_sum_array_pairs,prompt_5,68,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",100000,1.1415649000555277,1.237096750998171,1.7277814999688417,N/A
p4_sum_array_pairs,prompt_5,69,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_of_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            count_of_pairs += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return count_of_pairs']",1000,0.006216499954462051,0.006935362996300682,0.015640400000847876,N/A
p4_sum_array_pairs,prompt_5,69,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_of_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            count_of_pairs += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return count_of_pairs']",10000,0.06881470000371337,0.07414140100358053,0.1677917999913916,N/A
p4_sum_array_pairs,prompt_5,69,"['def funcImp(arg1, arg2):\n    element_frequency = {}\n    count_of_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_frequency:\n            count_of_pairs += element_frequency[complement]\n        if num in element_frequency:\n            element_frequency[num] += 1\n        else:\n            element_frequency[num] = 1\n    return count_of_pairs']",100000,1.1356272000120953,1.1886679520108736,1.4896746999584138,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006252499995753169,0.006781464001396671,0.011822199914604425,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06847960001323372,0.07469078099471517,0.10252820001915097,N/A
p4_sum_array_pairs,prompt_5,70,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1397056001005694,1.1932394059957006,1.5125090999063104,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",1000,0.006348000024445355,0.007078364009503275,0.0148114999756217,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",10000,0.06849989993497729,0.07842836298746989,0.2342709000222385,N/A
p4_sum_array_pairs,prompt_5,71,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",100000,1.1377386000240222,1.1673856710002293,1.3110013999976218,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006222299998626113,0.007643052000785247,0.02766000002156943,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06806760001927614,0.07392775600077585,0.11253130005206913,N/A
p4_sum_array_pairs,prompt_5,72,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1319301999174058,1.1740692230069545,1.241726400097832,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",1000,0.0061308000003919005,0.006762751999776811,0.01084540004376322,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",10000,0.06905490008648485,0.0732723730080761,0.10893720004241914,N/A
p4_sum_array_pairs,prompt_5,73,"['def funcImp(arg1, arg2):\n    num_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_count:\n            pair_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pair_count']",100000,1.1345779000548646,1.1746623629983515,1.3614067001035437,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",1000,0.006229500053450465,0.006739946999587119,0.0117948999395594,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",10000,0.0685263000195846,0.07262422299594619,0.08381600002758205,N/A
p4_sum_array_pairs,prompt_5,74,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            pair_count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return pair_count']",100000,1.1341462000273168,1.1812011750030798,1.4370998999802396,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return count_pairs']",1000,0.006145299994386733,0.006661957999458536,0.009246100089512765,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return count_pairs']",10000,0.06891180004458874,0.07361894900444894,0.09905239997897297,N/A
p4_sum_array_pairs,prompt_5,75,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    count_pairs = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_counts:\n            count_pairs += element_counts[complement]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return count_pairs']",100000,1.1398619000101462,1.1932500130031258,1.5487655999604613,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006190699990838766,0.007067588997306302,0.017283099936321378,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06929820007644594,0.0755187939980533,0.1109156000893563,N/A
p4_sum_array_pairs,prompt_5,76,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.141520900069736,1.1819524659938179,1.2959523999597877,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    nums = arg1\n    target_sum = arg2\n    num_count = {}\n    pairs_count = 0\n    for num in nums:\n        complement = target_sum - num\n        if complement in num_count:\n            pairs_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pairs_count']",1000,0.0062243000138551,0.006611481988802553,0.008764000027440488,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    nums = arg1\n    target_sum = arg2\n    num_count = {}\n    pairs_count = 0\n    for num in nums:\n        complement = target_sum - num\n        if complement in num_count:\n            pairs_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pairs_count']",10000,0.06948339997325093,0.07209430799703113,0.08182980003766716,N/A
p4_sum_array_pairs,prompt_5,77,"['def funcImp(arg1, arg2):\n    nums = arg1\n    target_sum = arg2\n    num_count = {}\n    pairs_count = 0\n    for num in nums:\n        complement = target_sum - num\n        if complement in num_count:\n            pairs_count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return pairs_count']",100000,1.1312664999859408,1.1996644329978152,1.7476233000634238,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",1000,0.0062833999982103705,0.006594798997975886,0.00795899995137006,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",10000,0.0699781000148505,0.07534323600004428,0.11734690004959702,N/A
p4_sum_array_pairs,prompt_5,78,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count']",100000,1.1377369000110775,1.2218286479986273,1.6980611999752,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",1000,0.006299600005149841,0.006924891996895895,0.010551100014708936,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",10000,0.06901360000483692,0.07303864300833084,0.10183289996348321,N/A
p4_sum_array_pairs,prompt_5,79,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count']",100000,1.1488964000018314,1.1784367220068817,1.255922200041823,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",1000,0.006029099924489856,0.0067092339997179805,0.010164899984374642,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",10000,0.06958839995786548,0.07264603299903684,0.08356739999726415,N/A
p4_sum_array_pairs,prompt_5,80,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",100000,1.134375900030136,1.1905211330007297,1.5665769000770524,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",1000,0.006243900046683848,0.006767371996538714,0.009227200062014163,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",10000,0.06823750003241003,0.07348766299779527,0.1230770000256598,N/A
p4_sum_array_pairs,prompt_5,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return pair_count']",100000,1.150025499984622,1.3534569860075134,2.1877834000624716,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",1000,0.006325399968773127,0.00687798299244605,0.010625499999150634,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",10000,0.07052859989926219,0.07594088799785823,0.1429722000611946,N/A
p4_sum_array_pairs,prompt_5,82,"['def funcImp(arg1, arg2):\n    num_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_map:\n            pair_count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return pair_count']",100000,1.152755600051023,1.2903051739989315,1.9443023999920115,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_counts:\n            pair_count += element_counts[required_value]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return pair_count']",1000,0.00621240003965795,0.006670257990481332,0.009968600003048778,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_counts:\n            pair_count += element_counts[required_value]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return pair_count']",10000,0.06987450004089624,0.07445660700206645,0.10276829998474568,N/A
p4_sum_array_pairs,prompt_5,83,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for element in arg1:\n        required_value = arg2 - element\n        if required_value in element_counts:\n            pair_count += element_counts[required_value]\n        if element in element_counts:\n            element_counts[element] += 1\n        else:\n            element_counts[element] = 1\n    return pair_count']",100000,1.1563324000453576,1.196945722004166,1.6531175000127405,N/A
p4_sum_array_pairs,prompt_5,84,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",1000,0.0062423000345006585,0.006809716002317145,0.012616100022569299,N/A
p4_sum_array_pairs,prompt_5,84,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",10000,0.06923270004335791,0.0735695219936315,0.12742899998556823,N/A
p4_sum_array_pairs,prompt_5,84,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",100000,1.1399901000550017,1.1716621150099673,1.2872660000575706,N/A
p4_sum_array_pairs,prompt_5,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006202799966558814,0.006836267003091052,0.014234200003556907,N/A
p4_sum_array_pairs,prompt_5,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06900300004053861,0.07335709200822749,0.09890290000475943,N/A
p4_sum_array_pairs,prompt_5,85,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1377270000521094,1.1693941969948356,1.2285876999376342,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",1000,0.006218800088390708,0.006644258006708696,0.00945280003361404,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",10000,0.06896469998173416,0.07282121999654918,0.08818930003326386,N/A
p4_sum_array_pairs,prompt_5,86,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count']",100000,1.1423249000217766,1.1714478730026168,1.2399999999906868,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count_pairs += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count_pairs']",1000,0.006234899978153408,0.006770858997479081,0.015171500039286911,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count_pairs += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count_pairs']",10000,0.06830609997268766,0.07306765799527057,0.10519430006388575,N/A
p4_sum_array_pairs,prompt_5,87,"['def funcImp(arg1, arg2):\n    seen = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count_pairs += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return count_pairs']",100000,1.1393656000727788,1.1767889459966683,1.3280094000510871,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",1000,0.006184500060044229,0.006579773005796596,0.009119200054556131,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",10000,0.06956680002622306,0.07394915700890124,0.08862100006081164,N/A
p4_sum_array_pairs,prompt_5,88,"['def funcImp(arg1, arg2):\n    complement_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count']",100000,1.1452403999865055,1.180329485995462,1.3078843000112101,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for x in arg1:\n        complement = arg2 - x\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if x in frequency:\n            frequency[x] += 1\n        else:\n            frequency[x] = 1\n    return pair_count']",1000,0.006090899929404259,0.007031438996782526,0.013474100036546588,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for x in arg1:\n        complement = arg2 - x\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if x in frequency:\n            frequency[x] += 1\n        else:\n            frequency[x] = 1\n    return pair_count']",10000,0.06902060005813837,0.0755826050043106,0.10471720003988594,N/A
p4_sum_array_pairs,prompt_5,89,"['def funcImp(arg1, arg2):\n    frequency = {}\n    pair_count = 0\n    for x in arg1:\n        complement = arg2 - x\n        if complement in frequency:\n            pair_count += frequency[complement]\n        if x in frequency:\n            frequency[x] += 1\n        else:\n            frequency[x] = 1\n    return pair_count']",100000,1.1423790999688208,1.1725312119966838,1.5095879998989403,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",1000,0.006195400026626885,0.006974497998598963,0.011764300055801868,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",10000,0.06887499999720603,0.0741996659967117,0.13299610000103712,N/A
p4_sum_array_pairs,prompt_5,90,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            pair_count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return pair_count']",100000,1.1310583999147639,1.1728832379926462,1.3512348000658676,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006210100022144616,0.006664462996413931,0.009505499969236553,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06925030006095767,0.0768165369995404,0.2115343000041321,N/A
p4_sum_array_pairs,prompt_5,91,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1265649000415578,1.1861820970021655,1.5477309999987483,N/A
p4_sum_array_pairs,prompt_5,92,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006049199961125851,0.006713962996145711,0.013784199953079224,N/A
p4_sum_array_pairs,prompt_5,92,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.06819639995228499,0.07188898699940183,0.08991510001942515,N/A
p4_sum_array_pairs,prompt_5,92,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.137649199925363,1.1754035789985209,1.3176284999353811,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.00623299996368587,0.006807561989407986,0.012029999983496964,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.0701695999596268,0.07443943600053898,0.0976966000162065,N/A
p4_sum_array_pairs,prompt_5,93,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1454478999366984,1.1760670649958775,1.2992457000073045,N/A
p4_sum_array_pairs,prompt_5,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counts = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] += 1\n    return pair_count']",1000,0.010293699917383492,0.011019025999121367,0.02492360002361238,N/A
p4_sum_array_pairs,prompt_5,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counts = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] += 1\n    return pair_count']",10000,0.10737849993165582,0.11814225900918246,0.2035945999668911,N/A
p4_sum_array_pairs,prompt_5,94,"['from collections import defaultdict\n\ndef funcImp(arg1, arg2):\n    counts = defaultdict(int)\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        counts[num] += 1\n    return pair_count']",100000,1.603323100018315,1.6547476960008498,2.0995656000450253,N/A
p4_sum_array_pairs,prompt_5,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006351599935442209,0.0069736560026649385,0.014618900022469461,N/A
p4_sum_array_pairs,prompt_5,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.07055089995265007,0.07524924899917096,0.09863020002376288,N/A
p4_sum_array_pairs,prompt_5,95,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.1507127000950277,1.212001549002016,1.5774052999913692,N/A
p4_sum_array_pairs,prompt_5,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",1000,0.006234699976630509,0.00704932400258258,0.013926499988883734,N/A
p4_sum_array_pairs,prompt_5,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",10000,0.06888989999424666,0.07805130000109785,0.21606110001448542,N/A
p4_sum_array_pairs,prompt_5,96,"['def funcImp(arg1, arg2):\n    complement_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_count:\n            pair_count += complement_count[complement]\n        if num in complement_count:\n            complement_count[num] += 1\n        else:\n            complement_count[num] = 1\n    return pair_count']",100000,1.1517083999933675,1.196441641994752,1.327392500010319,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",1000,0.006259199930354953,0.006736710000550375,0.011221199994906783,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",10000,0.0704680000199005,0.07465489199268632,0.11241089995019138,N/A
p4_sum_array_pairs,prompt_5,97,"['def funcImp(arg1, arg2):\n    seen = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            pair_count += seen[complement]\n        if num in seen:\n            seen[num] += 1\n        else:\n            seen[num] = 1\n    return pair_count']",100000,1.1614029000047594,1.2024240070057568,1.3628073999425396,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    seen_elements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count']",1000,0.006257300032302737,0.00686047600582242,0.010767800034955144,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    seen_elements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count']",10000,0.06985820003319532,0.07381215299596079,0.09297060000244528,N/A
p4_sum_array_pairs,prompt_5,98,"['def funcImp(arg1, arg2):\n    seen_elements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count']",100000,1.1359200000297278,1.1902164249983616,1.2624640999129042,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for current in arg1:\n        target = arg2 - current\n        if target in element_count:\n            pair_count += element_count[target]\n        if current in element_count:\n            element_count[current] += 1\n        else:\n            element_count[current] = 1\n    return pair_count']",1000,0.006303600035607815,0.006954512995434925,0.0100778000196442,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for current in arg1:\n        target = arg2 - current\n        if target in element_count:\n            pair_count += element_count[target]\n        if current in element_count:\n            element_count[current] += 1\n        else:\n            element_count[current] = 1\n    return pair_count']",10000,0.06987070001196116,0.0747439450060483,0.10034610005095601,N/A
p4_sum_array_pairs,prompt_5,99,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for current in arg1:\n        target = arg2 - current\n        if target in element_count:\n            pair_count += element_count[target]\n        if current in element_count:\n            element_count[current] += 1\n        else:\n            element_count[current] = 1\n    return pair_count']",100000,1.15458959992975,1.199020883999765,1.265690099913627,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    complement_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_counts:\n            pair_count += complement_counts[complement]\n        if num in complement_counts:\n            complement_counts[num] += 1\n        else:\n            complement_counts[num] = 1\n    return pair_count']",1000,0.006369999959133565,0.0069581189914606515,0.013441300019621849,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    complement_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_counts:\n            pair_count += complement_counts[complement]\n        if num in complement_counts:\n            complement_counts[num] += 1\n        else:\n            complement_counts[num] = 1\n    return pair_count']",10000,0.06877320003695786,0.07598080899799242,0.1068494999781251,N/A
p4_sum_array_pairs,prompt_5,100,"['def funcImp(arg1, arg2):\n    complement_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_counts:\n            pair_count += complement_counts[complement]\n        if num in complement_counts:\n            complement_counts[num] += 1\n        else:\n            complement_counts[num] = 1\n    return pair_count']",100000,1.1529439999721944,1.1970304910012055,1.3225248999660835,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.006353799952194095,0.006946155002806336,0.012155700009316206,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.06978269992396235,0.07453052699915133,0.09722650004550815,N/A
p4_sum_array_pairs,prompt_6,1,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1468120000790805,1.2008403619984165,1.4563869999255985,N/A
p4_sum_array_pairs,prompt_6,2,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,2,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,2,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\nexample_array = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006238499889150262,0.006757731997640804,0.009473900077864528,N/A
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\nexample_array = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.0687560000224039,0.07441756299696863,0.10329029988497496,N/A
p4_sum_array_pairs,prompt_6,3,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\nexample_array = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1451008999720216,1.200617860996863,1.2972565999953076,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",1000,0.006221899995580316,0.006720728991786018,0.01005399995483458,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",10000,0.07009880000259727,0.07650862299837172,0.10992610000539571,N/A
p4_sum_array_pairs,prompt_6,4,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ngiven_sum = 6\npass']",100000,1.1550948000513017,1.1997287720034364,1.3319671999197453,N/A
p4_sum_array_pairs,prompt_6,5,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",1000,0.006195700028911233,0.006829321999102831,0.01136540004517883,N/A
p4_sum_array_pairs,prompt_6,5,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",10000,0.06976370001211762,0.07365168500342406,0.09583750006277114,N/A
p4_sum_array_pairs,prompt_6,5,"['def funcImp(arg1, arg2):\n    num_counts = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count_pairs += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count_pairs']",100000,1.1509714999701828,1.2109750330005773,1.5427861999487504,N/A
p4_sum_array_pairs,prompt_6,6,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,6,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,6,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n\n    def count_pairs_with_sum(arr, target_sum):\n        counts = {}\n        pair_count = 0\n        for num in arr:\n            complement = target_sum - num\n            if complement in counts:\n                pair_count += counts[complement]\n            if num in counts:\n                counts[num] += 1\n            else:\n                counts[num] = 1\n        return pair_count\n    return count_pairs_with_sum(arg1, arg2)']",1000,0.006041900021955371,0.006939825001172722,0.01187380007468164,N/A
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n\n    def count_pairs_with_sum(arr, target_sum):\n        counts = {}\n        pair_count = 0\n        for num in arr:\n            complement = target_sum - num\n            if complement in counts:\n                pair_count += counts[complement]\n            if num in counts:\n                counts[num] += 1\n            else:\n                counts[num] = 1\n        return pair_count\n    return count_pairs_with_sum(arg1, arg2)']",10000,0.06889009999576956,0.07544491399545222,0.1437597000040114,N/A
p4_sum_array_pairs,prompt_6,7,"['def funcImp(arg1, arg2):\n\n    def count_pairs_with_sum(arr, target_sum):\n        counts = {}\n        pair_count = 0\n        for num in arr:\n            complement = target_sum - num\n            if complement in counts:\n                pair_count += counts[complement]\n            if num in counts:\n                counts[num] += 1\n            else:\n                counts[num] = 1\n        return pair_count\n    return count_pairs_with_sum(arg1, arg2)']",100000,1.152462000027299,1.1998426360066514,1.2878229999914765,N/A
p4_sum_array_pairs,prompt_6,8,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",1000,0.006262999959290028,0.006704053010325879,0.008623200003057718,N/A
p4_sum_array_pairs,prompt_6,8,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",10000,0.06817700003739446,0.07511168999713845,0.10225819994229823,N/A
p4_sum_array_pairs,prompt_6,8,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pair_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pair_count']",100000,1.146598199964501,1.2033761950058397,1.633206499973312,N/A
p4_sum_array_pairs,prompt_6,9,"['def funcImp(arg1, arg2):\n    elements = set()\n    pairs_count = 0\n    for num in arg1:\n        required = arg2 - num\n        if required in elements:\n            pairs_count += 1\n        elements.add(num)\n    return pairs_count']",1000,0.004584799986332655,0.00528888599597849,0.010522399912588298,N/A
p4_sum_array_pairs,prompt_6,9,"['def funcImp(arg1, arg2):\n    elements = set()\n    pairs_count = 0\n    for num in arg1:\n        required = arg2 - num\n        if required in elements:\n            pairs_count += 1\n        elements.add(num)\n    return pairs_count']",10000,0.05627880000974983,0.061230854995083066,0.08192989998497069,N/A
p4_sum_array_pairs,prompt_6,9,"['def funcImp(arg1, arg2):\n    elements = set()\n    pairs_count = 0\n    for num in arg1:\n        required = arg2 - num\n        if required in elements:\n            pairs_count += 1\n        elements.add(num)\n    return pairs_count']",100000,0.9160396000370383,0.9622006630036049,1.1031161999562755,N/A
p4_sum_array_pairs,prompt_6,10,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",1000,0.006246300064958632,0.007380702000809833,0.024281300022266805,N/A
p4_sum_array_pairs,prompt_6,10,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",10000,0.06923459994141012,0.0780759470013436,0.19949660007841885,N/A
p4_sum_array_pairs,prompt_6,10,"['def funcImp(arg1, arg2):\n    counts = {}\n    pairs_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            pairs_count += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return pairs_count']",100000,1.1518300001043826,1.1963548339973205,1.380458900006488,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    elements_needed = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in elements_needed:\n            count += elements_needed[complement]\n        if element in elements_needed:\n            elements_needed[element] += 1\n        else:\n            elements_needed[element] = 1\n    return count']",1000,0.0061916999984532595,0.006880973009392619,0.01143800001591444,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    elements_needed = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in elements_needed:\n            count += elements_needed[complement]\n        if element in elements_needed:\n            elements_needed[element] += 1\n        else:\n            elements_needed[element] = 1\n    return count']",10000,0.0693085000384599,0.07597017199615948,0.10474229999817908,N/A
p4_sum_array_pairs,prompt_6,11,"['def funcImp(arg1, arg2):\n    elements_needed = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in elements_needed:\n            count += elements_needed[complement]\n        if element in elements_needed:\n            elements_needed[element] += 1\n        else:\n            elements_needed[element] = 1\n    return count']",100000,1.1554478999460116,1.2422209249960725,1.6512475999770686,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006278799963183701,0.0067408710042946044,0.009592800051905215,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06988670001737773,0.07263525600545108,0.09164130000863224,N/A
p4_sum_array_pairs,prompt_6,12,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1460634000832215,1.1893561980093363,1.2954010999528691,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006201699958182871,0.006579506994457915,0.00948959996458143,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.07008460001088679,0.075559457995696,0.17056869994848967,N/A
p4_sum_array_pairs,prompt_6,13,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.1480541999917477,1.2100917719956488,1.6411775999004021,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.00614720000885427,0.006665353998541832,0.009476099978201091,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06959580001421273,0.0744136350043118,0.097498600021936,N/A
p4_sum_array_pairs,prompt_6,14,"['def funcImp(arg1, arg2):\n    count = 0\n    dictionary = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in dictionary:\n            count += dictionary[complement]\n        if num in dictionary:\n            dictionary[num] += 1\n        else:\n            dictionary[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1472008000127971,1.1897468619979918,1.2964699999429286,N/A
p4_sum_array_pairs,prompt_6,15,"['array = [1, 5, 7, -1, 5]\nsum = 6']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,15,"['array = [1, 5, 7, -1, 5]\nsum = 6']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,15,"['array = [1, 5, 7, -1, 5]\nsum = 6']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",1000,0.006229500053450465,0.007116106003522873,0.019433900015428662,N/A
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",10000,0.06823289999738336,0.07549086799728684,0.235677000018768,N/A
p4_sum_array_pairs,prompt_6,16,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",100000,1.1350718999747187,1.2265438560012263,1.6114502999698743,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.00628619990311563,0.00736579600139521,0.010409499984234571,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.07097489992156625,0.07822440500603989,0.12394710001535714,N/A
p4_sum_array_pairs,prompt_6,17,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1808134999591857,1.2401678569964134,1.4873556999955326,N/A
p4_sum_array_pairs,prompt_6,18,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,18,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,18,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    if not arg1 or len(arg1) < 2:\n        return 0\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.0063325000228360295,0.007307051002280787,0.016417000093497336,N/A
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    if not arg1 or len(arg1) < 2:\n        return 0\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.0701456000097096,0.07678689000662416,0.16382440004963428,N/A
p4_sum_array_pairs,prompt_6,19,"['def funcImp(arg1, arg2):\n    if not arg1 or len(arg1) < 2:\n        return 0\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1750567998969927,1.2280915049964096,1.3529264000244439,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.00635170005261898,0.007088333007413894,0.014090999960899353,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.07025390001945198,0.07391504899715073,0.10417109995614737,N/A
p4_sum_array_pairs,prompt_6,20,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1804438999388367,1.2214801029930822,1.3334639000240713,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs']",1000,0.00641679996624589,0.0069482509908266364,0.012691499898210168,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs']",10000,0.07117889996152371,0.07476004099939018,0.09242150001227856,N/A
p4_sum_array_pairs,prompt_6,21,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs']",100000,1.178612699965015,1.2385993880056776,1.4990545000182465,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",1000,0.006317300023511052,0.006970076996367425,0.011663000099360943,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",10000,0.06992699997499585,0.07621964300167747,0.16400360001716763,N/A
p4_sum_array_pairs,prompt_6,22,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return count']",100000,1.1871980999130756,1.2548223539965693,1.6599063000176102,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",1000,0.006336000049486756,0.007101916007231921,0.011192600009962916,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",10000,0.07002410001587123,0.07695732499822043,0.10984609997831285,N/A
p4_sum_array_pairs,prompt_6,23,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\nresult = funcImp([1, 5, 7, -1, 5], 6)\npass']",100000,1.1844394000945613,1.2294008019950706,1.4260875000618398,N/A
p4_sum_array_pairs,prompt_6,24,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,24,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,24,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        partner = arg2 - num\n        if partner in element_counts:\n            pair_count += element_counts[partner]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",1000,0.006427199929021299,0.007172728994628414,0.011190999997779727,N/A
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        partner = arg2 - num\n        if partner in element_counts:\n            pair_count += element_counts[partner]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",10000,0.0696790999500081,0.07584124400280416,0.09690070000942796,N/A
p4_sum_array_pairs,prompt_6,25,"['def funcImp(arg1, arg2):\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        partner = arg2 - num\n        if partner in element_counts:\n            pair_count += element_counts[partner]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",100000,1.1707822000607848,1.2327380240045023,1.4306364000076428,N/A
p4_sum_array_pairs,prompt_6,26,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,26,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,26,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006398900062777102,0.0073397320066578686,0.016966499970294535,N/A
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.07058800000231713,0.07604951699846424,0.12198669998906553,N/A
p4_sum_array_pairs,prompt_6,27,"['def funcImp(arg1, arg2):\n    count_dict = {}\n    count_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_dict:\n            count_pairs += count_dict[complement]\n        if num in count_dict:\n            count_dict[num] += 1\n        else:\n            count_dict[num] = 1\n    return count_pairs\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1872324000578374,1.2323828829999548,1.3631828998913988,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.0062960999784991145,0.006930747994920239,0.011131399893201888,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06993240001611412,0.07651943300268613,0.10805600008461624,N/A
p4_sum_array_pairs,prompt_6,28,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1699209000216797,1.2225191710051149,1.8292015000479296,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.0063316000159829855,0.006918122001225129,0.010006600059568882,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.071880399947986,0.08045394399901852,0.13001230009831488,N/A
p4_sum_array_pairs,prompt_6,29,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if element in element_count:\n            element_count[element] += 1\n        else:\n            element_count[element] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1566355000250041,1.2333525730017572,1.6078671000432223,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",1000,0.0059649000177159905,0.006655982997035608,0.009309499990195036,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",10000,0.06928439997136593,0.07473494099802337,0.10043490002863109,N/A
p4_sum_array_pairs,prompt_6,30,"['def funcImp(arg1, arg2):\n    complements = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complements:\n            count += complements[complement]\n        if num in complements:\n            complements[num] += 1\n        else:\n            complements[num] = 1\n    return count']",100000,1.1520199000369757,1.2091753750108183,1.5856356000294909,N/A
p4_sum_array_pairs,prompt_6,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006223300006240606,0.006743531001266092,0.01109569997061044,N/A
p4_sum_array_pairs,prompt_6,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.0689237000187859,0.07392337899771519,0.0936883999966085,N/A
p4_sum_array_pairs,prompt_6,31,"['def funcImp(arg1, arg2):\n    count = 0\n    hash_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1450172000331804,1.1987866960000246,1.3442321000620723,N/A
p4_sum_array_pairs,prompt_6,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006237299996428192,0.006818136005895212,0.011733500054106116,N/A
p4_sum_array_pairs,prompt_6,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.06951390008907765,0.07464847200084478,0.10367609991226345,N/A
p4_sum_array_pairs,prompt_6,32,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1473359999945387,1.2079052870010492,1.34421399992425,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count\npass']",1000,0.006297999992966652,0.006700527998618782,0.010516400099731982,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count\npass']",10000,0.06856849999167025,0.07443947898922489,0.10170370002742857,N/A
p4_sum_array_pairs,prompt_6,33,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            pair_count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return pair_count\npass']",100000,1.1487226999597624,1.2055789870012086,1.4261856999946758,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",1000,0.0062562000239267945,0.007302794996649027,0.012071099947206676,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",10000,0.07038020004983991,0.07613169699907303,0.1791793000884354,N/A
p4_sum_array_pairs,prompt_6,34,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hash_map:\n            count += hash_map[complement]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count']",100000,1.1505440000910312,1.1980674819974229,1.325205700006336,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            count += hash_map[complement]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",1000,0.006249999976716936,0.006724885997828096,0.01057290006428957,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            count += hash_map[complement]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",10000,0.07036419992800802,0.07441344799706712,0.11208640004042536,N/A
p4_sum_array_pairs,prompt_6,35,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in hash_map:\n            count += hash_map[complement]\n        if element in hash_map:\n            hash_map[element] += 1\n        else:\n            hash_map[element] = 1\n    return count']",100000,1.1499426000518724,1.2097210319980514,1.6671801999909803,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.006237299996428192,0.007117507001385093,0.014897000044584274,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06994999991729856,0.07518147900002077,0.09567859990056604,N/A
p4_sum_array_pairs,prompt_6,36,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.155194199993275,1.2093450860015582,1.4639809998916462,N/A
p4_sum_array_pairs,prompt_6,37,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",1000,0.006264700088649988,0.0072474640037398785,0.01628730003722012,N/A
p4_sum_array_pairs,prompt_6,37,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",10000,0.06928850000258535,0.07621732100145891,0.147708399919793,N/A
p4_sum_array_pairs,prompt_6,37,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    seen_elements = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen_elements:\n            count_pairs += seen_elements[complement]\n        if num in seen_elements:\n            seen_elements[num] += 1\n        else:\n            seen_elements[num] = 1\n    return count_pairs']",100000,1.1507321000099182,1.2283637550007551,1.5909543000161648,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",1000,0.006244900054298341,0.007128477010410279,0.01277460006531328,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",10000,0.06864389998372644,0.0734829710063059,0.09681829996407032,N/A
p4_sum_array_pairs,prompt_6,38,"['def funcImp(arg1, arg2):\n    count = 0\n    frequency = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in frequency:\n            count += frequency[complement]\n        if num in frequency:\n            frequency[num] += 1\n        else:\n            frequency[num] = 1\n    return count']",100000,1.1373632000759244,1.2020885510009247,1.80224490002729,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = target_sum - number\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if number in num_dict:\n            num_dict[number] += 1\n        else:\n            num_dict[number] = 1\n    return pair_count\narg1 = [1, 2, 3, 4, 3]\narg2 = 6\npass']",1000,0.006254800013266504,0.006939598999451846,0.011026299907825887,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = target_sum - number\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if number in num_dict:\n            num_dict[number] += 1\n        else:\n            num_dict[number] = 1\n    return pair_count\narg1 = [1, 2, 3, 4, 3]\narg2 = 6\npass']",10000,0.07023089996073395,0.07419231400941499,0.11193719995208085,N/A
p4_sum_array_pairs,prompt_6,39,"['def funcImp(arg1, arg2):\n    target_sum = arg2\n    num_dict = {}\n    pair_count = 0\n    for number in arg1:\n        complement = target_sum - number\n        if complement in num_dict:\n            pair_count += num_dict[complement]\n        if number in num_dict:\n            num_dict[number] += 1\n        else:\n            num_dict[number] = 1\n    return pair_count\narg1 = [1, 2, 3, 4, 3]\narg2 = 6\npass']",100000,1.1533920000074431,1.2145519479934592,1.4471266999607906,N/A
p4_sum_array_pairs,prompt_6,40,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,40,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,40,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006341799977235496,0.0072181080013979226,0.013690499938093126,N/A
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06976769992616028,0.07933830899768508,0.18454340007156134,N/A
p4_sum_array_pairs,prompt_6,41,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1541515999706462,1.2024690219946206,1.6185516000259668,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006307999952696264,0.006916212005307898,0.01429289998486638,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06976579991169274,0.07365042000543326,0.09656159998849034,N/A
p4_sum_array_pairs,prompt_6,42,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1511898000026122,1.2156415430025662,1.3191036999924108,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004580099950544536,0.005045775986509397,0.007350799976848066,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05851420003455132,0.06272262700134888,0.08939979993738234,N/A
p4_sum_array_pairs,prompt_6,43,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.9198239000979811,0.9763130059977994,1.119860599981621,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count\npass']",1000,0.006268800003454089,0.00691154599422589,0.010611800011247396,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count\npass']",10000,0.0693936999887228,0.07442654300481082,0.0954201000276953,N/A
p4_sum_array_pairs,prompt_6,44,"['def funcImp(arg1, arg2):\n    count = 0\n    element_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_map:\n            count += element_map[complement]\n        if num in element_map:\n            element_map[num] += 1\n        else:\n            element_map[num] = 1\n    return count\npass']",100000,1.1442813000176102,1.195107921998715,1.5020985000301152,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",1000,0.006085100001655519,0.006606420000316575,0.008428099914453924,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",10000,0.06836779997684062,0.07263884900370612,0.14189379999879748,N/A
p4_sum_array_pairs,prompt_6,45,"['def funcImp(arg1, arg2):\n    if not arg1:\n        return 0\n    element_counts = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_counts:\n            pair_count += element_counts[complement]\n        if num in element_counts:\n            element_counts[num] += 1\n        else:\n            element_counts[num] = 1\n    return pair_count']",100000,1.1353586999466643,1.1850757539912593,1.3939751000143588,N/A
p4_sum_array_pairs,prompt_6,46,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.0062701000133529305,0.006783115993021056,0.009224100038409233,N/A
p4_sum_array_pairs,prompt_6,46,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.0701399000827223,0.0740549959964119,0.09952149994205683,N/A
p4_sum_array_pairs,prompt_6,46,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1449564000358805,1.1838411339966115,1.3898360000457615,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006284800008870661,0.006885259000118822,0.010753300040960312,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.0692524000769481,0.07340295499307103,0.09797070000786334,N/A
p4_sum_array_pairs,prompt_6,47,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1374202999286354,1.1783705939911306,1.3349541000789031,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",1000,0.006226099911145866,0.007091148992767558,0.017585700028575957,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",10000,0.06813140003941953,0.0728242980025243,0.09219900006428361,N/A
p4_sum_array_pairs,prompt_6,48,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count']",100000,1.1279501999961212,1.1759546869958286,1.316569700022228,N/A
p4_sum_array_pairs,prompt_6,49,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,49,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,49,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,50,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,50,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,50,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,51,"['def funcImp(arr, target_sum):\n    count = 0\n    hash_table = {}\n    for num in arr:\n        complement = target_sum - num\n        if complement in hash_table:\n            count += hash_table[complement]\n        if num in hash_table:\n            hash_table[num] += 1\n        else:\n            hash_table[num] = 1\n    return count']",1000,0.006200500065460801,0.0068033130106050525,0.011199499946087599,N/A
p4_sum_array_pairs,prompt_6,51,"['def funcImp(arr, target_sum):\n    count = 0\n    hash_table = {}\n    for num in arr:\n        complement = target_sum - num\n        if complement in hash_table:\n            count += hash_table[complement]\n        if num in hash_table:\n            hash_table[num] += 1\n        else:\n            hash_table[num] = 1\n    return count']",10000,0.0692696999758482,0.07488144800183363,0.09960039996076375,N/A
p4_sum_array_pairs,prompt_6,51,"['def funcImp(arr, target_sum):\n    count = 0\n    hash_table = {}\n    for num in arr:\n        complement = target_sum - num\n        if complement in hash_table:\n            count += hash_table[complement]\n        if num in hash_table:\n            hash_table[num] += 1\n        else:\n            hash_table[num] = 1\n    return count']",100000,1.1444931000005454,1.1808030099980533,1.2591989999637008,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            count += hash_map[diff]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\npass']",1000,0.006023599999025464,0.00668567699380219,0.008796999929472804,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            count += hash_map[diff]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\npass']",10000,0.06953229999635369,0.07345855599385687,0.08818530000280589,N/A
p4_sum_array_pairs,prompt_6,52,"['def funcImp(arg1, arg2):\n    hash_map = {}\n    count = 0\n    for num in arg1:\n        diff = arg2 - num\n        if diff in hash_map:\n            count += hash_map[diff]\n        if num in hash_map:\n            hash_map[num] += 1\n        else:\n            hash_map[num] = 1\n    return count\npass']",100000,1.137410999974236,1.1773243449965958,1.3509855000302196,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.004301299923099577,0.004624328997451812,0.006107500055804849,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.05452110001351684,0.059261601004982366,0.09198909997940063,N/A
p4_sum_array_pairs,prompt_6,53,"['def funcImp(arg1, arg2):\n    seen = set()\n    count = 0\n    for num in arg1:\n        if arg2 - num in seen:\n            count += 1\n        seen.add(num)\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,0.8997103000292554,0.9446172819996719,1.042260600021109,N/A
p4_sum_array_pairs,prompt_6,54,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,54,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,54,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006215699948370457,0.0069647459988482294,0.012994099990464747,N/A
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.069581100018695,0.0739125459920615,0.10053469997365028,N/A
p4_sum_array_pairs,prompt_6,55,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.1487674999516457,1.1909478939988185,1.5501201999140903,N/A
p4_sum_array_pairs,prompt_6,56,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,56,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,56,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006351500051096082,0.0070054150046780705,0.012106799986213446,N/A
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06995700008701533,0.07323549499851652,0.0930991000495851,N/A
p4_sum_array_pairs,prompt_6,57,"['def funcImp(arg1, arg2):\n    counts = {}\n    pair_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in counts:\n            pair_count += counts[complement]\n        if number in counts:\n            counts[number] += 1\n        else:\n            counts[number] = 1\n    return pair_count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1519441000418738,1.2131771329976617,1.8649833000963554,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",1000,0.006262499955482781,0.0070485500001814215,0.016378100030124187,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",10000,0.06779170001391321,0.07537289599888027,0.19559390004724264,N/A
p4_sum_array_pairs,prompt_6,58,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    frequency_map = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in frequency_map:\n            count_pairs += frequency_map[complement]\n        if number in frequency_map:\n            frequency_map[number] += 1\n        else:\n            frequency_map[number] = 1\n    return count_pairs']",100000,1.1615643999539316,1.2275622150080745,1.6012232000939548,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count\narg1 = [1, 5, 3, 7, 9]\narg2 = 10\npass']",1000,0.006379699916578829,0.007251874001231045,0.012209600070491433,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count\narg1 = [1, 5, 3, 7, 9]\narg2 = 10\npass']",10000,0.0705375000834465,0.07825340899755247,0.18411799997556955,N/A
p4_sum_array_pairs,prompt_6,59,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in freq:\n            count += freq[complement]\n        if number in freq:\n            freq[number] += 1\n        else:\n            freq[number] = 1\n    return count\narg1 = [1, 5, 3, 7, 9]\narg2 = 10\npass']",100000,1.1656347999814898,1.2109306260058657,1.3218309000367299,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array whose sum equals a given target.\n    \n    :param arg1: List of integers.\n    :param arg2: Target sum integer.\n    :return: Count of pairs whose sum equals the target sum.\n    """"""\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\npass']",1000,0.0045622000470757484,0.004971008996944875,0.0074384999461472034,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array whose sum equals a given target.\n    \n    :param arg1: List of integers.\n    :param arg2: Target sum integer.\n    :return: Count of pairs whose sum equals the target sum.\n    """"""\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\npass']",10000,0.05763340007979423,0.06126508300774731,0.08635700005106628,N/A
p4_sum_array_pairs,prompt_6,60,"['def funcImp(arg1, arg2):\n    """"""\n    Function to count pairs of elements in an array whose sum equals a given target.\n    \n    :param arg1: List of integers.\n    :param arg2: Target sum integer.\n    :return: Count of pairs whose sum equals the target sum.\n    """"""\n    seen = set()\n    count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in seen:\n            count += 1\n        seen.add(number)\n    return count\npass']",100000,0.9151154999854043,0.9836205069976859,1.3643640000373125,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006112399976700544,0.0066780750034376975,0.010276100016199052,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.06848350004293025,0.07512143999803811,0.11585169995669276,N/A
p4_sum_array_pairs,prompt_6,61,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in count_map:\n            pair_count += count_map[complement]\n        if num in count_map:\n            count_map[num] += 1\n        else:\n            count_map[num] = 1\n    return pair_count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1657893999945372,1.2123674260010011,1.3212197999237105,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in freq:\n            count += freq[complement]\n        if element in freq:\n            freq[element] += 1\n        else:\n            freq[element] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6']",1000,0.0061055999249219894,0.007036545003065839,0.018644100055098534,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in freq:\n            count += freq[complement]\n        if element in freq:\n            freq[element] += 1\n        else:\n            freq[element] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6']",10000,0.06937430007383227,0.07511984900338575,0.118887500022538,N/A
p4_sum_array_pairs,prompt_6,62,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for element in arg1:\n        complement = arg2 - element\n        if complement in freq:\n            count += freq[complement]\n        if element in freq:\n            freq[element] += 1\n        else:\n            freq[element] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6']",100000,1.1652243999997154,1.2215284620085731,1.4855430000461638,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.0064310000743716955,0.0070131480088457465,0.013468599994666874,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06991659989580512,0.07605475200689397,0.1719784999731928,N/A
p4_sum_array_pairs,prompt_6,63,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1583906000014395,1.201869713999331,1.2984143999638036,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",1000,0.006911500007845461,0.007767200996167958,0.012092599994502962,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",10000,0.07500149996485561,0.08160464400309138,0.11111759999766946,N/A
p4_sum_array_pairs,prompt_6,64,"['def funcImp(arg1, arg2):\n    count_map = {}\n    pair_count = 0\n    for num in arg1:\n        target = arg2 - num\n        if target in count_map:\n            pair_count += count_map[target]\n        count_map[num] = count_map.get(num, 0) + 1\n    return pair_count']",100000,1.218261900008656,1.2660921009979211,1.3567732999799773,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_dict:\n            count += complement_dict[complement]\n        if num in complement_dict:\n            complement_dict[num] += 1\n        else:\n            complement_dict[num] = 1\n    return count']",1000,0.006274300045333803,0.0070513230061624195,0.01442650007084012,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_dict:\n            count += complement_dict[complement]\n        if num in complement_dict:\n            complement_dict[num] += 1\n        else:\n            complement_dict[num] = 1\n    return count']",10000,0.0687017000745982,0.07508736700168811,0.10583219991531223,N/A
p4_sum_array_pairs,prompt_6,65,"['def funcImp(arg1, arg2):\n    count = 0\n    complement_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_dict:\n            count += complement_dict[complement]\n        if num in complement_dict:\n            complement_dict[num] += 1\n        else:\n            complement_dict[num] = 1\n    return count']",100000,1.14818080002442,1.21643968999153,1.3469604999991134,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\npass']",1000,0.0062423000345006585,0.0068485610000789164,0.011528000002726912,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\npass']",10000,0.0678479999769479,0.07538674400304445,0.108912100084126,N/A
p4_sum_array_pairs,prompt_6,66,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\npass']",100000,1.1573623000876978,1.2068545460118911,1.3570094000315294,N/A
p4_sum_array_pairs,prompt_6,67,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,67,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,67,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,68,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,68,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,68,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006280200090259314,0.006992670997278765,0.01211520005017519,N/A
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06986709998454899,0.07531192500027828,0.11165660002734512,N/A
p4_sum_array_pairs,prompt_6,69,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1778405000222847,1.2208290819998364,1.3500267999479547,N/A
p4_sum_array_pairs,prompt_6,70,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,70,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,70,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,71,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,71,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,71,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    elements_set = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_set:\n            count += 1\n        else:\n            elements_set.add(num)\n    return count']",1000,0.004587400006130338,0.005139697995036841,0.008814400061964989,N/A
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    elements_set = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_set:\n            count += 1\n        else:\n            elements_set.add(num)\n    return count']",10000,0.0572489999467507,0.061348083002958444,0.10084669990465045,N/A
p4_sum_array_pairs,prompt_6,72,"['def funcImp(arg1, arg2):\n    elements_set = set()\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elements_set:\n            count += 1\n        else:\n            elements_set.add(num)\n    return count']",100000,0.92577520001214,0.9781226759997662,1.2891039999667555,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006134600029326975,0.006781950005097315,0.011360700009390712,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06902299995999783,0.07444782699574716,0.10864420002326369,N/A
p4_sum_array_pairs,prompt_6,73,"['def funcImp(arg1, arg2):\n    freq_map = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.160101699992083,1.2074627680017147,1.262509600026533,N/A
p4_sum_array_pairs,prompt_6,74,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,74,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,74,"['arr = [1, 5, 7, -1, 5]\nsum = 6']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.0062605999410152435,0.006678334000753239,0.008319900021888316,N/A
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.0700941999675706,0.07686719499877653,0.110281000030227,N/A
p4_sum_array_pairs,prompt_6,75,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1539079000940546,1.2105294349999167,1.4055480000097305,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006210400024428964,0.006758820004761219,0.01044990005902946,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06953080010134727,0.07481273100711405,0.10721429996192455,N/A
p4_sum_array_pairs,prompt_6,76,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.146273099933751,1.2316133180027828,1.7639478999190032,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",1000,0.006228099926374853,0.0069440459948964415,0.01381599996238947,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",10000,0.06867189996410161,0.07674245800357311,0.10763230000156909,N/A
p4_sum_array_pairs,prompt_6,77,"['def funcImp(arg1, arg2):\n    hashmap = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count\narg1 = [1, 5, 7, -1, 5]\narg2 = 6\npass']",100000,1.1629520999267697,1.221714371002745,1.611340899951756,N/A
p4_sum_array_pairs,prompt_6,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",1000,0.004546900046989322,0.005120016997680068,0.010982700041495264,N/A
p4_sum_array_pairs,prompt_6,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",10000,0.05813659995328635,0.06302768699126318,0.08895339991431683,N/A
p4_sum_array_pairs,prompt_6,78,"['def funcImp(arg1, arg2):\n    count = 0\n    seen = set()\n    for num in arg1:\n        complement = arg2 - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count']",100000,0.916895299917087,0.9852575060003437,1.0930461999960244,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",1000,0.006385899963788688,0.00747162499697879,0.021490299957804382,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",10000,0.06904530001338571,0.07543651699670591,0.12106209993362427,N/A
p4_sum_array_pairs,prompt_6,79,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count']",100000,1.1689511999720708,1.2172285269992427,1.3230930999852717,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006274500046856701,0.006900054001016542,0.015882099978625774,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.07022599992342293,0.07784922500490211,0.16365000000223517,N/A
p4_sum_array_pairs,prompt_6,80,"['def funcImp(arg1, arg2):\n    count = 0\n    num_map = {}\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in num_map:\n            count += num_map[complement]\n        if num in num_map:\n            num_map[num] += 1\n        else:\n            num_map[num] = 1\n    return count\narray = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.1645518000004813,1.2298367179988419,1.5708823999157175,N/A
p4_sum_array_pairs,prompt_6,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",1000,0.00633969996124506,0.006956963000120595,0.01231959997676313,N/A
p4_sum_array_pairs,prompt_6,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",10000,0.06983020005282015,0.07752678000251763,0.17394670005887747,N/A
p4_sum_array_pairs,prompt_6,81,"['def funcImp(arg1, arg2):\n    element_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_count:\n            pair_count += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return pair_count']",100000,1.1588738999562338,1.2286466350010596,1.4878211999312043,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if num in element_dict:\n            element_dict[num] += 1\n        else:\n            element_dict[num] = 1\n    return pair_count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",1000,0.006279499968513846,0.006861501006642357,0.011925099999643862,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if num in element_dict:\n            element_dict[num] += 1\n        else:\n            element_dict[num] = 1\n    return pair_count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",10000,0.0691477000946179,0.07415222799754702,0.1042678999947384,N/A
p4_sum_array_pairs,prompt_6,82,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if num in element_dict:\n            element_dict[num] += 1\n        else:\n            element_dict[num] = 1\n    return pair_count\narray = [1, 5, 7, -1, 5]\nsum_value = 6\npass']",100000,1.144332299940288,1.1916887240007055,1.4648319000843912,N/A
p4_sum_array_pairs,prompt_6,83,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,83,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,83,"['def naive_count_pairs(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    total_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            total_pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return total_pairs']",1000,0.006176900002174079,0.007297252004500479,0.016061399946920574,N/A
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    total_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            total_pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return total_pairs']",10000,0.06933029997162521,0.07467035599984229,0.10971929994411767,N/A
p4_sum_array_pairs,prompt_6,84,"['def funcImp(arg1, arg2):\n    counts = {}\n    total_pairs = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in counts:\n            total_pairs += counts[complement]\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    return total_pairs']",100000,1.1448699000757188,1.186214855001308,1.2980966999894008,N/A
p4_sum_array_pairs,prompt_6,85,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",1000,0.006324500078335404,0.006734039004659281,0.00818440003786236,N/A
p4_sum_array_pairs,prompt_6,85,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",10000,0.06916259997524321,0.0744902870117221,0.09561600000597537,N/A
p4_sum_array_pairs,prompt_6,85,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in hashmap:\n            count += hashmap[complement]\n        if num in hashmap:\n            hashmap[num] += 1\n        else:\n            hashmap[num] = 1\n    return count']",100000,1.143943200004287,1.1866654970031232,1.317837700014934,N/A
p4_sum_array_pairs,prompt_6,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006249000085517764,0.006658538000192493,0.010038800071924925,N/A
p4_sum_array_pairs,prompt_6,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06848009990062565,0.07448510499321856,0.1300321000162512,N/A
p4_sum_array_pairs,prompt_6,86,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1457421999657527,1.1987966470071114,1.7861301000230014,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",1000,0.006259200046770275,0.006693918994860723,0.00979929999448359,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",10000,0.06899880000855774,0.07602208299329505,0.11960460001137108,N/A
p4_sum_array_pairs,prompt_6,87,"['def funcImp(arg1, arg2):\n    count = 0\n    element_count = {}\n    for number in arg1:\n        complement = arg2 - number\n        if complement in element_count:\n            count += element_count[complement]\n        if number in element_count:\n            element_count[number] += 1\n        else:\n            element_count[number] = 1\n    return count']",100000,1.1595969999907538,1.2401556999981402,1.6497693000128493,N/A
p4_sum_array_pairs,prompt_6,88,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count\npass']",1000,0.006391900009475648,0.007079100996488705,0.01669459999538958,N/A
p4_sum_array_pairs,prompt_6,88,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count\npass']",10000,0.07002330000977963,0.07494144099997356,0.09280250000301749,N/A
p4_sum_array_pairs,prompt_6,88,"['def funcImp(arg1, arg2):\n    elem_count = {}\n    pair_count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in elem_count:\n            pair_count += elem_count[complement]\n        if num in elem_count:\n            elem_count[num] += 1\n        else:\n            elem_count[num] = 1\n    return pair_count\npass']",100000,1.176859200000763,1.2320014480047394,1.3091485999757424,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += hashmap.get(complement, 0)\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",1000,0.007721600006334484,0.008651366994017735,0.014909399906173348,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += hashmap.get(complement, 0)\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",10000,0.08335090009495616,0.0906757659977302,0.1299334999639541,N/A
p4_sum_array_pairs,prompt_6,89,"['def funcImp(arg1, arg2):\n    count = 0\n    hashmap = {}\n    for num in arg1:\n        complement = arg2 - num\n        count += hashmap.get(complement, 0)\n        hashmap[num] = hashmap.get(num, 0) + 1\n    return count']",100000,1.3336714999750257,1.3955533159978222,1.5073470999486744,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",1000,0.0062654000939801335,0.00799751500133425,0.019905900000594556,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",10000,0.06922309997025877,0.07592264399398119,0.12087679991964251,N/A
p4_sum_array_pairs,prompt_6,90,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_dict = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_dict:\n            count += freq_dict[complement]\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return count']",100000,1.1867955999914557,1.2327762970002367,1.455022900016047,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            pairs_count += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return pairs_count']",1000,0.006299000000581145,0.006819593997206539,0.009533399948850274,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            pairs_count += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return pairs_count']",10000,0.0701876999810338,0.07670421600108966,0.1171167999273166,N/A
p4_sum_array_pairs,prompt_6,91,"['def funcImp(arg1, arg2):\n    elements_count = {}\n    pairs_count = 0\n    for number in arg1:\n        complement = arg2 - number\n        if complement in elements_count:\n            pairs_count += elements_count[complement]\n        if number in elements_count:\n            elements_count[number] += 1\n        else:\n            elements_count[number] = 1\n    return pairs_count']",100000,1.178388600004837,1.2481950589921325,1.6495445999316871,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return pair_count']",1000,0.006236499990336597,0.007023571991594508,0.015966599923558533,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return pair_count']",10000,0.07067499996628612,0.07703580699977465,0.11362389998976141,N/A
p4_sum_array_pairs,prompt_6,92,"['def funcImp(arg1, arg2):\n    element_dict = {}\n    pair_count = 0\n    for element in arg1:\n        complement = arg2 - element\n        if complement in element_dict:\n            pair_count += element_dict[complement]\n        if element in element_dict:\n            element_dict[element] += 1\n        else:\n            element_dict[element] = 1\n    return pair_count']",100000,1.185956999892369,1.2243564670020715,1.324753399938345,N/A
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",1000,0.006253100000321865,0.006962479995563626,0.012232900015078485,N/A
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",10000,0.07035669998731464,0.07750452799373306,0.1724494999507442,N/A
p4_sum_array_pairs,prompt_6,93,"['def funcImp(arg1, arg2):\n    element_count = {}\n    count_pairs = 0\n    target_sum = arg2\n    for num in arg1:\n        complement = target_sum - num\n        if complement in element_count:\n            count_pairs += element_count[complement]\n        if num in element_count:\n            element_count[num] += 1\n        else:\n            element_count[num] = 1\n    return count_pairs']",100000,1.1771516000153497,1.2363957469968592,1.385455800103955,N/A
p4_sum_array_pairs,prompt_6,94,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.006359799997881055,0.0070126819936558605,0.012288999976590276,N/A
p4_sum_array_pairs,prompt_6,94,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.07035840000025928,0.07611748300259932,0.12948519992642105,N/A
p4_sum_array_pairs,prompt_6,94,"['def funcImp(arg1, arg2):\n    count = 0\n    freq = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.1823782999999821,1.2239597009948922,1.3826265999814495,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",1000,0.00620790000539273,0.006914673006394878,0.01164100004825741,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",10000,0.06960500008426607,0.07523791300598531,0.10067209997214377,N/A
p4_sum_array_pairs,prompt_6,95,"['def funcImp(arg1, arg2):\n    freq = {}\n    count = 0\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq:\n            count += freq[complement]\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    return count']",100000,1.176757299923338,1.2156507390004117,1.292727900086902,N/A
p4_sum_array_pairs,prompt_6,96,"['def naive_method(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,96,"['def naive_method(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,96,"['def naive_method(arr, target_sum):\n    count = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,97,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",1000,0.006354900076985359,0.0074123700032942,0.015112200053408742,N/A
p4_sum_array_pairs,prompt_6,97,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",10000,0.07030600006692111,0.07691834000055678,0.12231979996431619,N/A
p4_sum_array_pairs,prompt_6,97,"['def funcImp(arg1, arg2):\n    count = 0\n    freq_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in freq_map:\n            count += freq_map[complement]\n        if num in freq_map:\n            freq_map[num] += 1\n        else:\n            freq_map[num] = 1\n    return count\narr = [1, 5, 7, -1, 5]\ntarget_sum = 6\npass']",100000,1.156883699935861,1.1968125560053158,1.2626539999619126,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count_pairs += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count_pairs']",1000,0.006222500000149012,0.006826894001569599,0.010820699972100556,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count_pairs += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count_pairs']",10000,0.06895689992234111,0.07323564600199461,0.10853980004321784,N/A
p4_sum_array_pairs,prompt_6,98,"['def funcImp(arg1, arg2):\n    count_pairs = 0\n    complement_map = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in complement_map:\n            count_pairs += complement_map[complement]\n        if num in complement_map:\n            complement_map[num] += 1\n        else:\n            complement_map[num] = 1\n    return count_pairs']",100000,1.1440390999196097,1.200375817999011,1.344259800040163,N/A
p4_sum_array_pairs,prompt_6,99,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",1000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,99,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",10000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,99,"['def count_pairs_naive(arr, target_sum):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == target_sum:\n                count += 1\n    return count']",100000,0,0,0,	 exception: funcImp function not found or not callable
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    num_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",1000,0.00627020001411438,0.006948734000325203,0.015299700084142387,N/A
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    num_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",10000,0.07031079998705536,0.07569887800375,0.11285200004931539,N/A
p4_sum_array_pairs,prompt_6,100,"['def funcImp(arg1, arg2):\n    count = 0\n    num_counts = {}\n    for num in arg1:\n        complement = arg2 - num\n        if complement in num_counts:\n            count += num_counts[complement]\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n    return count']",100000,1.152128400048241,1.1868163079989609,1.291587600018829,N/A
